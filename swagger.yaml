openapi: 3.0.0
servers:
  - url:                                       'https://api.neotomadb.org/'
    description:                               Neotoma production server.
  - url:                                       'https://api-dev.neotomadb.org/'
    description:                               Neotoma development server.
info:
  title:                                       Neotoma API
  version:                                     "2.0-oas3"
  description:                                 API Documentation for the Neotoma Paleoecological Database
  termsOfService:                              'no'
  contact:
    name:                                      Simon J Goring
    email:                                     goring@wisc.edu
    url:                                       'http://goring.org'
  license:
    name:                                      MIT
    url:                                       'https://opensource.org/licenses/MIT'
tags:
  - name:                                      Database tables
    description:                               Endpoints that access tables from Neotoma verbatim.
    externalDocs:
      url:                                     http://open.neotomadb.org/schemas/#Structure
  - name:                                      Chronology metadata
    description:                               Information about chronological controls and the models used to add the temporal component to records.
    externalDocs:
      url:                                     https://neotoma-manual.readthedocs.io/en/latest/tables_chron.html
  - name:                                      Contact metadata
    description:                               Information about Neotoma data contributors, authors and data analysts.
    externalDocs:
      url:                                     https://neotoma-manual.readthedocs.io/en/latest/tables_contacts.html
  - name:                                      Dataset metadata
    description:                               Information about site location and metadata specific to the individual dataset.
    externalDocs:
      url:                                     https://neotoma-manual.readthedocs.io/en/latest/tables_dataset.html
  - name:                                      Data download
    description:                               Full dataset download, including all sample data for a particular dataset.
    externalDocs:
      url:                                     https://neotoma-manual.readthedocs.io/en/latest/tables_samples.html
  - name:                                      Geopolitical metadata
    description:                               Information about the geopolitical units in which a site is located.
  - name:                                      Occurrence metadata
    description:                               A simplified data return, similar to the data download, but specific to a particular taxon, time or location.
  - name:                                      Pollen proportions
    description:                               For ease of use in online applications, pre-calculated pollen percentages for taxa, location or temporal bins.
  - name:                                      Publication metadata
    description:                               Formatted publication data related to Neotoma records.
    externalDocs:
      url:                                     https://neotoma-manual.readthedocs.io/en/latest/tables_publications.html
  - name:                                      Site metadata
    description:                               All metadata associated with a particular site with fossil records.
    externalDocs:
      url:                                     https://neotoma-manual.readthedocs.io/en/latest/tables_site.html
  - name:                                      Taxonomic metadata
    description:                               All available information about a particular taxon.
    externalDocs:
      url:                                     https://neotoma-manual.readthedocs.io/en/latest/tables_taxa.html
  - name:                                      v1.5
    description:                               All API endpoints associated with v1.5 of the Neotoma API.
    externalDocs:
      url:                                     http://github.com/NeotomaDB/api_nodetest
  - name:                                      v2.0
    description:                               All API endpoints associated with v2.0 of the Neotoma API.
    externalDocs:
      url:                                     http://github.com/NeotomaDB/api_nodetest
paths:
  /v1.5/apps/DatasetTypes:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: './yamlRef/schemas.yaml#/schemas/datasetTypes'
          description: Returns the set of dataset types supported by Neotoma.
      tags:
        - Database tables
        - v1.5
  /v1.5/apps/TaxaInDatasets:
    get:
      description: The set of all taxa, and a list of all the datasets in which each taxon appears.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: './yamlRef/schemas.yaml#/schemas/taxaInDatasets'
          description: An array of taxon identities with associated dataset IDs.
      summary: Lists all Neotoma taxa (alphebetically) and the dataset types in which the taxa appear.
      tags:
        - v1.5
  /v1.5/apps/collectionTypes:
    get:
      operationId: getCollTypes
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: './yamlRef/schemas.yaml#/schemas/collectionTypes'
          description: Returns the set of collectiontypes recorded in Neotoma.
      summary: Return the list of collection types.
      tags:
        - Database tables
        - v1.5
  /v1.5/data/contacts/{contactid}:
    get:
      description: Returns researcher contact information associated with a record.
      parameters:
        - description: Unique contact identifier.
          in: path
          name: contactid
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: './yamlRef/schemas.yaml#/schemas/contact'
          description: Contact
      summary: Contact information for Neotoma contributors.
      tags:
        - Contact metadata
        - v1.5
  /v1.5/data/datasets/{datasetid}:
    get:
      description: Returns information about Neotoma dataset
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/datasetidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: An array of datasets.
      summary: Dataset information.
      tags:
        - Dataset metadata
        - v1.5
  /v1.5/data/downloads/{datasetid}:
    get:
      description: Returns the named Neotoma Database table.
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/datasetidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/downloadv1point5'
                type: object
          description: Returned download object.
      summary: Returns the named Neotoma Database table.
      tags:
        - Data download
        - v1.5
  /v1.5/data/geopoliticalunits:
    get:
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/gpidQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/gpnameQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/rankQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/lowergpQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/geopolitical'
                type: array
          description: An array of geopolitical units.
      summary: Returns information about geopolitical units.
      tags:
        - Geopolitical metadata
        - v1.5
  /v1.5/data/geopoliticalunits/{gpid}:
    get:
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/gpidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/geopolitical'
                type: object
          description: An array of geopolitical units.
      summary: Returns information about geopolitical units.
      tags:
        - Geopolitical metadata
        - v1.5
  /v1.5/data/occurrence/{occurrenceid}:
    get:
      description: Given a unique occurrence identifier associated with a unique occurrence in Neotoma, return individual occurrence information for the sample.
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/occurrenceidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/occurrence'
                type: array
          description: A single occurrence object.
      summary: Occurrence information for a taxon and sample.
      tags:
        - Occurrence metadata
        - v1.5
  /v1.5/data/sites/{siteid}:
    get:
      description: Returns information about Neotoma publications
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/siteidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/sitesv1point5'
                type: array
          description: An array of site elements.
      summary: Site information.
      tags:
        - Site metadata
        - v1.5
  /v1.5/dbtables/{table}:
    get:
      description: Returns the named Neotoma Database table.  An empty query returns a list of all Neotoma tables.
      parameters:
        - description: Neotoma database table name.
          example: geochrontypes
          in: path
          name: table
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/dbtables'
                type: array
          description: Returned table.
      summary: Returns the named Neotoma Database table.
      tags:
        - Database tables
        - v1.5
  /v2.0/apps/collectionTypes:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: './yamlRef/schemas.yaml#/schemas/collectionTypes'
          description: A table of Neotoma collection types.
      tags:
        - Database tables
        - v2.0
  /v2.0/data/chronology/{chronid}:
    get:
      description: Returns the chronology and chronological controls used for a dataset age model.
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/chronidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/chronology'
                type: array
          description: A Neotoma chronology object.
      summary: Chronology metadata for a dataset.
      tags:
        - Chronology metadata
        - v2.0
  /v2.0/data/contacts:
    get:
      description: Returns researcher contact information associated with a record.
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/contactidQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/familyNameQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/contactNameQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/contactStatusQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/limitParam'
        - $ref: './yamlRef/parameters.yaml#/parameters/offsetParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/contact'
                type: array
          description: contact
      summary: Contact information for Neotoma contributors.
      tags:
        - Contact metadata
        - v2.0
  /v2.0/data/datasets:
    get:
      description: Returns information about Neotoma dataset
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/siteidQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/contactidQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/datasettypeQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/altMinQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/altMaxQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/locQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/ageYoungQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/ageOldQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/ageOfQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/datasetv2'
                type: array
          description: An array of datasets.
      summary: Dataset information.
      tags:
        - Dataset metadata
        - v2.0
  /v2.0/data/datasets/{datasetid}:
    get:
      description: Returns information about Neotoma dataset
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/datasetidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/dataset'
                type: array
          description: An array of datasets.
      summary: Dataset information.
      tags:
        - Dataset metadata
        - v2.0
  /v2.0/data/datasets/{datasetid}/contacts:
    get:
      description: Returns researcher contact information associated with a record.
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/datasetidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/contact'
                type: array
          description: contact
      summary: Contact information for Neotoma contributors.
      tags:
        - Contact metadata
        - v2.0
  /v2.0/data/dbtables:
    get:
      description: |
        Returns the named Neotoma Database table.  An empty query will return a list of tables.
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/tableQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/limitParam'
        - $ref: './yamlRef/parameters.yaml#/parameters/offsetParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/dbtables'
                type: array
          description: Returned table.
      summary: Returns the full content of a named Neotoma Database table.
      tags:
        - Database tables
        - v2.0
  /v2.0/data/downloads/{datasetid}:
    get:
      description: Returns the named Neotoma Database table.
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/datasetidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/downloadv2'
                type: array
          description: Returned download object.
      summary: Returns the named Neotoma Database table. Currently not operational, use "occurrences" instead.
      tags:
        - Data download
        - v2.0
  /v2.0/data/geopoliticalunits:
    get:
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/gpidQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/gpnameQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/rankQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/lowergpQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/geopolitical'
                type: array
          description: An array of geopolitical units.
      summary: Returns information about geopolitical units.
      tags:
        - Geopolitical metadata
        - v2.0
  /v2.0/data/geopoliticalunits/{gpid}:
    get:
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/gpidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/geopolitical'
                type: array
          description: An array of geopolitical units.
      summary: Returns information about geopolitical units.
      tags:
        - Geopolitical metadata
        - v2.0
  /v2.0/data/geopoliticalunits/{gpid}/sites:
    get:
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/gpidPath'
        - $ref: './yamlRef/parameters.yaml#/parameters/limitParam'
        - $ref: './yamlRef/parameters.yaml#/parameters/offsetParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/sitesv2'
                type: array
          description: An array of sites.
      summary: Returns information about sites based on the geopolitical unit in which they occur.
      tags:
        - Site metadata
        - v2.0
  /v2.0/data/occurrences:
    get:
      description: Returns occurrence information for a particular taxon, geographic region or temporal slice.
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/taxonNameQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/taxonidQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/siteidQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/siteNameQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/datasettypeQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/altMinQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/altMaxQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/locQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/ageOfQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/ageYoungQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/ageOldQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/limitParam'
        - $ref: './yamlRef/parameters.yaml#/parameters/offsetParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/occurrence'
                type: array
          description: occurrence
      summary: Individual occurrence records for Neotoma records.
      tags:
        - Occurrence metadata
        - v2.0
  /v2.0/data/occurrences/{occid}:
    get:
      description: Returns occurrence information for a particular taxon, geographic region or temporal slice.
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/occurrenceidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/occurrence'
                type: array
          description: occurrence
      summary: Individual occurrence records for Neotoma records.
      tags:
        - Occurrence metadata
        - v2.0
  /v2.0/data/publications:
    get:
      description: Returns information about Neotoma publications
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/publicationidQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/datasetidQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/siteidQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/familyNameQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/pubtypeQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/pubyearQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/pubsearchQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/limitParam'
        - $ref: './yamlRef/parameters.yaml#/parameters/offsetParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/publications'
                type: array
          description: A list of publications.
      summary: Returns information about Neotoma publications
      tags:
        - Publication metadata
        - v2.0
  /v2.0/data/sites:
    get:
      description: Returns information about Neotoma sites
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/siteidQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/siteNameQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/altMaxQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/altMinQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/locQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/limitParam'
        - $ref: './yamlRef/parameters.yaml#/parameters/offsetParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/sitesv2'
                type: array
          description: An array of sites.
      summary: Site information.
      tags:
        - Site metadata
        - v2.0
  /v2.0/data/sites/{siteid}:
    get:
      description: Returns information about Neotoma sites.
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/siteidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/sitesv2'
                type: array
          description: An array of sites.
      summary: Site information.
      tags:
        - Site metadata
        - v2.0
  /v2.0/data/sites/{siteid}/contacts:
    get:
      description: Given a Neotoma siteid, return all associated contacts.
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/siteidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/contact'
                type: array
          description: contact
      summary: Contact information for Neotoma contributors based on a known Neotoma site.
      tags:
        - Contact metadata
        - v2.0
  /v2.0/data/sites/{siteid}/datasets:
    get:
      description: Returns information about Neotoma dataset
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/siteidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/dataset'
                type: array
          description: An array of datasets.
      summary: Dataset information.
      tags:
        - Dataset metadata
        - v2.0
  /v2.0/data/sites/{siteid}/geopoliticalunits:
    get:
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/siteidPath'
        - $ref: './yamlRef/parameters.yaml#/parameters/limitParam'
        - $ref: './yamlRef/parameters.yaml#/parameters/offsetParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/geopolitical'
                type: array
          description: An array of geopolitical units.
      summary: Returns information about geopolitical units.
      tags:
        - Geopolitical metadata
        - v2.0
  /v2.0/data/taxa:
    get:
      description: Returns information about a taxon and (if requested) related taxa.
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/taxonNameQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/datasetidQuery'
        - $ref: './yamlRef/parameters.yaml#/parameters/siteidQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/taxa'
                type: array
          description: A taxon or array of taxa.
      summary: Taxonomic information.
      tags:
        - Taxonomic metadata
        - v2.0
  /v2.0/data/taxa/{taxonid}:
    get:
      description: Returns information about a taxon and (if requested) related taxa.
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/taxonidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/taxa'
                type: array
          description: A taxon or array of taxa.
      summary: Taxonomic information.
      tags:
        - Taxonomic metadata
        - v2.0
  /v2.0/data/taxa/{taxonid}/occurrences:
    get:
      description: Returns occurrence information for a particular taxon, geographic region or temporal slice.
      parameters:
        - $ref: './yamlRef/parameters.yaml#/parameters/taxonidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: './yamlRef/schemas.yaml#/schemas/occurrence'
                type: array
          description: occurrence
      summary: Individual occurrence records for Neotoma records.
      tags:
        - Occurrence metadata
        - v2.0
components:
  parameters:
    ageYoungQuery:
      name:                                    ageyoung
      in:                                      query
      description:                             >-
            Youngest age that intercepts with the dataset (in calibrated years
            before present, with 0 at 1950CE)
      required:                                false
      schema:
        type:                                  integer
        format:                                int64
        example:                               -60
        maximum: 23900000
        minimum: -100
    ageOldQuery:
      name:                                    ageold
      in:                                      query
      description:                             >-
            Oldest age that intercepts with the dataset (in calibrated years
            before present, with 0 at 1950CE)
      required:                                false
      schema:
        type:                                  integer
        format:                                int64
        example:                               11430
        maximum: 23900000
        minimum: -100
    ageOfQuery:
      name:                                    ageof
      in:                                      query
      description:                             >-
            Dataset age ranges must contain this age (in calibrated years before
            present, with 0 at 1950CE)
      required:                                false
      schema:
        type:                                  integer
        format:                                int64
        example:                               6700
        maximum: 23900000
        minimum: -100
    altMinQuery:
      name:                                    altmin
      description:                             Minimum altitude of the dataset site location (in meters)
      in:                                      query
      required:                                false
      schema:
        type:                                  integer
        format:                                int64
        minimum:  -500
        maximum: 8900
        example:                               200
    altMaxQuery:
      name:                                    altmax
      in:                                      query
      description:                             Maximum altitude of the dataset site location (in meters)
      required:                                false
      schema:
        type:                                  integer
        format:                                int64
        minimum:  -500
        maximum: 8900
        example:                               300
    contactidQuery:
      name:                                    contactid
      description:                             >-
            Unique contact identifier within the Neotoma Database, alone or
            comma separated.
      in:                                      query
      required:                                false
      schema:
        type:                                  integer
        format:                              int64
        minimum:                             1
        example:                             44
    contactidPath:
      name:                                    contactid
      description:                             >-
            Unique contact identifier within the Neotoma Database, alone or
            comma separated.
      in:                                      path
      required:                                true
      schema:
        type:                                  integer
        format:                              int64
        minimum:                             1
        example:                             44
    contactNameQuery:
      name:                                    contactname
      description:                             Last name of the researcher (may use the % wildcard)
      in:                                      query
      required:                                false
      schema:
        type:                                  string
        example:                               Grimm, Eric Christopher
    contactStatusQuery:
      name:                                    contactstatus
      in:                                      query
      description:                             Current employment status
      required:                                false
      schema:
        type:                                  string
        enum:
          - active
          - deceased
          - defunct
          - extant
          - inactive
          - retired
          - unknown
        example:                               active
    datasetidQuery:
      name:                                    datasetid
      description:                             Valid Neotoma dataset identifier (integer), either singly or in a comma separated list.
      in:                                      query
      required:                                false
      schema:
        type:                                  integer
        format:                                int32
        minimum:                               0
    datasetidPath:
      name:                                    datasetid
      description:                             Valid Neotoma dataset identifier (integer), either singly or in a comma separated list.
      in:                                      path
      required:                                true
      schema:
        type:                                  integer
        format:                                int32
        minimum:                               0
        example:          100
    datasettypeQuery:
      name:                                datasettype
      description:                         >-
        Neotoma contains data for a number of dataset types (see
        /dbtables/datasettypes.  This returns a subset of data types.
      in:                                  query
      required:                            false
      schema:
        type:                              string
        example:                           pollen
        enum:
          - geochronologic
          - loss-on-ignition
          - pollen
          - plant macrofossil
          - vertebrate fauna
          - macroinvertebrate
          - pollen surface sample
          - insect
          - ostracode
          - water chemistry
          - diatom
          - ostracode surface sample
          - diatom surface sample
          - geochemistry
          - physical sedimentology
          - charcoal
          - testate amoebae
          - X-ray fluorescence (XRF)
          - X-ray diffraction (XRD)
          - energy dispersive X-ray spectroscopy (EDS/EDX)
          - biomarker
          - modern plant biomarker
          - phytolith
          - specimen stable isotope
          - paleomagnetic
          - biochemistry
          - modern biochemistry
          - organic carbon
          - insect modern
          - chironomid
          - stable isotope
          - testate amoebae surface sample
          - charcoal surface sample
          - cladocera
          - diatom top-bottom
          - microcharcoal
          - macrocharcoal
          - pollen trap
    familyNameQuery:
      name:                                    familyname
      description:                             Full name of the the researcher (may use the % wildcard)
      in:                                      query
      required:                                false
      schema:
        type:                                  string
    gpidPath:
      name:                                gpid
      in:                                  path
      description:                         Numeric ID for the geopolitical unit.
      required:                            true
      schema:
        type:                              integer
        format:                            int32
        minimum:                           0
    gpidQuery:
      name:                                gpid
      in:                                  query
      description:                         Numeric ID for the geopolitical unit.
      required:                            false
      schema:
        type:                              integer
        format:                            int32
        minimum:                           0
    gpnameQuery:
      name:                                gpname
      in:                                  query
      description:                         Name for a geopolitical unit.
      required:                            false
      schema:
        type:                              string
        example:                           Canada
    limitParam:
      name:                                    limit
      description:                             'The maximum number of records to be returned, default is 25.'
      schema:
        type:                                  integer
        format:                                int32
        default:                               25
        minimum:                               1
      in:                                      query
      required:                                false
    locQuery:
      name:                                    loc
      in:                                      query
      description:                             >
            The geographic region of interest for the site, as a GeoJSON string
            or valid Well Known Text (WKT).  Assumed projection of EPSG:4376
            unless otherwise defined.
      required:                                false
      schema:
        type:                                  string
        pattern: '^\{.*\}$'
    lowergpQuery:
      name:                                lower
      in:                                  query
      description:                         Should all lower ranked units below the target unit be returned?
      required:                            false
      schema:
        type:                              boolean
        default:                           false
    occurrenceidQuery:
      name:                                    occurrenceid
      description:                             Valid Neotoma occurrence identifier (integer), either singly or in a comma separated list.
      in:                                      query
      required:                                false
      schema:
        type:                                  integer
        format:                                int32
        minimum:                               0
    occurrenceidPath:
      name:                                    occurrenceid
      description:                             Valid Neotoma occurrence identifier (integer), either singly or in a comma separated list.
      in:                                      path
      required:                                true
      schema:
        type:                                  integer
        format:                                int32
        minimum:                               0
    offsetParam:
      name:                                    offset
      description:                             >-
        The offset for returned records when a limit is present.  Default is
        0.
      in:                                      query
      required:                                false
      schema:
        type:                                  integer
        format:                                int32
        default:                               0
        minimum:                               0
    publicationidQuery:
      name:                                    publicationid
      description:                             >
        Unique publication identifier (from the Neotoma publication table).
      in:                                      query
      required:                                false
      schema:
        type:                                  integer
        format:                                int32
        minimum:                               0
    pubsearchQuery:
      name: search
      description: A fulltext search string.  Either a literal portion of the article name, or keywords.
      in: query
      required: false
      schema:
        type: string
    pubtypeQuery:
      name: pubtype
      description: The type of publication requested.
      required: false
      in: query
      schema:
        type: string
        enum: [Legacy, Journal Article, Book Chapter, Authored Book, Edited Book, Master's Thesis, Doctoral Dissertation, Authored Report, Edited Report, Other Authored, Other Edited, Website, Undergraduate thesis]
    pubyearQuery:
      name: year
      description: The year of publication, either as a single value or comma separated string.
      required: false
      in: query
      schema:
        type: integer
        format: int32
        minimum: 1500
        maximum: 2100
    rankQuery:
      name:                                rank
      in:                                  query
      description:                         'The unit rank.  Ranges from 1 (country) - 4 (e.g., parks).'
      required:                            false
      schema:
        type:                              integer
        minimum: 1
        maximum: 4
    siteidPath:
      name:                                    siteid
      description:                             Valid Neotoma site identifier (integer), either singly or in a comma separated list.
      in:                                      path
      required:                                true
      schema:
        type:                                  integer
        format:                                int32
        minimum:                               1
        maximum:  30000
    siteidQuery:
      name:                                    siteid
      description:                             Valid Neotoma site identifier (integer), either singly or in a comma separated list.
      in:                                      query
      required:                                false
      schema:
        type:                                  integer
        format:                                int32
        minimum:                               1
        maximum:  30000
    siteNameQuery:
      name:                                    sitename
      description:                             Name of the study site (may use the % wildcard)
      in:                                      query
      required:                                false
      schema:
        type:                                  string
        example:                               Stern Excavation Site
    tableQuery:
      name:                                    table
      description: Valid name for a Neotoma Table 
      in: query 
      required: false 
      schema:
        type: string
        example: sites
    taxonidPath:
      name:                                    taxonid
      description:                             >
        Unique taxonomic identifier (from the Neotoma taxon table).
      in:                                      path
      required:                                true
      schema:
        type:                                  integer
        format:                                int32
        minimum:                               1
        maximum: 50000
    taxonidQuery:
      in:                                      query
      name:                                    taxonid
      required:                                false
      description:                             Unique taxonomic identifier (from the Neotoma taxon table).
      schema:
        type:                                  integer
        minimum:                               1
        maximum: 50000
    taxonNameQuery:
      name:                                taxonname
      description:                         Taxon name or partial name.
      in:                                  query
      required:                            false
      schema:
        type:                              string
        example: "Canis"
    chronidPath:
      name:                                    chronid
      description:                             Unique chronology identifier.
      in:                                      path
      required:                                true
      schema:
        type:                                  integer
        format:                                int64
        minimum:                               0
    taxonnameQuery:
      in:                                      query
      name:                                    taxonname
      required:                                false
      description:                             Unique taxonomic name (from the Neotoma taxon table).
      schema:
        type:                                  string
  schemas:
    chronology:
      properties:
        agetype:
          example: Calibrated radiocarbon years BP
          type: string
        chronologyName:
          example: NAPD 1
          type: string
        chronologyid:
          example: 1
          type: integer
        controls:
          properties:
            age:
              example: -45
              type: number
            chroncontrolid:
              example: 5645
              type: integer
            controllimits:
              properties:
                ageolder:
                  example: -48
                  type: number
                ageyounger:
                  example: -48
                  type: number
              type: object
            controltype:
              example: Core top
              type: string
            depth:
              example: 0.5
              type: number
            thickness:
              example: 2
              type: number
          type: object
        dataset:
          properties:
            datasetid:
              $ref: '#schema/datasetid'
            datasettype:
              type: string
          type: object
        datePrepared:
          example: '2013-09-30'
          format: date
          type: string
        default:
          example: true
          type: boolean
        modelType:
          example: linear interpolation
          type: string
        preparedby:
          properties:
            contactid:
              example: 44
              type: integer
            contactname:
              example: Grimm, Eric Christopher
              type: string
            familyname:
              example: Grimm
              type: string
            firstname:
              example: Eric
              type: string
            initials:
              example: E.C.
              type: string
          type: object
        reliableagespan:
          properties:
            older:
              example: 6490
              type: integer
            younger:
              example: -30
              type: integer
          type: object
      type: object
    collectionTypes:
      properties:
        data:
          items:
            properties:
              colltype:
                example: Isolated specimen
                type: string
              colltypeid:
                example: 8
                type: integer
            type: object
          type: array
        message:
          type: string
        status:
          type: string
      type: object
    contact:
      properties:
        address:
          example: 550 N Park St, Madison WI, USA
          type: string
        aliasid:
          example: 123
          format: int64
          type: integer
        contactid:
          example: 123
          format: int64
          type: integer
        contactname:
          example: Goring, Simon J
          type: string
        contactstatusid:
          example: Active
          type: string
        email:
          example: goring@wisc.edu
          format: email
          type: string
        familyname:
          example: Goring
          type: string
        givennames:
          example: Simon
          type: string
        leadinginitials:
          example: S. J.
          type: string
        notes:
          example: This user is a member of the Neotoma Leadership Team.
          format: email
          type: string
        suffix:
          example: Esq.
          type: string
        title:
          example: Lord Mayor
          type: string
        url:
          example: http://goring.org
          format: url
          type: string
      type: object
    dataset:
      properties:
        data:
          items:
            properties:
              dataset:
                properties:
                  database:
                    type: string
                  datasetid:
                    $ref: '#schema/datasetid'
                  datasetnotes:
                    type: string
                  datasetpi:
                    properties:
                      contactid:
                        type: integer
                      contactname:
                        type: string
                      familyname:
                        type: string
                      firstname:
                        type: string
                      initials:
                        type: string
                    type: object
                  datasettype:
                    type: string
                  doi:
                    format: doi
                    type: string
                type: object
              site:
                properties:
                  altitude:
                    type: integer
                  collectionunit:
                    type: string
                  collectionunitid:
                    type: integer
                  geography:
                    format: geoJSON
                    type: string
                  handle:
                    type: string
                  sitedescription:
                    type: string
                  siteid:
                    $ref: '#schemas/siteid'
                  sitename:
                    $ref: '#schemas/sitename'
                  sitenotes:
                    type: string
                  unittype:
                    type: string
                type: object
            type: object
          type: array
        message:
          type: string
        status:
          type: string
        success:
          type: integer
      type: object
    datasetv2:
      properties:
        data:
          items:
            properties:
              dataset:
                properties:
                  database:
                    type: string
                  datasetid:
                    $ref: '#schema/datasetid'
                  datasetnotes:
                    type: string
                  datasetpi:
                    properties:
                      contactid:
                        type: integer
                      contactname:
                        type: string
                      familyname:
                        type: string
                      firstname:
                        type: string
                      initials:
                        type: string
                    type: object
                  datasettype:
                    type: string
                  doi:
                    format: doi
                    type: string
                type: object
              site:
                properties:
                  altitude:
                    type: integer
                  collectionunit:
                    type: string
                  collectionunitid:
                    type: integer
                  geography:
                    format: geoJSON
                    type: string
                  handle:
                    type: string
                  sitedescription:
                    type: string
                  siteid:
                    $ref: '#schemas/siteid'
                  sitename:
                    $ref: '#schemas/sitename'
                  sitenotes:
                    type: string
                  unittype:
                    type: string
                type: object
            type: object
          type: array
        message:
          type: string
        status:
          type: string
      type: object
    datasetTypes:
      properties:
        data:
          items:
            properties:
              datasettype:
                example: geochemistry
                type: string
              datasettypeid:
                example: 14
                type: integer
            type: object
          type: array
        message:
          type: string
        status:
          type: string
      type: object
    dbtables:
      properties:
        data:
          items:
            type: object
          type: array
        status:
          type: string
      type: object
    downloadv1point5:
      properties:
        data:
          type: object
        success:
          $ref: '#schema/success'
        message:
          $ref: '#schema/message'
      type: object
    downloadv2:
      properties:
        datasetid:
          $ref: '#schema/datasetid'
        record:
          properties:
            chronologies:
              items:
                $ref: '#schemas/chronology'
              type: array
            data:
              dataset:
                items:
                  $ref: '#schemas/dataset'
                type: array
              samples:
                type: string
            type: object
        success:
          $ref: '#schema/success'
      type: object
    geopolitical:
      properties:
        geopoliticalid:
          example: 757
          format: int32
          type: integer
        geopoliticalname:
          example: province
          type: string
        geopoliticalunit:
          example: Alberta
          type: string
        highergeopoliticalid:
          example: 756
          format: int32
          type: integer
        rank:
          example: 2
          format: int32
          type: integer
        recdatecreated:
          example: '2013-09-30T21:02:51.000Z'
          format: dateTime
          type: string
        recdatemodified:
          example: '2013-09-30T21:02:51.000Z'
          format: dateTime
          type: string
    message:
      type: string
      example: 'Returned a vaild response.'
    occurrence:
      properties:
        data:
          items:
            properties:
              ages:
                properties:
                  age:
                    format: int64
                    type: integer
                  ageolder:
                    format: int64
                    type: integer
                  ageyounger:
                    format: int64
                    type: integer
                type: object
              occurrence:
                format: int64
                type: integer
              sample:
                format: int64
                type: integer
              site:
                properties:
                  altitude:
                    type: integer
                  database:
                    type: string
                  datasetid:
                    $ref: '#schema/datasetid'
                  datasettype:
                    type: string
                  location:
                    type: string
                  siteid:
                    $ref: '#schemas/siteid'
                  sitename:
                    $ref: '#schemas/sitename'
                type: object
              taxon:
                properties:
                  taxonid:
                    format: int64
                    type: integer
                  taxonname:
                    type: string
                type: object
            type: object
          type: array
        message:
          type: string
        status:
          type: string
        success:
          type: integer
      type: object
    pollen:
      properties:
        Author:
          type: string
        EcolGroups:
          items:
            type: string
          type: array
        Extinct:
          type: boolean
        HigherTaxonID:
          format: int32
          type: integer
        Notes:
          type: string
        PublicationID:
          format: int32
          type: integer
        TaxaGroupID:
          type: string
        TaxonCode:
          type: string
        TaxonID:
          format: int32
          type: integer
        TaxonName:
          type: string
    publication:
      properties:
        Authors:
          items:
            type: string
          type: array
        Citation:
          type: string
        PubType:
          type: string
        PublicationID:
          type: integer
        Year:
          type: string
    publications:
      properties:
        Authors:
          items:
            type: string
          type: array
        Citation:
          type: string
        PubType:
          type: string
        PublicationID:
          type: integer
        Year:
          type: string
    datasetid:
      example: 666
      format: int64
      minimum: 1
      type: integer
    siteid:
      example: 666
      format: int64
      minimum: 1
      type: integer
    sitename:
      example: Devils Lake
      type: string
    sitesv1point5:
      properties:
        collectionunits:
          items:
            properties:
              collectionunit:
                example: null
                type: string
              collectionunitid:
                example: 666
                format: int64
                minimum: 1
                type: integer
              collectionunittype:
                example: Core
                type: string
              datasets:
                items:
                  properties:
                    datasetid:
                      $ref: '#schema/datasetid'
                    datasettype:
                      type: string
                  type: object
                type: array
              handle:
                example: DEVILSWI
                type: string
            type: object
          type: array
        data:
          properties:
            altitude:
              example: 294
              type: integer
            geography:
              example: Thing
              type: string
            sitedescription:
              example: Lake is located in a pre-glacial gorge of the Wisconsin river cut through the Baraboo Hills, a bedrock high. The valley is dammed at both ends by terminal moraines deposited by the Green Bay lobe, which flowed around the Baraboo Hills. Lake is fed by groundwater. Surrounding vegetation, white-black-bur oak.
              type: string
            siteid:
              $ref: '#schemas/siteid'
            sitename:
              $ref: '#schemas/sitename'
            unittype:
              type: string
          type: object
        message:
          $ref: '#schemas/message'
        status:
          $ref: '#schemas/status'
        success:
          $ref: '#schemas/success'
    sitesv2:
      properties:
        altitude:
          example: 294
          type: integer
        collectionunits:
          items:
            properties:
              collectionunit:
                example: null
                type: string
              collectionunitid:
                example: 666
                format: int64
                minimum: 1
                type: integer
              collectionunittype:
                example: Core
                type: string
              datasets:
                items:
                  properties:
                    datasetid:
                      $ref: '#schema/datasetid'
                    datasettype:
                      type: string
                  type: object
                type: array
              handle:
                example: DEVILSWI
                type: string
            type: object
          type: array
        geography:
          type: string
        sitedescription:
          example: Lake is located in a pre-glacial gorge of the Wisconsin river cut through the Baraboo Hills, a bedrock high. The valley is dammed at both ends by terminal moraines deposited by the Green Bay lobe, which flowed around the Baraboo Hills. Lake is fed by groundwater. Surrounding vegetation, white-black-bur oak.
          type: string
        siteid:
          $ref: '#schemas/siteid'
        sitename:
          $ref: '#schemas/sitename'
    status:
      type: string
    success:
      enum:
        - 0
        - 1
      type: integer
    taxa:
      properties:
        author:
          type: string
        ecolgroup:
          items:
            type: string
          type: array
        highertaxonid:
          format: int32
          type: integer
        publicationid:
          format: int32
          type: integer
        status:
          type: boolean
        taxonid:
          format: int32
          type: integer
        taxonname:
          type: string
    taxaInDatasets:
      properties:
        data:
          items:
            properties:
              datasettypeids:
                items:
                  type: integer
                type: array
              taxongroupid:
                type: string
              taxonid:
                type: integer
              taxonname:
                type: string
            type: object
          type: array
        message:
          type: string
        status:
          type: string
        success:
          type: integer
      type: object

