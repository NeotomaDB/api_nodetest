---
components:
  parameters:
    databaseQuery:
      description: One of the constituent databases within Neotoma
      in: query
      name: database
      required: true
      schema:
        type: string
        enum:
          - Cooperative Holocene Mapping Project
          - African Pollen Database
          - European Pollen Database
          - Indo-Pacific Pollen Database
          - Latin American Pollen Database
          - North American Pollen Database
          - Pollen Database of Siberia and the Russian Far East
          - Canadian Pollen Database
          - FAUNMAP
          - Neotoma
          - North American Plant Macrofossil Database
          - Academy of Natural Sciences of Drexel University
          - NDSU Insect Database
          - North American Non-Marine Ostracode Database Project (NANODe)
          - MioMap
          - Alaskan Archaeofaunas
          - French Institute of Pondicherry Palynology and Paleoecology Database
          - Japanese Pollen Database
          - Neotoma Midden Database
          - Chinese Pollen Database
          - Holocene Perspective on Peatland Biogeochemistry
          - ANTIGUA
          - Neotoma Testate Amoebae Database
          - Deep-Time Palynology Database
          - Neotoma Biomarker Database
          - Alpine Pollen Database
          - Canadian Museum of Nature-Delorme Ostracoda-Surface Samples
          - Diatom Paleolimnology Data Cooperative (DPDC)
          - Neotoma Ostracode Database
          - Faunal Isotope Database
          - Neotoma Charcoal Data
          - Pollen Monitoring Programme
          - PaleoVertebrates of Latin America
          - St. Croix Watershed Research Station of the Science Museum of Minnesota
    ageOfQuery:
      description: Dataset age ranges must contain this age (in calibrated years before present, with 0 at 1950CE)
      in: query
      name: ageof
      required: false
      schema:
        example: 6700
        format: int64
        maximum: 23900000
        minimum: -100
        type: integer
    ageOldQuery:
      description: Oldest age that intercepts with the dataset (in calibrated years before present, with 0 at 1950CE)
      in: query
      name: ageold
      required: false
      schema:
        example: 11430
        format: int64
        maximum: 23900000
        minimum: -100
        type: integer
    ageYoungQuery:
      description: Youngest age that intercepts with the dataset (in calibrated years before present, with 0 at 1950CE)
      in: query
      name: ageyoung
      required: false
      schema:
        example: -60
        format: int64
        maximum: 23900000
        minimum: -100
        type: integer
    altMaxQuery:
      description: Maximum altitude of the dataset site location (in meters)
      in: query
      name: altmax
      required: false
      schema:
        example: 300
        format: int64
        maximum: 8900
        minimum: -500
        type: integer
    altMinQuery:
      description: Minimum altitude of the dataset site location (in meters)
      in: query
      name: altmin
      required: false
      schema:
        example: 200
        format: int64
        maximum: 8900
        minimum: -500
        type: integer
    chronidPath:
      description: Unique chronology identifier.
      in: path
      name: chronid
      required: true
      schema:
        format: int64
        minimum: 0
        maximum: 40000
        type: integer
    contactNameQuery:
      description: Last name of the researcher (may use the % wildcard)
      in: query
      name: contactname
      required: false
      schema:
        example: Grimm, Eric Christopher
        type: string
    contactStatusQuery:
      description: Current employment status
      in: query
      name: contactstatus
      required: false
      schema:
        enum:
          - active
          - deceased
          - defunct
          - extant
          - inactive
          - retired
          - unknown
        example: active
        type: string
    contactidPath:
      description: Unique contact identifier within the Neotoma Database, alone or comma separated.
      in: path
      name: contactid
      required: true
      schema:
        example: 44
        format: int64
        minimum: 1
        maximum: 20000
        type: integer
    contactidQuery:
      description: Unique contact identifier within the Neotoma Database, alone or comma separated.
      in: query
      name: contactid
      required: false
      schema:
        example: 44
        format: int64
        minimum: 1
        maximum: 20000
        type: integer
    datasetidPath:
      description: Valid Neotoma dataset identifier (integer), either singly or in a comma separated list.
      in: path
      name: datasetid
      required: true
      schema:
        example: 100
        format: int32
        minimum: 1
        maximum: 60000
        type: integer
    datasetidQuery:
      description: Valid Neotoma dataset identifier (integer), either singly or in a comma separated list.
      in: query
      name: datasetid
      required: false
      schema:
        format: int32
        minimum: 0
        type: integer
    datasettypeQuery:
      description: Neotoma contains data for a number of dataset types (see /dbtables/datasettypes.  This returns a subset of data types.
      in: query
      name: datasettype
      required: false
      schema:
        example: pollen
        type: string
    familyNameQuery:
      description: Full name of the the researcher (may use the % wildcard)
      in: query
      name: familyname
      required: false
      schema:
        type: string
    gpidPath:
      description: Numeric ID for the geopolitical unit.
      in: path
      name: gpid
      required: true
      schema:
        format: int32
        minimum: 1
        maximum: 11000
        type: integer
    gpidQuery:
      description: Numeric ID for the geopolitical unit.
      in: query
      name: gpid
      required: false
      schema:
        format: int32
        minimum: 1
        maximum: 11000
        type: integer
    gpnameQuery:
      description: Name for a geopolitical unit.
      in: query
      name: gpname
      required: false
      schema:
        example: Canada
        type: string
    limitParam:
      description: The maximum number of records to be returned, default is 25.
      in: query
      name: limit
      required: false
      schema:
        default: 25
        format: int32
        minimum: 1
        maximum: 10000
        type: integer
    locQuery:
      description: |
        The geographic region of interest for the site, as a GeoJSON string or valid Well Known Text (WKT).  Assumed projection of EPSG:4376 unless otherwise defined.
      in: query
      name: loc
      required: false
      schema:
        pattern: ^\{.*\}$
        type: string
    lowergpQuery:
      description: Should all lower ranked units below the target unit be returned?
      in: query
      name: lower
      required: false
      schema:
        default: false
        type: boolean
    occurrenceidPath:
      description: Valid Neotoma occurrence identifier (integer), either singly or in a comma separated list.
      in: path
      name: occurrenceid
      required: true
      schema:
        format: int32
        maximum: 10000000
        minimum: 1
        type: integer
    occurrenceidQuery:
      description: Valid Neotoma occurrence identifier (integer), either singly or in a comma separated list.
      in: query
      name: occurrenceid
      required: false
      schema:
        format: int32
        minimum: 0
        maximum: 10000000
        type: integer
    offsetParam:
      description: The offset for returned records when a limit is present.  Default is 0.
      in: query
      name: offset
      required: false
      schema:
        default: 0
        format: int32
        minimum: 0
        type: integer
    publicationidPath:
      description: |
        Unique publication identifier (from the Neotoma publication table).
      in: query
      name: publicationid
      required: false
      schema:
        format: int32
        minimum: 1
        maximum: 20000
        type: integer
    publicationidQuery:
      description: |
        Unique publication identifier (from the Neotoma publication table).
      in: query
      name: publicationid
      required: false
      schema:
        format: int32
        minimum: 0
        maximum: 20000
        type: integer
    pubsearchQuery:
      description: A fulltext search string.  Either a literal portion of the article name, or keywords.
      in: query
      name: search
      required: false
      schema:
        type: string
    pubtypeQuery:
      description: The type of publication requested.
      in: query
      name: pubtype
      required: false
      schema:
        enum:
          - Legacy
          - Journal Article
          - Book Chapter
          - Authored Book
          - Edited Book
          - Master's Thesis
          - Doctoral Dissertation
          - Authored Report
          - Edited Report
          - Other Authored
          - Other Edited
          - Website
          - Undergraduate thesis
        type: string
    pubyearQuery:
      description: The year of publication, either as a single value or comma separated string.
      in: query
      name: year
      required: false
      schema:
        format: int32
        maximum: 2100
        minimum: 1500
        type: integer
    rankQuery:
      description: The unit rank.  Ranges from 1 (country) - 4 (e.g., parks).
      in: query
      name: rank
      required: false
      schema:
        maximum: 4
        minimum: 1
        type: integer
    siteNameQuery:
      description: Name of the study site (may use the % wildcard)
      in: query
      name: sitename
      required: false
      schema:
        example: Stern Excavation Site
        type: string
    siteidPath:
      description: Valid Neotoma site identifier (integer), either singly or in a comma separated list.
      in: path
      name: siteid
      required: true
      schema:
        format: int32
        maximum: 30000
        minimum: 1
        type: integer
    siteidQuery:
      description: Valid Neotoma site identifier (integer), either singly or in a comma separated list.
      in: query
      name: siteid
      required: false
      schema:
        format: int32
        maximum: 30000
        minimum: 1
        type: integer
    tableQuery:
      description: Valid name for a Neotoma Table
      in: query
      name: table
      required: false
      schema:
        example: sites
        type: string
    taxonNameQuery:
      description: Taxon name or partial name.
      in: query
      name: taxonname
      required: false
      schema:
        example: Canis
        type: string
    taxonidPath:
      description: |
        Unique taxonomic identifier (from the Neotoma taxon table).
      in: path
      name: taxonid
      required: true
      schema:
        format: int32
        maximum: 50000
        minimum: 1
        type: integer
    taxonidQuery:
      description: Unique taxonomic identifier (from the Neotoma taxon table).
      in: query
      name: taxonid
      required: false
      schema:
        maximum: 50000
        minimum: 1
        type: integer
    taxonnameQuery:
      description: Unique taxonomic name (from the Neotoma taxon table).
      in: query
      name: taxonname
      required: false
      schema:
        type: string
  schemas:
    taxagroupresponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/status'
        message:
          $ref: '#/components/schemas/message'
        data:
          type: array
          items:
            type: object
            properties:
              gettaxagrouptypes:
                type: string
    taphonomyresponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/status'
        message:
          $ref: '#/components/schemas/message'
        data:
          nullable: true
          type: array
          minItems: 0
          items:
            type: object
            nullable: true
            properties:
              gettaphonomicsystems:
                type: string
    depositionalresponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/status'
        message:
          $ref: '#/components/schemas/message'
        data:
          type: array
          items:
            type: object
            properties:
              getdeptenvtypesroot:
                type: string
    address:
      example: 550 N Park St, Madison WI, USA
      type: string
    ageold:
      example: 11452
      format: int64
      nullable: true
      type: integer
    agerange:
      properties:
        ageold:
          $ref: '#/components/schemas/ageold'
        agetype:
          $ref: '#/components/schemas/agetype'
        ageyoung:
          $ref: '#/components/schemas/ageyoung'
      type: object
    agetype:
      enum:
        - Calendar years AD/BC
        - Calendar years BP
        - Calibrated radiocarbon years BP
        - Radiocarbon years BP
        - Varve years BP
      type: string
    ageyoung:
      example: -35
      format: int64
      nullable: true
      type: integer
    altitude:
      example: 0
      format: int32
      maximum: 9000
      minimum: -500
      type: integer
    authorpiresponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/status'
        message:
          $ref: '#/components/schemas/message'
        data:
          type: array
          items:
            type: object
            properties:
              getpeople:
                type: string
    chronology:
      properties:
        agetype:
          $ref: '#/components/schemas/agetype'
        chronologyName:
          example: NAPD 1
          type: string
        chronologyid:
          example: 1
          type: integer
        controls:
          properties:
            age:
              example: -45
              type: number
            chroncontrolid:
              example: 5645
              type: integer
            controllimits:
              properties:
                ageolder:
                  $ref: '#/components/schemas/ageold'
                ageyounger:
                  $ref: '#/components/schemas/ageyoung'
              type: object
            controltype:
              example: Core top
              type: string
            depth:
              example: 0.5
              type: number
            thickness:
              example: 2
              type: number
          type: object
        dataset:
          properties:
            datasetid:
              $ref: '#/components/schemas/datasetid'
            datasettype:
              type: string
          type: object
        datePrepared:
          $ref: '#/components/schemas/date'
        default:
          example: true
          type: boolean
        modelType:
          example: linear interpolation
          type: string
        preparedby:
          properties:
            contactid:
              example: 44
              type: integer
            contactname:
              example: Grimm, Eric Christopher
              type: string
            familyname:
              example: Grimm
              type: string
            firstname:
              example: Eric
              type: string
            initials:
              example: E.C.
              type: string
          type: object
        reliableagespan:
          properties:
            older:
              example: 6490
              type: integer
            younger:
              example: -30
              type: integer
          type: object
      type: object
    chronologyv2_0:
      properties:
        agetype:
          example: Calibrated radiocarbon years BP
          type: string
        chronologyName:
          example: NAPD 1
          type: string
        chronologyid:
          example: 1
          type: integer
        controls:
          properties:
            age:
              example: -45
              type: number
            chroncontrolid:
              example: 5645
              type: integer
            controllimits:
              properties:
                ageolder:
                  $ref: '#/components/schemas/ageold'
                ageyounger:
                  $ref: '#/components/schemas/ageyoung'
              type: object
            controltype:
              example: Core top
              type: string
            depth:
              example: 0.5
              type: number
            thickness:
              example: 2
              type: number
          type: object
        dataset:
          properties:
            datasetid:
              $ref: '#/components/schemas/datasetid'
            datasettype:
              type: string
          type: object
        datePrepared:
          $ref: '#/components/schemas/date'
        default:
          example: true
          type: boolean
        modelType:
          example: linear interpolation
          type: string
        preparedby:
          properties:
            contactid:
              example: 44
              type: integer
            contactname:
              example: Grimm, Eric Christopher
              type: string
            familyname:
              example: Grimm
              type: string
            firstname:
              example: Eric
              type: string
            initials:
              example: E.C.
              type: string
          type: object
        reliableagespan:
          properties:
            older:
              example: 6490
              type: integer
            younger:
              example: -30
              type: integer
          type: object
      type: object
    chronologyv2response:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/status'
        message:
          $ref: '#/components/schemas/message'
        data:
          type: array
          items:
            type: object
            properties:
              chronology:
                $ref: '#/components/schemas/chronologyv2_0'
    collectiontyperesponse:
      properties:
        data:
          items:
            properties:
              colltype:
                example: Isolated specimen
                type: string
              colltypeid:
                example: 8
                type: integer
            type: object
          type: array
        message:
          type: string
        status:
          type: string
      type: object
    collectionunit:
      example: 15-1
      nullable: true
      type: string
    collectionunitid:
      example: 666
      format: int64
      minimum: 1
      type: integer
    contact:
      properties:
        address:
          $ref: '#/components/schemas/address'
        aliasid:
          example: 123
          format: int64
          type: integer
        contactid:
          $ref: '#/components/schemas/contactid'
        contactname:
          $ref: '#/components/schemas/contactname'
        contactstatus:
          $ref: '#/components/schemas/contactstatus'
        email:
          $ref: '#/components/schemas/email'
        familyname:
          example: Goring
          type: string
        givennames:
          example: Simon
          type: string
        leadinginitials:
          example: S. J.
          type: string
        notes:
          example: This user is a member of the Neotoma Leadership Team.
          type: string
        suffix:
          example: Esq.
          type: string
        title:
          example: Lord Mayor
          type: string
        url:
          $ref: '#/components/schemas/url'
      type: object
    contactid:
      example: 123
      format: int64
      minimum: 1
      type: integer
    contactname:
      example: Goring, Simon J
      type: string
    contactresponse:
      properties:
        query:
          type: object
        contacts:
          items:
            properties:
              contact:
                $ref: '#/components/schemas/contact'
          type: array
          minItems: 0
        message:
          $ref: '#/components/schemas/message'
        status:
          $ref: '#/components/schemas/status'
        success:
          $ref: '#/components/schemas/success'
      type: object
    contactstatus:
      enum:
        - active
        - deceased
        - defunct
        - extant
        - inactive
        - retired
        - unknown
      example: Active
      type: string
    dataset:
      properties:
        data:
          items:
            properties:
              dataset:
                properties:
                  database:
                    type: string
                  datasetid:
                    $ref: '#/components/schemas/datasetid'
                  datasetnotes:
                    $ref: '#/components/schemas/datasetnotes'
                  datasetpi:
                    items:
                      properties:
                        contact:
                          $ref: '#/components/schemas/contact'
                    type: array
                  datasettype:
                    $ref: '#/components/schemas/datasettype'
                  doi:
                    items:
                      properties:
                        doi:
                          $ref: '#/components/schemas/doi'
                    type: array
                type: object
              site:
                properties:
                  altitude:
                    type: integer
                  collectionunit:
                    type: string
                  collectionunitid:
                    $ref: '#/components/schemas/collectionunitid'
                  geography:
                    format: geoJSON
                    type: string
                  handle:
                    type: string
                  sitedescription:
                    type: string
                  siteid:
                    $ref: '#/components/schemas/siteid'
                  sitename:
                    $ref: '#/components/schemas/sitename'
                  sitenotes:
                    $ref: '#/components/schemas/sitenotes'
                  unittype:
                    type: string
                type: object
            type: object
          type: array
        message:
          $ref: '#/components/schemas/message'
        status:
          $ref: '#/components/schemas/status'
        success:
          $ref: '#/components/schemas/success'
      type: object
    datasetTypes:
      properties:
        data:
          items:
            properties:
              datasettype:
                $ref: '#/components/schemas/datasettype'
              datasettypeid:
                example: 14
                type: integer
            type: object
          type: array
        message:
          type: string
        status:
          type: string
      type: object
    datasetid:
      example: 666
      format: int64
      minimum: 1
      maximum: 60000
      type: integer
    datasetselcresponse:
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              site:
                type: object
                properties:
                  siteid:
                    $ref: '#/components/schemas/siteid'
                  sitedescription:
                    $ref: '#/components/schemas/sitedescription'
                  sitename:
                    $ref: '#/components/schemas/sitename'
                  sitenotes:
                    $ref: '#/components/schemas/sitenotes'
                  geography:
                    $ref: '#/components/schemas/geography'
                  altitude:
                    $ref: '#/components/schemas/altitude'
                  collectionunitid:
                    $ref: '#/components/schemas/collectionunitid'
                  collectionunit:
                    $ref: '#/components/schemas/collectionunit'
                  handle:
                    $ref: '#/components/schemas/handle'
                  unittype:
                    $ref: '#/components/schemas/unittype'
                  datasets:
                    type: object
        message:
          $ref: '#/components/schemas/message'
        status:
          $ref: '#/components/schemas/status'
      type: object
    datasetnotes:
      example: This dataset was digitized from an original publication in Finnish.
      type: string
    datasetshort:
      items:
        properties:
          datasetid:
            $ref: '#/components/schemas/datasetid'
          datasettype:
            $ref: '#/components/schemas/datasettype'
        type: object
      type: array
    datasettyperesponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/status'
        message:
          $ref: '#/components/schemas/message'
        data:
          type: array
          items:
            type: object
            properties:
              getdatasettypes:
                type: string
    datasettype:
      example: geochemistry
      type: string
    datasetresponsev2_0:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/status'
        message:
          $ref: '#/components/schemas/message'
        data:
          $ref: '#/components/schemas/datasetv2'
    datasetv2:
      properties:
        data:
          items:
            properties:
              site:
                properties:
                  altitude:
                    $ref: '#/components/schemas/altitude'
                  collectionunit:
                    $ref: '#/components/schemas/collectionunit'
                  collectionunitid:
                    $ref: '#/components/schemas/collectionunitid'
                  dataset:
                    items:
                      properties:
                        agerange:
                          $ref: '#/components/schemas/agerange'
                        database:
                          type: integer
                        datasetid:
                          $ref: '#/components/schemas/datasetid'
                        datasetnotes:
                          $ref: '#/components/schemas/datasetnotes'
                        datasetpi:
                          type: array
                        datasettype:
                          $ref: '#/components/schemas/datasettype'
                        doi:
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  geography:
                    $ref: '#/components/schemas/geography'
                  handle:
                    $ref: '#/components/schemas/handle'
                  sitedescription:
                    $ref: '#/components/schemas/sitedescription'
                  siteid:
                    $ref: '#/components/schemas/siteid'
                  sitename:
                    $ref: '#/components/schemas/sitename'
                  sitenotes:
                    $ref: '#/components/schemas/sitenotes'
                  unittype:
                    $ref: '#/components/schemas/unittype'
            type: object
          type: array
        message:
          $ref: '#/components/schemas/message'
        status:
          $ref: '#/components/schemas/status'
      type: object
    date:
      example: '2013-09-30'
      format: date
      type: string
    datetime:
      example: '2013-09-30T21:02:51.000Z'
      format: dateTime
      type: string
    dbtablenameresponse:
      properties:
        data:
          items:
            type: string
          type: array
        message:
          $ref: '#/components/schemas/message'
        status:
          $ref: '#/components/schemas/status'
      type: object
    dbtablesv1_5:
      properties:
        data:
          items:
            type: object
          type: array    
    dbtables:
      properties:
        data:
          properties:
            data:
              items:
                type: object
              type: array
            limit:
              $ref: '#/components/schemas/limit'
            offset:
              $ref: '#/components/schemas/offset'
        message:
          $ref: '#/components/schemas/message'
        status:
          $ref: '#/components/schemas/status'
      type: object
    doi:
      example: 10.2157/abba1234
      type: string
    lithology:
      type: object
      properties:
        lithologyid:
          type: integer
          minimum: 1
        depth:
          type: object
          properties:
            top:
              type: number
            bottom:
              type: number
        lowerboundary:
          type: string
          nullable: true
          example: gradational over 10 cm
        description:
          type: string
    lithologyresponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/status'
        message:
          $ref: '#/components/schemas/message'
        data:
          type: array
          items:
            type: object
            properties:
              datasetid:
                $ref: '#/components/schemas/datasetid'
              lithology:
                $ref: '#/components/schemas/lithology'
    doiresponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/status'
        message:
          $ref: '#/components/schemas/message'
        data:
          type: array
          items:
            type: object
            properties:
              datasetid:
                $ref: '#/components/schemas/datasetid'
              dois:
                type: string
                nullable: true
    downloadv1point5:
      properties:
        data:
          type: object
        message:
          $ref: '#/components/schemas/message'
        success:
          $ref: '#/components/schemas/success'
      type: object
    downloadv2:
      properties:
        datasetid:
          $ref: '#/components/schemas/datasetid'
        record:
          properties:
            chronologies:
              items:
                $ref: '#/components/schemas/chronology'
              type: array
            data:
              properties:
                dataset:
                  items:
                    $ref: '#/components/schemas/dataset'
                  type: array
                samples:
                  type: string
              type: object
          type: object
        success:
          $ref: '#/components/schemas/success'
      type: object
    email:
      example: goring@wisc.edu
      format: email
      nullable: true
      type: string
    geography:
      example: '{"type":"Point","crs":{"type":"name","properties":{"name":"EPSG:4326"}},"coordinates":[-75.25,55.09167]}'
      type: string
    geopolitical:
      properties:
        data:
          properties:
            geopoliticalid:
              $ref: '#/components/schemas/geopoliticalid'
            geopoliticalname:
              $ref: '#/components/schemas/geopoliticalname'
            geopoliticalunit:
              $ref: '#/components/schemas/geopoliticalunit'
            highergeopoliticalid:
              $ref: '#/components/schemas/highergeopoliticalid'
            rank:
              example: 2
              format: int32
              type: integer
            recdatecreated:
              $ref: '#/components/schemas/datetime'
            recdatemodified:
              $ref: '#/components/schemas/datetime'
          type: array
        status:
          $ref: '#/components/schemas/status'
    geopoliticalid:
      example: 757
      format: int32
      type: integer
    geopoliticalname:
      example: Canada
      type: string
    geopoliticalunit:
      example: province
      type: string
    geopoliticalv1_5:
      properties:
        data:
          items:
            properties:
              geopoliticalid:
                $ref: '#/components/schemas/geopoliticalid'
              geopoliticalname:
                example: Antarctica
                type: string
            type: object
          type: array
        status:
          $ref: '#/components/schemas/status'
        success:
          $ref: '#/components/schemas/success'
      type: object
    handle:
      example: HOSEHEAD
      nullable: true
      type: string
    highergeopoliticalid:
      example: 756
      format: int32
      type: integer
    keywordresponse:
      properties:
        data:
          items:
            properties:
              keywords:
                type: string
          type: array
        message:
          $ref: '#/components/schemas/message'
        status:
          $ref: '#/components/schemas/status'
      type: object
    limit:
      default: 25
      minimum: 1
      type: integer
    message:
      example: Returned a vaild response.
      type: string
    occurrence:
      properties:
        data:
          items:
            properties:
              ages:
                properties:
                  age:
                    format: int64
                    type: integer
                  ageolder:
                    $ref: '#/components/schemas/ageold'
                  ageyounger:
                    $ref: '#/components/schemas/ageyoung'
                type: object
              occurrence:
                format: int64
                type: integer
              sample:
                format: int64
                type: integer
              site:
                properties:
                  altitude:
                    type: integer
                  database:
                    type: string
                  datasetid:
                    $ref: '#/components/schemas/datasetid'
                  datasettype:
                    $ref: '#/components/schemas/datasettype'
                  location:
                    type: string
                  siteid:
                    $ref: '#/components/schemas/siteid'
                  sitename:
                    $ref: '#/components/schemas/sitename'
                type: object
              taxon:
                properties:
                  taxonid:
                    format: int64
                    type: integer
                  taxonname:
                    type: string
                type: object
            type: object
          type: array
        message:
          type: string
        status:
          type: string
        success:
          type: integer
      type: object
    occurrencev1_5:
      properties:
        data:
          items:
            properties:
              ages:
                properties:
                  age:
                    format: int64
                    nullable: true
                    type: integer
                  ageolder:
                    $ref: '#/components/schemas/ageold'
                  ageyounger:
                    $ref: '#/components/schemas/ageyoung'
                type: object
              occurrence:
                format: int64
                type: integer
              sample:
                format: int64
                type: integer
              site:
                properties:
                  altitude:
                    type: integer
                  database:
                    type: string
                  datasetid:
                    $ref: '#/components/schemas/datasetid'
                  datasettype:
                    $ref: '#/components/schemas/datasettype'
                  location:
                    type: string
                  siteid:
                    $ref: '#/components/schemas/siteid'
                  sitename:
                    $ref: '#/components/schemas/sitename'
                type: object
              taxon:
                properties:
                  taxonid:
                    format: int64
                    type: integer
                  taxonname:
                    type: string
                type: object
            type: object
          type: array
        message:
          type: string
        status:
          type: string
        success:
          type: integer
      type: object
    offset:
      default: 0
      minimum: 0
      type: integer
    pollen:
      properties:
        Author:
          type: string
        EcolGroups:
          items:
            type: string
          type: array
        Extinct:
          type: boolean
        HigherTaxonID:
          format: int32
          type: integer
        Notes:
          type: string
        PublicationID:
          format: int32
          type: integer
        TaxaGroupID:
          type: string
        TaxonCode:
          type: string
        TaxonID:
          format: int32
          type: integer
        TaxonName:
          type: string
    publication:
      properties:
        Authors:
          items:
            type: string
          type: array
        Citation:
          type: string
        PubType:
          type: string
        PublicationID:
          type: integer
        Year:
          type: string
    publications:
      properties:
        Authors:
          items:
            type: string
          type: array
        Citation:
          type: string
        PubType:
          type: string
        PublicationID:
          type: integer
        Year:
          type: string
    sitedescription:
      example: Lake is located in a pre-glacial gorge of the Wisconsin river cut through the Baraboo Hills, a bedrock high. The valley is dammed at both ends by terminal moraines deposited by the Green Bay lobe, which flowed around the Baraboo Hills. Lake is fed by groundwater. Surrounding vegetation, white-black-bur oak.
      type: string
      nullable: true
    siteid:
      example: 666
      format: int64
      minimum: 1
      type: integer
    sitename:
      example: Devils Lake
      type: string
    sitenotes:
      example: This record has some little things that seem funny about it.
      type: string
      nullable: true
    sitesv1point5:
      properties:
        data:
          type: array
          items:
            properties:
              altitude:
                $ref: '#/components/schemas/altitude'
              collectionunit:
                $ref: '#/components/schemas/collectionunit'
              collectionunitid:
                $ref: '#/components/schemas/collectionunitid'
              datasetid:
                $ref: '#/components/schemas/datasetid'
              datasettype:
                $ref: '#/components/schemas/datasettype'
              geography:
                $ref: '#/components/schemas/geography'
              handle:
                $ref: '#/components/schemas/handle'
              sitedescription:
                $ref: '#/components/schemas/sitedescription'
              siteid:
                $ref: '#/components/schemas/siteid'
              sitename:
                $ref: '#/components/schemas/sitename'
              unittype:
                $ref: '#/components/schemas/unittype'
            type: object
        message:
          $ref: '#/components/schemas/message'
        status:
          $ref: '#/components/schemas/status'
        success:
          $ref: '#/components/schemas/success'
    sitesv2response:
      properties:
        success:
          $ref: '#/components/schemas/success'
        message:
          $ref: '#/components/schemas/message'
        status:
          $ref: '#/components/schemas/status'
        data:
          type: array
          items:
            $ref: '#/components/schemas/sitesv2'
    sitesv2:
      properties:
        altitude:
          $ref: '#/components/schemas/altitude'
        collectionunits:
          items:
            properties:
              collectionunit:
                $ref: '#/components/schemas/collectionunit'
              collectionunitid:
                $ref: '#/components/schemas/collectionunitid'
              collectionunittype:
                example: Core
                type: string
              datasets:
                $ref: '#/components/schemas/datasetshort'
              handle:
                $ref: '#/components/schemas/handle'
            type: object
          type: array
        geography:
          $ref: '#/components/schemas/geography'
        sitedescription:
          $ref: '#/components/schemas/sitedescription'
        siteid:
          $ref: '#/components/schemas/siteid'
        sitename:
          $ref: '#/components/schemas/sitename'
    status:
      example: success
      type: string
    success:
      enum:
        - 0
        - 1
      type: integer
    summarydatabase:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/status'
        message:
          $ref: '#/components/schemas/message'
        data:
          type: object
          properties:
            query:
              type: object
            data:
              type: array
    summarydatatype:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/status'
        message:
          $ref: '#/components/schemas/message'
        data:
          type: object
          properties:
            query:
              type: object
            data:
              type: array
    summaryalldata:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/status'
        message:
          $ref: '#/components/schemas/message'
        data:
          type: object
          properties:
            query:
              type: object
            data:
              type: array
    taxonresponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/status'
        message:
          $ref: '#/components/schemas/message'
        data:
          type: array
          items:
            $ref: '#/components/schemas/taxa'
    taxa:
      properties:
        author:
          type: string
        ecolgroup:
          items:
            type: string
          type: array
        highertaxonid:
          format: int32
          type: integer
        publicationid:
          format: int32
          type: integer
        status:
          type: boolean
        taxonid:
          format: int32
          type: integer
        taxonname:
          type: string
    taxaInDatasets:
      properties:
        data:
          items:
            properties:
              datasettypeids:
                items:
                  type: integer
                type: array
              taxongroupid:
                type: string
              taxonid:
                type: integer
              taxonname:
                type: string
            type: object
          type: array
        message:
          type: string
        status:
          type: string
        success:
          type: integer
      type: object
    unittype:
      example: Modern
      type: string
    url:
      example: http://neotomadb.org
      format: url
      type: string
info:
  contact:
    email: goring@wisc.edu
    name: Simon J Goring
    url: http://goring.org
  description: API Documentation for the Neotoma Paleoecological Database
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: 'no'
  title: Neotoma API
  version: 2.0-oas3
openapi: 3.0.0
paths:
  /v1.5/apps/DatasetTypes:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/datasetTypes'
          description: Returns the set of dataset types supported by Neotoma.
      tags:
        - Database tables
        - v1.5
  /v1.5/apps/TaxaInDatasets:
    get:
      description: The set of all taxa, and a list of all the datasets in which each taxon appears.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/taxaInDatasets'
          description: An array of taxon identities with associated dataset IDs.
      summary: Lists all Neotoma taxa (alphebetically) and the dataset types in which the taxa appear.
      tags:
        - v1.5
  /v1.5/apps/collectionTypes:
    get:
      operationId: getCollTypes
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collectiontyperesponse'
          description: Returns the set of collectiontypes recorded in Neotoma.
      summary: Return the list of collection types.
      tags:
        - Database tables
        - v1.5
  /v1.5/data/contacts/{contactid}:
    get:
      description: Returns researcher contact information associated with a record.
      parameters:
        - description: Unique contact identifier.
          in: path
          name: contactid
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contactresponse'
          description: Contact
      summary: Contact information for Neotoma contributors.
      tags:
        - Contact metadata
        - v1.5
  /v1.5/data/datasets/{datasetid}:
    get:
      description: Returns information about Neotoma dataset
      parameters:
        - $ref: '#/components/parameters/datasetidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: An array of datasets.
      summary: Dataset information.
      tags:
        - Dataset metadata
        - v1.5
  /v1.5/data/downloads/{datasetid}:
    get:
      description: Returns the named Neotoma Database table.
      parameters:
        - $ref: '#/components/parameters/datasetidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/downloadv1point5'
                type: object
          description: Returned download object.
      summary: Returns the named Neotoma Database table.
      tags:
        - Data download
        - v1.5
  /v1.5/data/geopoliticalunits:
    get:
      parameters:
        - $ref: '#/components/parameters/gpidQuery'
        - $ref: '#/components/parameters/gpnameQuery'
        - $ref: '#/components/parameters/rankQuery'
        - $ref: '#/components/parameters/lowergpQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/geopoliticalv1_5'
          description: An array of geopolitical units.
      summary: Returns information about geopolitical units.
      tags:
        - Geopolitical metadata
        - v1.5
  /v1.5/data/geopoliticalunits/{gpid}:
    get:
      parameters:
        - $ref: '#/components/parameters/gpidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/geopolitical'
                type: object
          description: An array of geopolitical units.
      summary: Returns information about geopolitical units.
      tags:
        - Geopolitical metadata
        - v1.5
  /v1.5/data/occurrence/{occurrenceid}:
    get:
      description: Given a unique occurrence identifier associated with a unique occurrence in Neotoma, return individual occurrence information for the sample.
      parameters:
        - $ref: '#/components/parameters/occurrenceidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/occurrencev1_5'
          description: A single occurrence object.
      summary: Occurrence information for a taxon and sample.
      tags:
        - Occurrence metadata
        - v1.5
  /v1.5/data/sites/{siteid}:
    get:
      description: Returns information about Neotoma publications
      parameters:
        - $ref: '#/components/parameters/siteidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sitesv1point5'
          description: An array of site elements.
      summary: Site information.
      tags:
        - Site metadata
        - v1.5
  /v1.5/dbtables/{table}:
    get:
      description: Returns the named Neotoma Database table.  An empty query returns a list of all Neotoma tables.
      parameters:
        - description: Neotoma database table name.
          example: geochrontypes
          in: path
          name: table
          required: true
          schema:
            type: string
            example: agetypes
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    $ref: '#/components/schemas/success'
                  status:
                    $ref: '#/components/schemas/status'
                  message:
                    $ref: '#/components/schemas/message'
                  data:
                    $ref: '#/components/schemas/dbtablesv1_5'
          description: Returned table.
      summary: Returns the named Neotoma Database table.
      tags:
        - Database tables
        - v1.5
  /v2.0/apps/authorpis:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authorpiresponse'
          description: A table of Neotoma collection types.
      tags:
        - Collection units
        - v2.0
  /v2.0/apps/collectiontypes:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collectiontyperesponse'
          description: A table of Neotoma collection types.
      tags:
        - Collection units
        - v2.0
  /v2.0/apps/datasettypes:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/datasettyperesponse'
          description: A table of Neotoma collection types.
      tags:
        - Datasets
        - v2.0
  /v2.0/apps/depositionalenvironments/root:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/depositionalresponse'
          description: A table of Neotoma collection types.
      tags:
        - Datasets
        - v2.0
  /v2.0/apps/keywords:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/keywordresponse'
          description: A list of all keywords used for analysis units in the database.
      tags:
        - keywords
        - v2.0
  /v2.0/apps/taphonomysystems:
    get:
      parameters:
        - description: Unique dataset type identifier.
          in: query
          name: datasettypeid
          required: true
          schema:
            format: int64
            type: integer
            minimum: 1
            maximum: 26
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/taphonomyresponse'
          description: A table of Neotoma collection types.
      tags:
        - Datasets
        - v2.0
  /v2.0/apps/taxagrouptypes:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/taxagroupresponse'
          description: A table of Neotoma collection types.
      tags:
        - Datasets
        - v2.0
  /v2.0/apps/taxaindatasets:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/taxaInDatasets'
          description: A list of all taxa in neotoma and the datasets in which they are found.
      tags:
        - Taxa
        - v2.0
  /v2.0/data/chronology/{chronid}:
    get:
      description: Returns the chronology and chronological controls used for a dataset age model.
      parameters:
        - $ref: '#/components/parameters/chronidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chronologyv2_0'
          description: A Neotoma chronology object.
      summary: Chronology metadata for a dataset.
      tags:
        - Chronology metadata
        - v2.0
  /v2.0/data/contacts:
    get:
      description: Returns researcher contact information associated with a record.
      parameters:
        - $ref: '#/components/parameters/contactidQuery'
        - $ref: '#/components/parameters/familyNameQuery'
        - $ref: '#/components/parameters/contactNameQuery'
        - $ref: '#/components/parameters/contactStatusQuery'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/offsetParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/contactresponse'
                type: array
          description: contact
      summary: Contact information for Neotoma contributors.
      tags:
        - Contact metadata
        - v2.0
  /v2.0/data/contacts/{contactid}:
    get:
      description: Returns contact information for an individaul in the database.
      parameters:
        - $ref: '#/components/parameters/contactidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contactresponse'
          description: A Neotoma contacts object.
      summary: Contact information for an individual
      tags:
        - Contact metadata
        - v2.0
  /v2.0/data/contacts/{contactid}/sites:
    get:
      description: Returns the set of sites associated with an individual (or individuals).
      parameters:
        - $ref: '#/components/parameters/contactidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sitesv2response'
          description: A Neotoma sites object.
      summary: Site information for all sites by an individual
      tags:
        - Site metadata
        - v2.0
  /v2.0/data/datasets_elc/{datasetid}:
    get:
      description: Returns the dataset information based on a dataset ID for the ELC API.
      parameters:
        - $ref: '#/components/parameters/datasetidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/datasetselcresponse'
          description: A Neotoma datasets object suitable for the EarthLife Consortium API.
      summary: Site information for all sites by an individual
      tags:
        - Dataset metadata
        - v2.0
  /v2.0/data/datasets_elc:
    get:
      description: Returns the dataset information based on a dataset ID for the ELC API.
      parameters:
        - $ref: '#/components/parameters/siteidQuery'
        - $ref: '#/components/parameters/contactidQuery'
        - $ref: '#/components/parameters/datasettypeQuery'
        - $ref: '#/components/parameters/altMinQuery'
        - $ref: '#/components/parameters/altMaxQuery'
        - $ref: '#/components/parameters/locQuery'
        - $ref: '#/components/parameters/ageYoungQuery'
        - $ref: '#/components/parameters/ageOldQuery'
        - $ref: '#/components/parameters/ageOfQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/datasetselcresponse'
          description: A Neotoma datasets object suitable for the EarthLife Consortium API.
      summary: Site information for all sites by an individual
      tags:
        - Dataset metadata
        - v2.0
  /v2.0/data/datasets:
    get:
      description: Returns information about Neotoma dataset
      parameters:
        - $ref: '#/components/parameters/siteidQuery'
        - $ref: '#/components/parameters/contactidQuery'
        - $ref: '#/components/parameters/datasettypeQuery'
        - $ref: '#/components/parameters/altMinQuery'
        - $ref: '#/components/parameters/altMaxQuery'
        - $ref: '#/components/parameters/locQuery'
        - $ref: '#/components/parameters/ageYoungQuery'
        - $ref: '#/components/parameters/ageOldQuery'
        - $ref: '#/components/parameters/ageOfQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/datasetv2'
          description: An array of datasets.
      summary: Dataset information.
      tags:
        - Dataset metadata
        - v2.0
  /v2.0/data/datasets/{datasetid}:
    get:
      description: Returns information about Neotoma dataset
      parameters:
        - $ref: '#/components/parameters/datasetidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataset'
          description: An array of datasets.
      summary: Dataset information.
      tags:
        - Dataset metadata
        - v2.0
  /v2.0/data/datasets/{datasetid}/chronologies:
    get:
      description: Returns the set of chronologies associated with a dataset.
      parameters:
        - $ref: '#/components/parameters/datasetidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chronologyv2response'
          description: chronology
      summary: Chronology information for a record
      tags:
        - Chronology metadata
        - v2.0
  /v2.0/data/datasets/{datasetid}/contacts:
    get:
      description: Returns researcher contact information associated with a record.
      parameters:
        - $ref: '#/components/parameters/datasetidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contact'
          description: contact
      summary: Contact information for Neotoma contributors.
      tags:
        - Contact metadata
        - v2.0
  /v2.0/data/datasets/{datasetid}/doi:
    get:
      description: Returns Digital Object Identifiers associated with specific datasets.
      parameters:
        - $ref: '#/components/parameters/datasetidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/doiresponse'
          description: DOI
      summary: DOI and associated metadata for a dataset.
      tags:
        - DOI metadata
        - v2.0
  /v2.0/data/datasets/{datasetid}/lithology:
    get:
      description: Returns the lithology associated with specific datasets.
      parameters:
        - $ref: '#/components/parameters/datasetidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lithologyresponse'
          description: Lithology
      summary: Lithology metadata for a dataset.
      tags:
        - lithology metadata
        - v2.0
  /v2.0/data/datasets/{datasetid}/publications:
    get:
      description: Returns publications data associated with specific datasets.
      parameters:
        - $ref: '#/components/parameters/datasetidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/publicationsresponse'
          description: Publication
      summary: Publication and associated metadata for a dataset.
      tags:
        - Publication metadata
        - v2.0
  /v2.0/data/datasets/{datasetid}/sites:
    get:
      description: Returns site data associated with specific datasets.
      parameters:
        - $ref: '#/components/parameters/datasetidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sitesv2response'
          description: Site
      summary: Site metadata for a dataset.
      tags:
        - Site metadata
        - v2.0
  /v2.0/data/datasets/{datasetid}/taxa:
    get:
      description: Returns the set of taxa associated with a specific dataset.
      parameters:
        - $ref: '#/components/parameters/datasetidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/taxonresponse'
          description: Taxa
      summary: Taxon metadata for a dataset.
      tags:
        - Taxa metadata
        - v2.0
  /v2.0/data/datasets/db:
    get:
      description: Returns datasets associated with a specific constituent database in Neotoma.
      parameters:
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/databaseQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/datasetresponsev2_0'
          description: Datasets
      summary: Datasets associated with a Neotoma database.
      tags:
        - Dataset metadata
        - v2.0
  /v2.0/data/dbtables:
    get:
      description: |
        Returns the named Neotoma Database table.  An empty query will return a list of tables.
      parameters:
        - $ref: '#/components/parameters/tableQuery'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/offsetParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dbtables'
          description: Returned table.
      summary: Returns the full content of a named Neotoma Database table.
      tags:
        - Database tables
        - v2.0
  /v2.0/data/dbtables/{table}:
    get:
      description: |
        Returns the named Neotoma Database table.  An empty query will return a list of tables.
      parameters:
        - $ref: '#/components/parameters/tableParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dbtables'
          description: Returned table.
      summary: Returns the full content of a named Neotoma Database table.
      tags:
        - Database tables
        - v2.0
  /v2.0/data/downloads/{datasetid}:
    get:
      description: Returns the named Neotoma Database table.
      parameters:
        - $ref: '#/components/parameters/datasetidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/downloadv2'
          description: Returned download object.
      summary: Returns the named Neotoma data record.
      tags:
        - Data download
        - v2.0
  /v2.0/data/frozen/{datasetid}:
    get:
      description: Returns the full metadata for a Neotoma record as it was when the DOI was minted.
      parameters:
        - $ref: '#/components/parameters/datasetidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/downloadv2'
          description: Returned download object.
      summary: Returns the named Neotoma data record.
      tags:
        - Data download
        - v2.0
  /v2.0/data/geopoliticalunits:
    get:
      parameters:
        - $ref: '#/components/parameters/gpidQuery'
        - $ref: '#/components/parameters/gpnameQuery'
        - $ref: '#/components/parameters/rankQuery'
        - $ref: '#/components/parameters/lowergpQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/geopolitical'
          description: An array of geopolitical units.
      summary: Returns information about geopolitical units.
      tags:
        - Geopolitical metadata
        - v2.0
  /v2.0/data/geopoliticalunits/{gpid}:
    get:
      parameters:
        - $ref: '#/components/parameters/gpidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/geopolitical'
          description: An array of geopolitical units.
      summary: Returns information about geopolitical units.
      tags:
        - Geopolitical metadata
        - v2.0
  /v2.0/data/geopoliticalunits/{gpid}/datasets:
    get:
      parameters:
        - $ref: '#/components/parameters/gpidPath'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/offsetParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/datasetresponsev2_0'
          description: An array of datasets.
      summary: Returns information about datasets based on the geopolitical unit in which they occur.
      tags:
        - Site metadata
        - v2.0
  /v2.0/data/geopoliticalunits/{gpid}/sites:
    get:
      parameters:
        - $ref: '#/components/parameters/gpidPath'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/offsetParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sitesv2response'
          description: An array of sites.
      summary: Returns information about sites based on the geopolitical unit in which they occur.
      tags:
        - Site metadata
        - v2.0
  /v2.0/data/occurrences:
    get:
      description: Returns occurrence information for a particular taxon, geographic region or temporal slice.
      parameters:
        - $ref: '#/components/parameters/taxonNameQuery'
        - $ref: '#/components/parameters/taxonidQuery'
        - $ref: '#/components/parameters/siteidQuery'
        - $ref: '#/components/parameters/siteNameQuery'
        - $ref: '#/components/parameters/datasettypeQuery'
        - $ref: '#/components/parameters/altMinQuery'
        - $ref: '#/components/parameters/altMaxQuery'
        - $ref: '#/components/parameters/locQuery'
        - $ref: '#/components/parameters/ageOfQuery'
        - $ref: '#/components/parameters/ageYoungQuery'
        - $ref: '#/components/parameters/ageOldQuery'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/offsetParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/occurrence'
          description: occurrence
      summary: Individual occurrence records for Neotoma records.
      tags:
        - Occurrence metadata
        - v2.0
  /v2.0/data/occurrences/{occurrenceid}:
    get:
      description: Returns occurrence information for a particular taxon, geographic region or temporal slice.
      parameters:
        - $ref: '#/components/parameters/occurrenceidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/occurrence'
          description: occurrence
      summary: Individual occurrence records for Neotoma records.
      tags:
        - Occurrence metadata
        - v2.0
  /v2.0/data/oxcal/calibrate:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/taxagroupresponse'
          description: A table of Neotoma collection types.
      tags:
        - Datasets
        - v2.0
  /v2.0/data/pollen:
    get:
      parameters:
        - $ref: '#/components/parameters/taxonNameQuery'
        - $ref: '#/components/parameters/taxonidQuery'
        - $ref: '#/components/parameters/siteidQuery'
        - $ref: '#/components/parameters/siteNameQuery'
        - $ref: '#/components/parameters/datasettypeQuery'
        - $ref: '#/components/parameters/altMinQuery'
        - $ref: '#/components/parameters/altMaxQuery'
        - $ref: '#/components/parameters/locQuery'
        - $ref: '#/components/parameters/ageOfQuery'
        - $ref: '#/components/parameters/ageYoungQuery'
        - $ref: '#/components/parameters/ageOldQuery'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/offsetParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pollenresponse'
          description: A record of all pollen samples in time/space for a particular taxon.
      tags:
        - Pollen
        - v2.0
  /v2.0/data/pollen/{id}:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pollenresponse'
          description: A record of all pollen samples in time/space for a particular taxon.
      tags:
        - Pollen
        - v2.0
  /v2.0/data/publications:
    get:
      description: Returns information about Neotoma publications
      parameters:
        - $ref: '#/components/parameters/publicationidQuery'
        - $ref: '#/components/parameters/datasetidQuery'
        - $ref: '#/components/parameters/siteidQuery'
        - $ref: '#/components/parameters/familyNameQuery'
        - $ref: '#/components/parameters/pubtypeQuery'
        - $ref: '#/components/parameters/pubyearQuery'
        - $ref: '#/components/parameters/pubsearchQuery'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/offsetParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/publications'
          description: A list of publications.
      summary: Returns information about Neotoma publications
      tags:
        - Publication metadata
        - v2.0
  /v2.0/data/publications/{publicationid}:
    get:
      description: Returns information about Neotoma publications
      parameters:
        - $ref: '#/components/parameters/publicationidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/publications'
          description: A list of publications.
      summary: Returns information about Neotoma publications
      tags:
        - Publication metadata
        - v2.0
  /v2.0/data/sites:
    get:
      description: Returns information about Neotoma sites
      parameters:
        - $ref: '#/components/parameters/siteidQuery'
        - $ref: '#/components/parameters/siteNameQuery'
        - $ref: '#/components/parameters/altMaxQuery'
        - $ref: '#/components/parameters/altMinQuery'
        - $ref: '#/components/parameters/locQuery'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/offsetParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sitesv2'
          description: An array of sites.
      summary: Site information.
      tags:
        - Site metadata
        - v2.0
  /v2.0/data/sites/{siteid}:
    get:
      description: Returns information about Neotoma sites.
      parameters:
        - $ref: '#/components/parameters/siteidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sitesv2'
          description: An array of sites.
      summary: Site information.
      tags:
        - Site metadata
        - v2.0
  /v2.0/data/sites/{siteid}/chronologies:
    get:
      description: Given a Neotoma siteid, return all associated chronologies.
      parameters:
        - $ref: '#/components/parameters/siteidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chronologyv2response'
          description: chronology
      summary: Chronology information for Neotoma sites.
      tags:
        - Chronology metadata
        - v2.0
  /v2.0/data/sites/{siteid}/contacts:
    get:
      description: Given a Neotoma siteid, return all associated contacts.
      parameters:
        - $ref: '#/components/parameters/siteidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contact'
          description: contact
      summary: Contact information for Neotoma contributors based on a known Neotoma site.
      tags:
        - Contact metadata
        - v2.0
  /v2.0/data/sites/{siteid}/datasets:
    get:
      description: Returns information about Neotoma dataset
      parameters:
        - $ref: '#/components/parameters/siteidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataset'
          description: An array of datasets.
      summary: Dataset information.
      tags:
        - Dataset metadata
        - v2.0
  /v2.0/data/sites/{siteid}/datasets_elc:
    get:
      description: Returns information about Neotoma dataset, formatted for the EarthLifeConsortium
      parameters:
        - $ref: '#/components/parameters/siteidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/datasetelcresponse'
          description: An array of datasets.
      summary: Dataset information.
      tags:
        - Dataset metadata
        - v2.0
  /v2.0/data/sites/{siteid}/geopoliticalunits:
    get:
      parameters:
        - $ref: '#/components/parameters/siteidPath'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/offsetParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/geopolitical'
          description: An array of geopolitical units.
      summary: Returns information about geopolitical units.
      tags:
        - Geopolitical metadata
        - v2.0
  /v2.0/data/sites/{siteid}/sites:
    get:
      parameters:
        - $ref: '#/components/parameters/siteidPath'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/offsetParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/siteresponse'
          description: An array of sites.
      summary: Returns information about sites.
      tags:
        - Site metadata
        - v2.0
  /v2.0/data/taxa:
    get:
      description: Returns information about a taxon and (if requested) related taxa.
      parameters:
        - $ref: '#/components/parameters/taxonNameQuery'
        - $ref: '#/components/parameters/datasetidQuery'
        - $ref: '#/components/parameters/siteidQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/taxa'
          description: A taxon or array of taxa.
      summary: Taxonomic information.
      tags:
        - Taxonomic metadata
        - v2.0
  /v2.0/data/summary/dsdbmonth:
    get:
      description: Returns summary statistics for the database as a whole, broken down by constituent database.
      parameters:
        - description: The starting month (from present == 0) for which to generate the summary.
          example: 0
          in: query
          name: start
          required: true
          schema:
            type: integer
            default: 0
            minimum: 0
            maximum: 9999
        - description: The ending month (from present == 0) for which to generate the summary.
          example: 1
          in: query
          name: end
          required: true
          schema:
            type: integer
            default: 1
            minimum: 0
            maximum: 9999
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/summarydatabase'
          description: A count of the datasets added by database for the requested period.
      summary: Summary information
      tags:
        - Summary info
        - v2.0
  /v2.0/data/summary/dstypemonth:
    get:
      description: Returns summary statistics for the database as a whole, broken down by dataset type.
      parameters:
        - description: The starting month (from present == 0) for which to generate the summary.
          example: 0
          in: query
          name: start
          required: true
          schema:
            type: integer
            default: 0
        - description: The ending month (from present == 0) for which to generate the summary.
          example: 1
          in: query
          name: end
          required: true
          schema:
            type: integer
            default: 1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/summarydatatype'
          description: A count of the datasets added by datasettype for the requested period.
      summary: Summary information
      tags:
        - Summary info
        - v2.0
  /v2.0/data/summary/rawbymonth:
    get:
      description: Returns the count of sites, datasets, publications and other objects added to Neotoma during the requested time period.
      parameters:
        - description: The starting month (from present == 0) for which to generate the summary.
          example: 0
          in: query
          name: start
          required: true
          schema:
            type: integer
            default: 0
        - description: The ending month (from present == 0) for which to generate the summary.
          example: 1
          in: query
          name: end
          required: true
          schema:
            type: integer
            default: 1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/summaryalldata'
          description: A count of the data objects added to Neotoma.
      summary: Summary information
      tags:
        - Summary info
        - v2.0
  /v2.0/data/taxa/{taxonid}:
    get:
      description: Returns information about a taxon and (if requested) related taxa.
      parameters:
        - $ref: '#/components/parameters/taxonidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/taxonresponse'
          description: A taxon or array of taxa.
      summary: Taxonomic information.
      tags:
        - Taxonomic metadata
        - v2.0
  /v2.0/data/taxa/{taxonid}/occurrences:
    get:
      description: Returns occurrence information for a particular taxon, geographic region or temporal slice.
      parameters:
        - $ref: '#/components/parameters/taxonidPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/occurrence'
          description: occurrence
      summary: Individual occurrence records for Neotoma records.
      tags:
        - Occurrence metadata
        - v2.0
  /v2.0/dbtables/table:
    get:
      description: Returns the named Neotoma Database table.  An empty query returns a list of all Neotoma tables.
      parameters:
        - description: Neotoma database table name.
          example: geochrontypes
          in: query
          name: table
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/status'
                  message:
                    $ref: '#/components/schemas/message'
                  data:
                    type: object
                    properties:
                      limit:
                        type: integer
                      offset:
                        type: integer
                      data:
                        items:
                          $ref: '#/components/schemas/dbtables'
                        type: array
          description: Returned table.
      summary: Returns the named Neotoma Database table with limits & offsets.
      tags:
        - Database tables
        - v1.5
  /v2.0/dbtables/tablenames:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dbtablenameresponse'
          description: A list of all the tables in the Neotoma database.
      tags:
        - Tables
        - v2.0
servers:
  - description: Neotoma production server.
    url: https://api.neotomadb.org/
  - description: Neotoma development server.
    url: https://api-dev.neotomadb.org/
tags:
  - description: Endpoints that access tables from Neotoma verbatim.
    externalDocs:
      url: http://open.neotomadb.org/schemas/#Structure
    name: Database tables
  - description: Information about chronological controls and the models used to add the temporal component to records.
    externalDocs:
      url: https://neotoma-manual.readthedocs.io/en/latest/tables_chron.html
    name: Chronology metadata
  - description: Information about Neotoma data contributors, authors and data analysts.
    externalDocs:
      url: https://neotoma-manual.readthedocs.io/en/latest/tables_contacts.html
    name: Contact metadata
  - description: Information about site location and metadata specific to the individual dataset.
    externalDocs:
      url: https://neotoma-manual.readthedocs.io/en/latest/tables_dataset.html
    name: Dataset metadata
  - description: Full dataset download, including all sample data for a particular dataset.
    externalDocs:
      url: https://neotoma-manual.readthedocs.io/en/latest/tables_samples.html
    name: Data download
  - description: Information about the geopolitical units in which a site is located.
    name: Geopolitical metadata
  - description: A simplified data return, similar to the data download, but specific to a particular taxon, time or location.
    name: Occurrence metadata
  - description: For ease of use in online applications, pre-calculated pollen percentages for taxa, location or temporal bins.
    name: Pollen proportions
  - description: Formatted publication data related to Neotoma records.
    externalDocs:
      url: https://neotoma-manual.readthedocs.io/en/latest/tables_publications.html
    name: Publication metadata
  - description: All metadata associated with a particular site with fossil records.
    externalDocs:
      url: https://neotoma-manual.readthedocs.io/en/latest/tables_site.html
    name: Site metadata
  - description: All available information about a particular taxon.
    externalDocs:
      url: https://neotoma-manual.readthedocs.io/en/latest/tables_taxa.html
    name: Taxonomic metadata
  - description: All API endpoints associated with v1.5 of the Neotoma API.
    externalDocs:
      url: http://github.com/NeotomaDB/api_nodetest
    name: v1.5
  - description: All API endpoints associated with v2.0 of the Neotoma API.
    externalDocs:
      url: http://github.com/NeotomaDB/api_nodetest
    name: v2.0