{
  "stats": {
    "suites": 199,
    "tests": 198,
    "passes": 135,
    "pending": 0,
    "failures": 63,
    "start": "2023-12-22T22:22:51.287Z",
    "end": "2023-12-22T22:23:36.829Z",
    "duration": 45542,
    "testsRegistered": 198,
    "passPercent": 68.18181818181817,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "200e9b74-30e4-4498-9638-81fc5106118a",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "checkForUnfulfilledExpectations.call(this);\nrecordedExpects = [];",
          "err": {},
          "uuid": "b65a58ff-3d4e-4eac-906c-b3714b6869ff",
          "parentUUID": "200e9b74-30e4-4498-9638-81fc5106118a",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "7b8c10e4-195c-4a70-96d4-3f86e3d6ada6",
          "title": "tests for /v1.5/data/sites/{siteid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v1.5-data-sites-{siteid}-test.js",
          "file": "/test/v1.5-data-sites-{siteid}-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "39890a6c-af14-4e9b-95c7-e46b1e04d225",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v1.5-data-sites-{siteid}-test.js",
              "file": "/test/v1.5-data-sites-{siteid}-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"An array of site elements.\"",
                  "fullTitle": "tests for /v1.5/data/sites/{siteid} tests for get should respond 200 for \"An array of site elements.\"",
                  "timedOut": false,
                  "duration": 487,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v1.5/data/sites/500', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "a0a6abdc-7dfc-4bc0-895f-3a9c1f972309",
                  "parentUUID": "39890a6c-af14-4e9b-95c7-e46b1e04d225",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a0a6abdc-7dfc-4bc0-895f-3a9c1f972309"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 487,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "bbd84281-d00e-4f26-8090-8bb5a4af6a6e",
          "title": "tests for /v2.0/data/taxa",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-taxa-test.js",
          "file": "/test/v2.0-data-taxa-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "aa45089e-50b8-4fa5-b348-c8ebc89abb7d",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-taxa-test.js",
              "file": "/test/v2.0-data-taxa-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"A taxon or array of taxa.\"",
                  "fullTitle": "tests for /v2.0/data/taxa tests for get should respond 200 for \"A taxon or array of taxa.\"",
                  "timedOut": false,
                  "duration": 182,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/taxa', {\n  'qs': {'taxonname': 'aliqua laboris', 'taxongroup': 'aliqua quis Ut reprehenderit officia', 'ecolgroup': 'culpa Duis fugiat do veniam', 'limit': 10, 'offset': 0},\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "c75d8ffe-42b9-4fc8-bcb2-3af274626414",
                  "parentUUID": "aa45089e-50b8-4fa5-b348-c8ebc89abb7d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c75d8ffe-42b9-4fc8-bcb2-3af274626414"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 182,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "5a77f2b7-dbf0-49cf-b57c-82d43b043068",
          "title": "tests for /v1.5/apps/DatasetTypes",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v1.5-apps-DatasetTypes-test.js",
          "file": "/test/v1.5-apps-DatasetTypes-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4f182836-01c6-41d1-a6d3-656956cc7237",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v1.5-apps-DatasetTypes-test.js",
              "file": "/test/v1.5-apps-DatasetTypes-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"Returns the set of dataset types supported by Neotoma.\"",
                  "fullTitle": "tests for /v1.5/apps/DatasetTypes tests for get should respond 200 for \"Returns the set of dataset types supported by Neotoma.\"",
                  "timedOut": false,
                  "duration": 177,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v1.5/apps/DatasetTypes', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "9d091f7a-f196-40c9-b12b-75e4eaf81b37",
                  "parentUUID": "4f182836-01c6-41d1-a6d3-656956cc7237",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9d091f7a-f196-40c9-b12b-75e4eaf81b37"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 177,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c720f2e0-fa72-4a21-8ed6-4a7e27d82522",
          "title": "tests for /v2.0/data/datasets/{datasetid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-datasets-{datasetid}-test.js",
          "file": "/test/v2.0-data-datasets-{datasetid}-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "22d6e0cc-bad1-439f-9c2d-206a16e54224",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-datasets-{datasetid}-test.js",
              "file": "/test/v2.0-data-datasets-{datasetid}-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"An array of datasets.\"",
                  "fullTitle": "tests for /v2.0/data/datasets/{datasetid} tests for get should respond 200 for \"An array of datasets.\"",
                  "timedOut": false,
                  "duration": 897,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/datasets/9679', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "20f27c41-16df-4ba1-b8cc-662503b634c6",
                  "parentUUID": "22d6e0cc-bad1-439f-9c2d-206a16e54224",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "20f27c41-16df-4ba1-b8cc-662503b634c6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 897,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "bdb36d93-85af-4421-be91-255cb3a1bb83",
          "title": "tests for /v2.0/data/frozen/{datasetid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-frozen-{datasetid}-test.js",
          "file": "/test/v2.0-data-frozen-{datasetid}-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "cf31d0e4-d8b1-471b-ad5f-aa3a6de1f3a2",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-frozen-{datasetid}-test.js",
              "file": "/test/v2.0-data-frozen-{datasetid}-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"Returned download object.\"",
                  "fullTitle": "tests for /v2.0/data/frozen/{datasetid} tests for get should respond 200 for \"Returned download object.\"",
                  "timedOut": false,
                  "duration": 235,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/frozen/500', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "5d34c0f2-c798-436a-9617-d9649d04bf54",
                  "parentUUID": "cf31d0e4-d8b1-471b-ad5f-aa3a6de1f3a2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5d34c0f2-c798-436a-9617-d9649d04bf54"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 235,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7932eed9-bb1d-4a9d-8bbc-149fcc72fa8d",
          "title": "tests for /v2.0/data/datasets/{datasetid}/publications",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-datasets-{datasetid}-publications-test.js",
          "file": "/test/v2.0-data-datasets-{datasetid}-publications-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4eb78121-407f-45f6-a4ba-8d22ef02ce40",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-datasets-{datasetid}-publications-test.js",
              "file": "/test/v2.0-data-datasets-{datasetid}-publications-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"Publication\"",
                  "fullTitle": "tests for /v2.0/data/datasets/{datasetid}/publications tests for get should respond 200 for \"Publication\"",
                  "timedOut": false,
                  "duration": 162,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/datasets/500/publications', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "2a9c005f-6d65-4279-84db-0e724beeb100",
                  "parentUUID": "4eb78121-407f-45f6-a4ba-8d22ef02ce40",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2a9c005f-6d65-4279-84db-0e724beeb100"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 162,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c028f51f-d338-4223-ba6b-1c72b8bfb7f3",
          "title": "tests for /v2.0/data/datasets",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-datasets-test.js",
          "file": "/test/v2.0-data-datasets-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "1e165069-b74c-4d0e-931a-10b93e638895",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-datasets-test.js",
              "file": "/test/v2.0-data-datasets-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"An array of datasets.\"",
                  "fullTitle": "tests for /v2.0/data/datasets tests for get should respond 200 for \"An array of datasets.\"",
                  "timedOut": false,
                  "duration": 173,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/datasets', {\n  'qs': {'sitename': 'anim est', 'database': 'Deep-Time Palynology Database', 'datasettype': 'specimen stable isotope', 'altmin': 10, 'altmax': 100, 'loc': '{\"type\":\"Polygon\",\"coordinates\":[[[-104.053249,41.001406],[-104.675999,41.000957],[-104.855273,40.998048],[-105.277138,40.998173],[-105.730421,40.996886],[-106.217573,40.997734],[-106.453859,41.002057],[-106.857773,41.002663],[-107.625624,41.002124],[-108.250649,41.000114],[-108.884138,41.000094],[-109.050076,41.000659],[-109.048044,40.619231],[-109.050946,40.444368],[-109.050615,39.87497],[-109.051363,39.497674],[-109.051512,39.126095],[-109.054189,38.874984],[-109.059541,38.719888],[-109.060062,38.275489],[-109.041762,38.16469],[-109.041058,37.907236],[-109.041865,37.530726],[-109.04581,37.374993],[-109.045223,36.999084],[-108.620309,36.999287],[-108.249358,36.999015],[-108.000623,37.000001],[-107.420913,37.000005],[-106.877292,37.000139],[-106.869796,36.992426],[-106.201469,36.994122],[-105.62747,36.995679],[-105.1208,36.995428],[-105.000554,36.993264],[-104.338833,36.993535],[-103.733247,36.998016],[-103.002199,37.000104],[-102.814616,37.000783],[-102.698142,36.995149],[-102.04224,36.993083],[-102.041974,37.352613],[-102.041574,37.680436],[-102.044644,38.045532],[-102.045324,38.453647],[-102.045388,38.813392],[-102.048449,39.303138],[-102.050422,39.646048],[-102.051744,40.003078],[-102.051725,40.537839],[-102.051614,41.002377],[-102.556789,41.002219],[-102.865784,41.001988],[-103.497447,41.001635],[-104.053249,41.001406]]]}', 'siteid': 8099, 'datasetid': 72519572, 'doi': '10%4272539/SW', 'gpid': 756, 'keyword': 'beyond radiocarbon', 'contactid': 7088, 'taxa': 'Excepteur irure reprehenderit dolore nulla', 'ageyoung': 1000, 'ageold': 10000, 'ageof': 21345193, 'limit': 10, 'offset': 0},\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "2e5729d3-37cc-463e-ab8c-9032f3afb8b8",
                  "parentUUID": "1e165069-b74c-4d0e-931a-10b93e638895",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2e5729d3-37cc-463e-ab8c-9032f3afb8b8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 173,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "423dd61a-9f40-4c33-a612-5ae127a00aeb",
          "title": "tests for /v2.0/data/pollen",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-pollen-test.js",
          "file": "/test/v2.0-data-pollen-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "bf93d766-9b15-49be-9b44-a45da7ae02a4",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-pollen-test.js",
              "file": "/test/v2.0-data-pollen-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"A record of all pollen samples in time/space for a particular taxon.\"",
                  "fullTitle": "tests for /v2.0/data/pollen tests for get should respond 200 for \"A record of all pollen samples in time/space for a particular taxon.\"",
                  "timedOut": false,
                  "duration": 171,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/pollen', {\n  'qs': {'taxonname': 'fugiat tempor', 'taxonid': 45210, 'siteid': 22286, 'sitename': 'exercitation irure sed', 'datasettype': 'biomarker', 'altmin': 10, 'altmax': 100, 'loc': '{\"type\":\"Polygon\",\"coordinates\":[[[-104.053249,41.001406],[-104.675999,41.000957],[-104.855273,40.998048],[-105.277138,40.998173],[-105.730421,40.996886],[-106.217573,40.997734],[-106.453859,41.002057],[-106.857773,41.002663],[-107.625624,41.002124],[-108.250649,41.000114],[-108.884138,41.000094],[-109.050076,41.000659],[-109.048044,40.619231],[-109.050946,40.444368],[-109.050615,39.87497],[-109.051363,39.497674],[-109.051512,39.126095],[-109.054189,38.874984],[-109.059541,38.719888],[-109.060062,38.275489],[-109.041762,38.16469],[-109.041058,37.907236],[-109.041865,37.530726],[-109.04581,37.374993],[-109.045223,36.999084],[-108.620309,36.999287],[-108.249358,36.999015],[-108.000623,37.000001],[-107.420913,37.000005],[-106.877292,37.000139],[-106.869796,36.992426],[-106.201469,36.994122],[-105.62747,36.995679],[-105.1208,36.995428],[-105.000554,36.993264],[-104.338833,36.993535],[-103.733247,36.998016],[-103.002199,37.000104],[-102.814616,37.000783],[-102.698142,36.995149],[-102.04224,36.993083],[-102.041974,37.352613],[-102.041574,37.680436],[-102.044644,38.045532],[-102.045324,38.453647],[-102.045388,38.813392],[-102.048449,39.303138],[-102.050422,39.646048],[-102.051744,40.003078],[-102.051725,40.537839],[-102.051614,41.002377],[-102.556789,41.002219],[-102.865784,41.001988],[-103.497447,41.001635],[-104.053249,41.001406]]]}', 'ageof': 23439224, 'ageyoung': 1000, 'ageold': 10000, 'limit': 10, 'offset': 0},\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "095fcf79-e1af-4083-967d-0bb2e73c803e",
                  "parentUUID": "bf93d766-9b15-49be-9b44-a45da7ae02a4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "095fcf79-e1af-4083-967d-0bb2e73c803e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 171,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7b3af7e4-567e-441e-9a12-c0bc7ce55351",
          "title": "tests for /v1.5/dbtables/{table}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v1.5-dbtables-{table}-test.js",
          "file": "/test/v1.5-dbtables-{table}-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "9d19285f-a684-4694-abd9-0873371f92ff",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v1.5-dbtables-{table}-test.js",
              "file": "/test/v1.5-dbtables-{table}-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"Returned table.\"",
                  "fullTitle": "tests for /v1.5/dbtables/{table} tests for get should respond 200 for \"Returned table.\"",
                  "timedOut": false,
                  "duration": 160,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v1.5/dbtables/geochrontypes', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "cf03ec20-2e56-4e9f-a553-6ba11f6c1898",
                  "parentUUID": "9d19285f-a684-4694-abd9-0873371f92ff",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cf03ec20-2e56-4e9f-a553-6ba11f6c1898"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 160,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "f9106da4-4eb5-4da7-adfe-97f7298d5c82",
          "title": "tests for /v2.0/apps/datasettypes",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-apps-datasettypes-test.js",
          "file": "/test/v2.0-apps-datasettypes-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "70f23097-dc9d-4fa7-be54-cae554cfa20a",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-apps-datasettypes-test.js",
              "file": "/test/v2.0-apps-datasettypes-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"A table of Neotoma collection types.\"",
                  "fullTitle": "tests for /v2.0/apps/datasettypes tests for get should respond 200 for \"A table of Neotoma collection types.\"",
                  "timedOut": false,
                  "duration": 174,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/apps/datasettypes', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "56ea43a4-2cec-4289-b153-e3d0e81ba619",
                  "parentUUID": "70f23097-dc9d-4fa7-be54-cae554cfa20a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "56ea43a4-2cec-4289-b153-e3d0e81ba619"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 174,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "d83a93cc-a031-40b3-95ad-462e92c2c6e0",
          "title": "Get occurrence data any number of ways:",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/occurrence.js",
          "file": "/test/occurrence.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get occurrence by singular id & return same id:",
              "fullTitle": "Get occurrence data any number of ways: Get occurrence by singular id & return same id:",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/occurrences/12')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return Object.keys(res.body['data'][0]).length > 0;\n    })\n    .expect(function(res) {\n      return res.body['data'][0]['occurrence'] === 12;\n    })\n    .expect(200);\ndone();",
              "err": {},
              "uuid": "61e659cf-7c3e-45dc-b38e-04ded7765082",
              "parentUUID": "d83a93cc-a031-40b3-95ad-462e92c2c6e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get the Flyover test call:",
              "fullTitle": "Get occurrence data any number of ways: Get the Flyover test call:",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/occurrences?taxonname=rhinocerotidae,megacerops,moeritherium,ceratogaulus,gomphotherium,deinotherium,condylarthra,paraceratherium,mesonychia,pantodonta,hyaenodon,thylacosmilus,glyptodon,castoroides,toxodon,megatherium,arctodus,smilodon,mammuthus,mammut,coelodonta,megaloceras,gigantopithecus,phlegethontia,temnospondyli,lepospondyli,ichthyosauria,sauropterygia,mosasauroidea,pterosauromorpha,titanoboa,megalania,placodus,tanystropheidae,hyperodapedon,stagonolepis,scutosaurus,pareiasauria,archelon,stupendemys,protostega,placodermi,leedsichthys,onychodontiformes,acanthostega,ichthyostega,crassigyrinus,ornithosuchus,erpetosuchidae,protosuchus,dakosaurus,geosaurus,deinosuchus&lower=true&limit=999999&loc=POLYGON((-122.56 39.94,-115.21 41.96,-107.99 43.42,-100.51 44.41,-92.85 44.91,-83.49 44.84,-74.25 44.02,-70.19 43.38,-69.36 42.75,-69.02 41.76,-69.13 41.07,-69.5 40.47,-70.07 40.06,-70.75 39.9,-78.36 40.86,-85.79 41.33,-93.27 41.3,-100.68 40.78,-105.86 40.12,-111.42 39.12,-116.79 37.86,-122.28 36.29,-122.98 36.35,-123.61 36.67,-124.06 37.21,-124.27 37.88,-124.21 38.58,-123.89 39.2,-123.35 39.65,-122.56 39.94))')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return Object.keys(res.body['data'][0]).length > 0;\n    })\n    .expect(200);\ndone();",
              "err": {},
              "uuid": "8eedcb14-8b6d-4f31-8bc1-692256b08368",
              "parentUUID": "d83a93cc-a031-40b3-95ad-462e92c2c6e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Failing Canis test works:",
              "fullTitle": "Get occurrence data any number of ways: Failing Canis test works:",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// This casuses timeout fails for some reason.  It's frustrating.\napi.get('v2.0/data/occurrences?taxonname=Canis&lower=true&limit=999999')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return Object.keys(res.body['data'][0]).length > 0;\n    })\n    .expect(200);\ndone();",
              "err": {},
              "uuid": "84c1b330-2e17-4d06-9f2d-05bf62cd07f1",
              "parentUUID": "d83a93cc-a031-40b3-95ad-462e92c2c6e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get occurrence by taxon:",
              "fullTitle": "Get occurrence data any number of ways: Get occurrence by taxon:",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/taxa/12/occurrences')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return Object.keys(res.body['data'][0]).length > 0;\n    })\n    .expect(200);\ndone();",
              "err": {},
              "uuid": "a8dad050-db46-4da1-beb6-2845bdbe202c",
              "parentUUID": "d83a93cc-a031-40b3-95ad-462e92c2c6e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Break occurrences by flipping altitudes:",
              "fullTitle": "Get occurrence data any number of ways: Break occurrences by flipping altitudes:",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/occurrences/?altmax=3000&altmin=5000')\n    .set('Accept', 'application/json')\n    .expect(500);\ndone();",
              "err": {},
              "uuid": "1e1a1e87-c79f-4c0d-ba84-0f92a556627a",
              "parentUUID": "d83a93cc-a031-40b3-95ad-462e92c2c6e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Break occurrences by flipping ages:",
              "fullTitle": "Get occurrence data any number of ways: Break occurrences by flipping ages:",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/occurrences/?ageyoung=5000&ageold=3000')\n    .set('Accept', 'application/json')\n    .expect(500);\ndone();",
              "err": {},
              "uuid": "cf5e28d8-e46f-4b7e-b218-40355850055e",
              "parentUUID": "d83a93cc-a031-40b3-95ad-462e92c2c6e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Occurrences filter by age:",
              "fullTitle": "Get occurrence data any number of ways: Occurrences filter by age:",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/occurrences/?ageyoung=3000&ageold=5000')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n    })\n    .expect(200);\ndone();",
              "err": {},
              "uuid": "6766a42e-1b32-4524-a3d2-7d6108f99a19",
              "parentUUID": "d83a93cc-a031-40b3-95ad-462e92c2c6e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get occurrences with comma separated fields:",
              "fullTitle": "Get occurrence data any number of ways: Get occurrences with comma separated fields:",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/occurrences/' +\n  '?siteid=12,13,14,15&taxonname=Betula&limit=200')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      const allSite = res.body['data'];\n      const siteids = [];\n      for (let i = 0; i < allSite.length; i++) {\n        siteids.push(allSite[i]['site']['siteid']);\n      };\n      const uniqueSites = Array.from(new Set(siteids)).sort(function(a, b) {\n        return a - b;\n      });\n      return (uniqueSites.every((item) => [12, 13, 14, 15].includes(item)));\n    })\n    .expect(200);\ndone();",
              "err": {},
              "uuid": "5ad8d215-04c8-490c-a510-2d061dfe3161",
              "parentUUID": "d83a93cc-a031-40b3-95ad-462e92c2c6e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get occurrences with comma separated taxa:",
              "fullTitle": "Get occurrence data any number of ways: Get occurrences with comma separated taxa:",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/occurrences/?taxonname=Picea,Abies&limit=25')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return (res.body.data.length > 0);\n    })\n    .expect(200);\ndone();",
              "err": {},
              "uuid": "587ce944-1d72-4062-aeb1-fa6ee4abe0a5",
              "parentUUID": "d83a93cc-a031-40b3-95ad-462e92c2c6e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get hierarchical occurrences with comma separated taxa:",
              "fullTitle": "Get occurrence data any number of ways: Get hierarchical occurrences with comma separated taxa:",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/occurrences/?taxonname=Picea,Abies&limit=25&lower=true')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return (res.body.data.length > 0);\n    })\n    .expect(200);\ndone();",
              "err": {},
              "uuid": "8ad0f869-7d46-4319-8ffc-209b57c53722",
              "parentUUID": "d83a93cc-a031-40b3-95ad-462e92c2c6e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get occurrences returns lower taxa:",
              "fullTitle": "Get occurrence data any number of ways: Get occurrences returns lower taxa:",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/occurrences/?taxonname=Myrica&lower=true&limit=200')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      const allTaxa = res.body['data'];\n      const taxaids = [];\n      for (let i = 0; i < allTaxa.length; i++) {\n        taxaids.push(allTaxa[i]['sample']['taxonname']);\n      };\n      const uniqueTaxa = Array.from(new Set(taxaids)).sort();\n      return uniqueTaxa.length > 1;\n    })\n    .expect(200);\ndone();",
              "err": {},
              "uuid": "75f9df90-f5bf-4df6-be08-451b7ed805dd",
              "parentUUID": "d83a93cc-a031-40b3-95ad-462e92c2c6e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get occurrences with mammals and lower taxa works:",
              "fullTitle": "Get occurrence data any number of ways: Get occurrences with mammals and lower taxa works:",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/occurrences/?taxonname=Homo&lower=true&limit=25')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      const allTaxa = res.body['data'];\n      const taxaids = [];\n      for (let i = 0; i < allTaxa.length; i++) {\n        taxaids.push(allTaxa[i]['sample']['taxonname']);\n      };\n      const uniqueTaxa = Array.from(new Set(taxaids)).sort();\n      return uniqueTaxa.length > 1 & allTaxa.length > 0;\n    })\n    .expect(200);\ndone();",
              "err": {},
              "uuid": "7665edc9-5e97-4e3b-96c9-5b4acae5c06e",
              "parentUUID": "d83a93cc-a031-40b3-95ad-462e92c2c6e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get occurrences using taxon and age bounds:",
              "fullTitle": "Get occurrence data any number of ways: Get occurrences using taxon and age bounds:",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/occurrences/?ageyoung=2000&ageold=3000&taxonname=Pinus')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return Object.keys(res.body['data'][0]).length > 0;\n    })\n    .expect(200);\ndone();",
              "err": {},
              "uuid": "2c77398b-c9a2-461a-ae35-3a8827438783",
              "parentUUID": "d83a93cc-a031-40b3-95ad-462e92c2c6e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "61e659cf-7c3e-45dc-b38e-04ded7765082",
            "8eedcb14-8b6d-4f31-8bc1-692256b08368",
            "84c1b330-2e17-4d06-9f2d-05bf62cd07f1",
            "a8dad050-db46-4da1-beb6-2845bdbe202c",
            "1e1a1e87-c79f-4c0d-ba84-0f92a556627a",
            "cf5e28d8-e46f-4b7e-b218-40355850055e",
            "6766a42e-1b32-4524-a3d2-7d6108f99a19",
            "5ad8d215-04c8-490c-a510-2d061dfe3161",
            "587ce944-1d72-4062-aeb1-fa6ee4abe0a5",
            "8ad0f869-7d46-4319-8ffc-209b57c53722",
            "75f9df90-f5bf-4df6-be08-451b7ed805dd",
            "7665edc9-5e97-4e3b-96c9-5b4acae5c06e",
            "2c77398b-c9a2-461a-ae35-3a8827438783"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "bc6fd3c7-db15-4bdb-92f8-7d5b0ea0f8da",
          "title": "tests for /v2.0/data/datasets/{datasetid}/sites",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-datasets-{datasetid}-sites-test.js",
          "file": "/test/v2.0-data-datasets-{datasetid}-sites-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "afd9e10e-5c1b-4466-b7e1-70dbeb832fef",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-datasets-{datasetid}-sites-test.js",
              "file": "/test/v2.0-data-datasets-{datasetid}-sites-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"Site\"",
                  "fullTitle": "tests for /v2.0/data/datasets/{datasetid}/sites tests for get should respond 200 for \"Site\"",
                  "timedOut": false,
                  "duration": 157,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/datasets/600/sites', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "856be6bd-e3e4-4b51-aff4-c9be43c5115d",
                  "parentUUID": "afd9e10e-5c1b-4466-b7e1-70dbeb832fef",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "856be6bd-e3e4-4b51-aff4-c9be43c5115d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 157,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "824a6dce-17a5-4c90-9c5c-f05952f45a26",
          "title": "tests for /v2.0/data/datasets/{datasetid}/chronologies",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-datasets-{datasetid}-chronologies-test.js",
          "file": "/test/v2.0-data-datasets-{datasetid}-chronologies-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "464dd784-7489-4a25-8beb-3d1ce45b3c65",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-datasets-{datasetid}-chronologies-test.js",
              "file": "/test/v2.0-data-datasets-{datasetid}-chronologies-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"chronology\"",
                  "fullTitle": "tests for /v2.0/data/datasets/{datasetid}/chronologies tests for get should respond 200 for \"chronology\"",
                  "timedOut": false,
                  "duration": 178,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/datasets/500/chronologies', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "cbc59059-eaa1-48cf-b6e4-9666ee223f79",
                  "parentUUID": "464dd784-7489-4a25-8beb-3d1ce45b3c65",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cbc59059-eaa1-48cf-b6e4-9666ee223f79"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 178,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "3c56475e-8f1a-4877-84de-9c6a126669b7",
          "title": "Get publication data any number of ways:",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/publications.js",
          "file": "/test/publications.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get publication by singular id & return same id:",
              "fullTitle": "Get publication data any number of ways: Get publication by singular id & return same id:",
              "timedOut": false,
              "duration": 153,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/publications/12')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return res.body.data[0].publication.publicationid === 12;\n    })\n    .expect(200, done);",
              "err": {},
              "uuid": "9712b936-606b-4ce4-8d9e-4423a8506c20",
              "parentUUID": "3c56475e-8f1a-4877-84de-9c6a126669b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get publication by comma sepatarated ids:",
              "fullTitle": "Get publication data any number of ways: Get publication by comma sepatarated ids:",
              "timedOut": false,
              "duration": 159,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/publications/12,13')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return res.body.data.map((x) => x.publicationid) == [12, 13];\n    })\n    .expect(200, done);",
              "err": {},
              "uuid": "6d44bb7a-51d4-4c78-aff5-4ada78c9695b",
              "parentUUID": "3c56475e-8f1a-4877-84de-9c6a126669b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get publication by querying author:",
              "fullTitle": "Get publication data any number of ways: Get publication by querying author:",
              "timedOut": false,
              "duration": 165,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/publications?familyname=Grimm')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return res.body.data.result.length > 0;\n    })\n    .expect(200, done);",
              "err": {},
              "uuid": "69568034-70ad-4d6f-bf25-300ad1095007",
              "parentUUID": "3c56475e-8f1a-4877-84de-9c6a126669b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get publications using pubs with missing links:",
              "fullTitle": "Get publication data any number of ways: Get publications using pubs with missing links:",
              "timedOut": false,
              "duration": 156,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/publications?publicationid=12,14,1412,99999')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return res.body.data.result.length > 0;\n    })\n    .expect(200, done);",
              "err": {},
              "uuid": "a33ac803-67d2-44aa-aec8-ce723afea1c1",
              "parentUUID": "3c56475e-8f1a-4877-84de-9c6a126669b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get publication by site id:",
              "fullTitle": "Get publication data any number of ways: Get publication by site id:",
              "timedOut": false,
              "duration": 155,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/sites/12/publications')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return res.body.data.length > 0;\n    })\n    .expect(200, done);",
              "err": {},
              "uuid": "e98c66c7-fbfa-46b3-8a03-e86f92293892",
              "parentUUID": "3c56475e-8f1a-4877-84de-9c6a126669b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get publication by site id finds pubs for all sites:",
              "fullTitle": "Get publication data any number of ways: Get publication by site id finds pubs for all sites:",
              "timedOut": false,
              "duration": 165,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/sites/12,13,14,15/publications')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      const flatten = (list) => list.reduce(\n          (a, b) => a.concat(Array.isArray(b) ? flatten(b) : b), []\n      );\n      const sites = [12, 13, 14, 15];\n      const siteids = flatten(res.body.data.map((x) => x.siteid));\n      return sites.every((x) => siteids.includes(x));\n    })\n    .expect(200, done);",
              "err": {},
              "uuid": "dd447636-a531-4a1d-8725-1016d49312b7",
              "parentUUID": "3c56475e-8f1a-4877-84de-9c6a126669b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get publication by dataset id finds pubs for all datasets:",
              "fullTitle": "Get publication data any number of ways: Get publication by dataset id finds pubs for all datasets:",
              "timedOut": false,
              "duration": 156,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/datasets/12,13,2201,6000/publications')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      const flatten = (list) => list.reduce(\n          (a, b) => a.concat(Array.isArray(b) ? flatten(b) : b), []\n      );\n      const datasets = [12, 6000, 13, 2201];\n      const datasetids = flatten(res.body.data.map((x) => x.datasetid));\n      return datasets.every((x) => datasetids.includes(x));\n    })\n    .expect(200, done);",
              "err": {},
              "uuid": "90273f75-84fd-43a1-acb3-bcc68013b458",
              "parentUUID": "3c56475e-8f1a-4877-84de-9c6a126669b7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9712b936-606b-4ce4-8d9e-4423a8506c20",
            "6d44bb7a-51d4-4c78-aff5-4ada78c9695b",
            "69568034-70ad-4d6f-bf25-300ad1095007",
            "a33ac803-67d2-44aa-aec8-ce723afea1c1",
            "e98c66c7-fbfa-46b3-8a03-e86f92293892",
            "dd447636-a531-4a1d-8725-1016d49312b7",
            "90273f75-84fd-43a1-acb3-bcc68013b458"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1109,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        },
        {
          "uuid": "daa72a2b-96fd-41e3-8110-fbebf3d4ff41",
          "title": "Get chronology data by datasetid:",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/chronologies.js",
          "file": "/test/chronologies.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A call to two datasets returns two datasets of data:",
              "fullTitle": "Get chronology data by datasetid: A call to two datasets returns two datasets of data:",
              "timedOut": false,
              "duration": 731,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/datasets/684,1001/chronologies')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return res.body['data'].length === 4;\n    })\n    .expect(200)\n    .end(function(err, res) {\n      if (err) return done(err);\n      done();\n    });",
              "err": {},
              "uuid": "a9718654-06ab-4af7-b397-c6bb6e3fa98d",
              "parentUUID": "daa72a2b-96fd-41e3-8110-fbebf3d4ff41",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a9718654-06ab-4af7-b397-c6bb6e3fa98d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 731,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "dc6f1f79-0bf1-41fb-b1da-40a9650f846d",
          "title": "tests for /v2.0/data/sites/{siteid}/chronologies",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-sites-{siteid}-chronologies-test.js",
          "file": "/test/v2.0-data-sites-{siteid}-chronologies-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ae3ecde4-2769-472d-bba3-70d6fa47b64d",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-sites-{siteid}-chronologies-test.js",
              "file": "/test/v2.0-data-sites-{siteid}-chronologies-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"chronology\"",
                  "fullTitle": "tests for /v2.0/data/sites/{siteid}/chronologies tests for get should respond 200 for \"chronology\"",
                  "timedOut": false,
                  "duration": 260,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/sites/500/chronologies', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "6153209b-2a06-4350-b35c-73d3d083f70d",
                  "parentUUID": "ae3ecde4-2769-472d-bba3-70d6fa47b64d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6153209b-2a06-4350-b35c-73d3d083f70d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 260,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "99ef8355-4024-4029-85d0-13fe09fda645",
          "title": "tests for /v2.0/data/occurrences/{occurrenceid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-occurrences-{occurrenceid}-test.js",
          "file": "/test/v2.0-data-occurrences-{occurrenceid}-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ba89c03c-5adf-462e-b6ce-73393929b135",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-occurrences-{occurrenceid}-test.js",
              "file": "/test/v2.0-data-occurrences-{occurrenceid}-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"occurrence\"",
                  "fullTitle": "tests for /v2.0/data/occurrences/{occurrenceid} tests for get should respond 200 for \"occurrence\"",
                  "timedOut": false,
                  "duration": 165,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/occurrences/500', {\n  'qs': {'limit': 10, 'offset': 0},\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "6d0fc83e-007d-4e37-aef0-d3e0423730fe",
                  "parentUUID": "ba89c03c-5adf-462e-b6ce-73393929b135",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6d0fc83e-007d-4e37-aef0-d3e0423730fe"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 165,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "07399fdf-c4d0-4eef-8745-f4d97733e9a3",
          "title": "tests for /v2.0/apps/taphonomysystems",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-apps-taphonomysystems-test.js",
          "file": "/test/v2.0-apps-taphonomysystems-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "99b1b56b-376a-4e4b-bf1e-b300440d1a8c",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-apps-taphonomysystems-test.js",
              "file": "/test/v2.0-apps-taphonomysystems-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"A table of Neotoma collection types.\"",
                  "fullTitle": "tests for /v2.0/apps/taphonomysystems tests for get should respond 200 for \"A table of Neotoma collection types.\"",
                  "timedOut": false,
                  "duration": 152,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/apps/taphonomysystems', {\n  'qs': {'datasettypeid': 2},\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "8367369c-0218-43ef-8446-86a921692c7f",
                  "parentUUID": "99b1b56b-376a-4e4b-bf1e-b300440d1a8c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8367369c-0218-43ef-8446-86a921692c7f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 152,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "ea1efd05-e72b-4f95-967d-16fe579c2b18",
          "title": "tests for /v2.0/data/datasets/{datasetid}/doi",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-datasets-{datasetid}-doi-test.js",
          "file": "/test/v2.0-data-datasets-{datasetid}-doi-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "db6cd725-cf41-46aa-bda0-154c5844962e",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-datasets-{datasetid}-doi-test.js",
              "file": "/test/v2.0-data-datasets-{datasetid}-doi-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"DOI\"",
                  "fullTitle": "tests for /v2.0/data/datasets/{datasetid}/doi tests for get should respond 200 for \"DOI\"",
                  "timedOut": false,
                  "duration": 158,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/datasets/500/doi', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "4842fee5-fd17-4b03-ba49-9d4961cc2cfd",
                  "parentUUID": "db6cd725-cf41-46aa-bda0-154c5844962e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4842fee5-fd17-4b03-ba49-9d4961cc2cfd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 158,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "8539f102-77c6-40ff-8e76-9172e8e2e52b",
          "title": "tests for /v2.0/data/sites/{siteid}/geopoliticalunits",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-sites-{siteid}-geopoliticalunits-test.js",
          "file": "/test/v2.0-data-sites-{siteid}-geopoliticalunits-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "28ca3067-5724-442b-b957-32957fe31e2b",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-sites-{siteid}-geopoliticalunits-test.js",
              "file": "/test/v2.0-data-sites-{siteid}-geopoliticalunits-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"An array of geopolitical units.\"",
                  "fullTitle": "tests for /v2.0/data/sites/{siteid}/geopoliticalunits tests for get should respond 200 for \"An array of geopolitical units.\"",
                  "timedOut": false,
                  "duration": 159,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/sites/500/geopoliticalunits', {\n  'qs': {'limit': 10, 'offset': 0},\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "95ccdf71-c37c-4e32-9f48-06eba0e74360",
                  "parentUUID": "28ca3067-5724-442b-b957-32957fe31e2b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "95ccdf71-c37c-4e32-9f48-06eba0e74360"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 159,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "f8963e09-b936-4e8d-9f52-7d4986e28d96",
          "title": "tests for /v1.5/data/geopoliticalunits/{gpid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v1.5-data-geopoliticalunits-{gpid}-test.js",
          "file": "/test/v1.5-data-geopoliticalunits-{gpid}-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "10e7df3f-7436-4bf5-af6f-e8b31927e6b5",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v1.5-data-geopoliticalunits-{gpid}-test.js",
              "file": "/test/v1.5-data-geopoliticalunits-{gpid}-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"An array of geopolitical units.\"",
                  "fullTitle": "tests for /v1.5/data/geopoliticalunits/{gpid} tests for get should respond 200 for \"An array of geopolitical units.\"",
                  "timedOut": false,
                  "duration": 155,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v1.5/data/geopoliticalunits/1723', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "53c4ad35-e935-487d-b0f8-c6523bc80116",
                  "parentUUID": "10e7df3f-7436-4bf5-af6f-e8b31927e6b5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "53c4ad35-e935-487d-b0f8-c6523bc80116"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 155,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "ae62a5f3-b1a4-4b43-a0b6-a56d4e1ccf06",
          "title": "tests for /v2.0/data/sites/{siteid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-sites-{siteid}-test.js",
          "file": "/test/v2.0-data-sites-{siteid}-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "45479174-27cf-476a-931f-3184efacb52d",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-sites-{siteid}-test.js",
              "file": "/test/v2.0-data-sites-{siteid}-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"An array of sites.\"",
                  "fullTitle": "tests for /v2.0/data/sites/{siteid} tests for get should respond 200 for \"An array of sites.\"",
                  "timedOut": false,
                  "duration": 156,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/sites/500', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "2c6aa48b-8ed8-4a04-832c-2371276bd6f4",
                  "parentUUID": "45479174-27cf-476a-931f-3184efacb52d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2c6aa48b-8ed8-4a04-832c-2371276bd6f4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 156,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c1efc57d-6461-4463-b84d-09ae31be23ea",
          "title": "tests for /v1.5/apps/TaxaInDatasets",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v1.5-apps-TaxaInDatasets-test.js",
          "file": "/test/v1.5-apps-TaxaInDatasets-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "90590485-146e-4250-a612-b8fda8817778",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v1.5-apps-TaxaInDatasets-test.js",
              "file": "/test/v1.5-apps-TaxaInDatasets-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"An array of taxon identities with associated dataset IDs.\"",
                  "fullTitle": "tests for /v1.5/apps/TaxaInDatasets tests for get should respond 200 for \"An array of taxon identities with associated dataset IDs.\"",
                  "timedOut": false,
                  "duration": 1368,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v1.5/apps/TaxaInDatasets', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "a71ddde5-ea23-439a-8f25-25f1435c6a21",
                  "parentUUID": "90590485-146e-4250-a612-b8fda8817778",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a71ddde5-ea23-439a-8f25-25f1435c6a21"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1368,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "bc1afc56-06b2-440b-83dd-4a9eb56d7e5b",
          "title": "tests for /v2.0/apps/taxagrouptypes",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-apps-taxagrouptypes-test.js",
          "file": "/test/v2.0-apps-taxagrouptypes-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3e4947a4-acdd-4579-9d06-d247876c82d7",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-apps-taxagrouptypes-test.js",
              "file": "/test/v2.0-apps-taxagrouptypes-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"A table of Neotoma collection types.\"",
                  "fullTitle": "tests for /v2.0/apps/taxagrouptypes tests for get should respond 200 for \"A table of Neotoma collection types.\"",
                  "timedOut": false,
                  "duration": 206,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/apps/taxagrouptypes', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "ba5cf1eb-fc83-4bde-9948-d92d72a70ba1",
                  "parentUUID": "3e4947a4-acdd-4579-9d06-d247876c82d7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ba5cf1eb-fc83-4bde-9948-d92d72a70ba1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 206,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "d8935856-158c-448d-9bc6-dafcd30fee14",
          "title": "tests for /v1.5/data/contacts/{contactid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v1.5-data-contacts-{contactid}-test.js",
          "file": "/test/v1.5-data-contacts-{contactid}-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "cd311c12-5225-413d-8e2a-f174f4a8d5bb",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v1.5-data-contacts-{contactid}-test.js",
              "file": "/test/v1.5-data-contacts-{contactid}-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"Contact\"",
                  "fullTitle": "tests for /v1.5/data/contacts/{contactid} tests for get should respond 200 for \"Contact\"",
                  "timedOut": false,
                  "duration": 154,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v1.5/data/contacts/-21777602', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "b8662ea9-eabd-4711-955b-9d27be25e6ee",
                  "parentUUID": "cd311c12-5225-413d-8e2a-f174f4a8d5bb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b8662ea9-eabd-4711-955b-9d27be25e6ee"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 154,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "cf160a35-76a0-4f4e-8cc3-cb9cd4bf6480",
          "title": "tests for /v2.0/apps/keywords",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-apps-keywords-test.js",
          "file": "/test/v2.0-apps-keywords-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "cf082d41-8efb-4694-832a-a882ef88ef82",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-apps-keywords-test.js",
              "file": "/test/v2.0-apps-keywords-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"A list of all keywords used for analysis units in the database.\"",
                  "fullTitle": "tests for /v2.0/apps/keywords tests for get should respond 200 for \"A list of all keywords used for analysis units in the database.\"",
                  "timedOut": false,
                  "duration": 161,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/apps/keywords', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "36ab83cb-79f8-4d14-a8eb-1f193aac986c",
                  "parentUUID": "cf082d41-8efb-4694-832a-a882ef88ef82",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "36ab83cb-79f8-4d14-a8eb-1f193aac986c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 161,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "88074e1a-379b-48ae-84d8-6e62e3fa9ca5",
          "title": "tests for /v2.0/data/downloads/{datasetid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-downloads-{datasetid}-test.js",
          "file": "/test/v2.0-data-downloads-{datasetid}-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "04619b65-949c-4254-8911-429d1ed0bc12",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-downloads-{datasetid}-test.js",
              "file": "/test/v2.0-data-downloads-{datasetid}-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"Returned download object.\"",
                  "fullTitle": "tests for /v2.0/data/downloads/{datasetid} tests for get should respond 200 for \"Returned download object.\"",
                  "timedOut": false,
                  "duration": 1010,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/downloads/500', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "6ae6c112-0eb4-498e-8d19-a3a2334cdec1",
                  "parentUUID": "04619b65-949c-4254-8911-429d1ed0bc12",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6ae6c112-0eb4-498e-8d19-a3a2334cdec1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1010,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "8aa912f5-962c-44f9-b83c-c8a4d257844f",
          "title": "tests for /v2.0/data/summary/dsdbmonth",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-summary-dsdbmonth-test.js",
          "file": "/test/v2.0-data-summary-dsdbmonth-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "85399f7b-a4c7-4378-a5dc-8013a312674e",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-summary-dsdbmonth-test.js",
              "file": "/test/v2.0-data-summary-dsdbmonth-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"A count of the datasets added by database for the requested period.\"",
                  "fullTitle": "tests for /v2.0/data/summary/dsdbmonth tests for get should respond 200 for \"A count of the datasets added by database for the requested period.\"",
                  "timedOut": false,
                  "duration": 280,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/summary/dsdbmonth', {\n  'qs': {'start': 1, 'end': 10},\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "56ebf61a-51de-4484-8662-26091109b15a",
                  "parentUUID": "85399f7b-a4c7-4378-a5dc-8013a312674e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "56ebf61a-51de-4484-8662-26091109b15a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 280,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "85cd28b2-c6e8-4ca5-914c-fb9e66ae0cab",
          "title": "tests for /v2.0/data/datasets_elc",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-datasets_elc-test.js",
          "file": "/test/v2.0-data-datasets_elc-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3d69c19f-ac49-4483-b580-9ae1ed96f929",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-datasets_elc-test.js",
              "file": "/test/v2.0-data-datasets_elc-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"A Neotoma datasets object suitable for the EarthLife Consortium API.\"",
                  "fullTitle": "tests for /v2.0/data/datasets_elc tests for get should respond 200 for \"A Neotoma datasets object suitable for the EarthLife Consortium API.\"",
                  "timedOut": false,
                  "duration": 170,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/datasets_elc', {\n  'qs': {'siteid': 29909, 'contactid': 17096, 'datasettype': 'diatom', 'altmin': 10, 'altmax': 100, 'loc': '{\"type\":\"Polygon\",\"coordinates\":[[[-104.053249,41.001406],[-104.675999,41.000957],[-104.855273,40.998048],[-105.277138,40.998173],[-105.730421,40.996886],[-106.217573,40.997734],[-106.453859,41.002057],[-106.857773,41.002663],[-107.625624,41.002124],[-108.250649,41.000114],[-108.884138,41.000094],[-109.050076,41.000659],[-109.048044,40.619231],[-109.050946,40.444368],[-109.050615,39.87497],[-109.051363,39.497674],[-109.051512,39.126095],[-109.054189,38.874984],[-109.059541,38.719888],[-109.060062,38.275489],[-109.041762,38.16469],[-109.041058,37.907236],[-109.041865,37.530726],[-109.04581,37.374993],[-109.045223,36.999084],[-108.620309,36.999287],[-108.249358,36.999015],[-108.000623,37.000001],[-107.420913,37.000005],[-106.877292,37.000139],[-106.869796,36.992426],[-106.201469,36.994122],[-105.62747,36.995679],[-105.1208,36.995428],[-105.000554,36.993264],[-104.338833,36.993535],[-103.733247,36.998016],[-103.002199,37.000104],[-102.814616,37.000783],[-102.698142,36.995149],[-102.04224,36.993083],[-102.041974,37.352613],[-102.041574,37.680436],[-102.044644,38.045532],[-102.045324,38.453647],[-102.045388,38.813392],[-102.048449,39.303138],[-102.050422,39.646048],[-102.051744,40.003078],[-102.051725,40.537839],[-102.051614,41.002377],[-102.556789,41.002219],[-102.865784,41.001988],[-103.497447,41.001635],[-104.053249,41.001406]]]}', 'ageyoung': 1000, 'ageold': 10000, 'ageof': 1629647},\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "ff492740-0691-46eb-81ec-dab2fa3ac2ec",
                  "parentUUID": "3d69c19f-ac49-4483-b580-9ae1ed96f929",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ff492740-0691-46eb-81ec-dab2fa3ac2ec"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 170,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "6d5d9132-a323-4205-9bb2-4f222745a8dc",
          "title": "tests for /v2.0/data/datasets/{datasetid}/taxa",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-datasets-{datasetid}-taxa-test.js",
          "file": "/test/v2.0-data-datasets-{datasetid}-taxa-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f268ce72-91b7-4c2f-b3b6-8d7a6fd4b4c7",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-datasets-{datasetid}-taxa-test.js",
              "file": "/test/v2.0-data-datasets-{datasetid}-taxa-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"Taxa\"",
                  "fullTitle": "tests for /v2.0/data/datasets/{datasetid}/taxa tests for get should respond 200 for \"Taxa\"",
                  "timedOut": false,
                  "duration": 171,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/datasets/500/taxa', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "f825cb41-2d46-4994-bc8f-c48ac95b77de",
                  "parentUUID": "f268ce72-91b7-4c2f-b3b6-8d7a6fd4b4c7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f825cb41-2d46-4994-bc8f-c48ac95b77de"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 171,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7d9a15a8-305d-47a3-80f8-1bcb923ca3e1",
          "title": "tests for /v2.0/data/datasets/db",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-datasets-db-test.js",
          "file": "/test/v2.0-data-datasets-db-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "7e3aecd6-5fd4-4a50-a65b-67249ffaec26",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-datasets-db-test.js",
              "file": "/test/v2.0-data-datasets-db-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"Datasets\"",
                  "fullTitle": "tests for /v2.0/data/datasets/db tests for get should respond 200 for \"Datasets\"",
                  "timedOut": false,
                  "duration": 878,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/datasets/db', {\n  'qs': {'limit': 10, 'offset': 0, 'database': 'Neotoma Charcoal Data'},\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "c908bc5a-aca6-4b3e-b53c-f04933956d19",
                  "parentUUID": "7e3aecd6-5fd4-4a50-a65b-67249ffaec26",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c908bc5a-aca6-4b3e-b53c-f04933956d19"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 878,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "839c0c76-4721-45a1-9bbc-de85d293d5bb",
          "title": "tests for /v1.5/data/geopoliticalunits",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v1.5-data-geopoliticalunits-test.js",
          "file": "/test/v1.5-data-geopoliticalunits-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "d7c5e74a-920a-40a9-b79c-8340a4285c9c",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v1.5-data-geopoliticalunits-test.js",
              "file": "/test/v1.5-data-geopoliticalunits-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"An array of geopolitical units.\"",
                  "fullTitle": "tests for /v1.5/data/geopoliticalunits tests for get should respond 200 for \"An array of geopolitical units.\"",
                  "timedOut": false,
                  "duration": 179,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v1.5/data/geopoliticalunits', {\n  'qs': {'gpid': 756, 'gpname': 'Canada', 'rank': 3, 'lower': false},\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "3fa5e38b-629a-4315-9567-9f63daab720b",
                  "parentUUID": "d7c5e74a-920a-40a9-b79c-8340a4285c9c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3fa5e38b-629a-4315-9567-9f63daab720b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 179,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "d630b7ef-3049-41af-a3b8-0bd5b64d1ddb",
          "title": "tests for /v2.0/data/contacts/{contactid}/sites",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-contacts-{contactid}-sites-test.js",
          "file": "/test/v2.0-data-contacts-{contactid}-sites-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3cad53e5-4195-4268-a60c-be4ccd6b218b",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-contacts-{contactid}-sites-test.js",
              "file": "/test/v2.0-data-contacts-{contactid}-sites-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"A Neotoma sites object.\"",
                  "fullTitle": "tests for /v2.0/data/contacts/{contactid}/sites tests for get should respond 200 for \"A Neotoma sites object.\"",
                  "timedOut": false,
                  "duration": 207,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/contacts/8506/sites', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "c3a13428-b5ea-4141-a049-0e4fee765e26",
                  "parentUUID": "3cad53e5-4195-4268-a60c-be4ccd6b218b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c3a13428-b5ea-4141-a049-0e4fee765e26"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 207,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "3d76bb53-8e62-4c23-bf66-a439200e9f5e",
          "title": "tests for /v2.0/data/pollen/{id}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-pollen-{id}-test.js",
          "file": "/test/v2.0-data-pollen-{id}-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "fec78cc7-3898-4bc8-bb9e-e57c09eb3afc",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-pollen-{id}-test.js",
              "file": "/test/v2.0-data-pollen-{id}-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"A record of all pollen samples in time/space for a particular taxon.\"",
                  "fullTitle": "tests for /v2.0/data/pollen/{id} tests for get should respond 200 for \"A record of all pollen samples in time/space for a particular taxon.\"",
                  "timedOut": false,
                  "duration": 153,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/pollen/{id}', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "cd7134cd-e69e-4f78-87a5-7889235f6ec6",
                  "parentUUID": "fec78cc7-3898-4bc8-bb9e-e57c09eb3afc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cd7134cd-e69e-4f78-87a5-7889235f6ec6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 153,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "9110acbc-d0bf-4ad1-885f-107b2b71e9e5",
          "title": "Get taxon data:",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/taxa.js",
          "file": "/test/taxa.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "v2.0: An empty query returns the first 25 taxa.",
              "fullTitle": "Get taxon data: v2.0: An empty query returns the first 25 taxa.",
              "timedOut": false,
              "duration": 237,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/taxa/')\n    .set('Accept', 'application/json')\n    .expect(200, done);",
              "err": {},
              "uuid": "0cdf6e23-547f-42d0-8b3d-810af9b9147e",
              "parentUUID": "9110acbc-d0bf-4ad1-885f-107b2b71e9e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "v2.0: A single taxon should be returned by id:",
              "fullTitle": "Get taxon data: v2.0: A single taxon should be returned by id:",
              "timedOut": false,
              "duration": 147,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/taxa/12')\n    .set('Accept', 'application/json')\n    .end(function(err, res) {\n      assert.strictEqual(res.body.data[0]['taxonid'], 12);\n      done();\n      if (err) {\n        console.log(err.message);\n      };\n    });",
              "err": {},
              "uuid": "68617693-2100-45e9-b134-bbbb5c7121a3",
              "parentUUID": "9110acbc-d0bf-4ad1-885f-107b2b71e9e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "v2.0: Taxon queries should be case insensitive:",
              "fullTitle": "Get taxon data: v2.0: Taxon queries should be case insensitive:",
              "timedOut": false,
              "duration": 157,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/taxa/?taxonname=abies')\n    .set('Accept', 'application/json')\n    .end(function(err, res) {\n      assert.strictEqual(res.body.data[0]['taxonid'], 1);\n      done();\n      if (err) {\n        console.log(err.message);\n      };\n    });",
              "err": {},
              "uuid": "38d8f46d-f560-4f2d-be19-04d2a54b9c00",
              "parentUUID": "9110acbc-d0bf-4ad1-885f-107b2b71e9e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "v2.0: Taxon queries should accept comma separated lists:",
              "fullTitle": "Get taxon data: v2.0: Taxon queries should accept comma separated lists:",
              "timedOut": false,
              "duration": 155,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/taxa/?taxonname=abies,picea')\n    .set('Accept', 'application/json')\n    .end(function(err, res) {\n      assert.strictEqual(res.body.data[0]['taxonid'], 1);\n      done();\n      if (err) {\n        console.log(err.message);\n      };\n    });",
              "err": {},
              "uuid": "a3e9179a-3cfd-4ca2-9e69-b66ad41809f6",
              "parentUUID": "9110acbc-d0bf-4ad1-885f-107b2b71e9e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "v2.0: Hierarchical taxon queries should accept comma separated lists:",
              "fullTitle": "Get taxon data: v2.0: Hierarchical taxon queries should accept comma separated lists:",
              "timedOut": false,
              "duration": 201,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/taxa/?taxonname=abies,picea&lower=true')\n    .set('Accept', 'application/json')\n    .end(function(err, res) {\n      assert.strictEqual(res.body.data[0]['taxonid'], 1);\n      done();\n      if (err) {\n        console.log(err.message);\n      };\n    });",
              "err": {
                "message": "AssertionError: Expected values to be strictly equal:\n\n33477 !== 1\n",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n33477 !== 1\n\n    at Test.<anonymous> (/home/simon/Documents/Neotoma/api_nodetest/test/taxa.js:68:18)\n    at Test.assert (/home/simon/Documents/Neotoma/api_nodetest/node_modules/supertest/lib/test.js:181:6)\n    at localAssert (/home/simon/Documents/Neotoma/api_nodetest/node_modules/supertest/lib/test.js:131:12)\n    at /home/simon/Documents/Neotoma/api_nodetest/node_modules/supertest/lib/test.js:128:5\n    at Request.callback (/home/simon/Documents/Neotoma/api_nodetest/node_modules/superagent/lib/node/index.js:716:12)\n    at /home/simon/Documents/Neotoma/api_nodetest/node_modules/superagent/lib/node/index.js:916:18\n    at Stream.<anonymous> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at Stream.emit (node:events:514:28)\n    at Unzip.<anonymous> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/superagent/lib/node/unzip.js:55:12)\n    at Unzip.emit (node:events:514:28)\n    at endReadableNT (node:internal/streams/readable:1359:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": "- 33477\n+ 1\n"
              },
              "uuid": "124d4041-9817-4842-9126-2cb8317aacba",
              "parentUUID": "9110acbc-d0bf-4ad1-885f-107b2b71e9e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "v2.0: Taxon queries should accept `*` as a wildcard:",
              "fullTitle": "Get taxon data: v2.0: Taxon queries should accept `*` as a wildcard:",
              "timedOut": false,
              "duration": 158,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/taxa/?taxonname=abie*')\n    .set('Accept', 'application/json')\n    .end(function(err, res) {\n      assert.strictEqual(res.body.data[0]['taxonid'], 1);\n      done();\n      if (err) {\n        console.log(err.message);\n      };\n    });",
              "err": {},
              "uuid": "b14bc7ce-221c-4097-99a2-eedae90f897c",
              "parentUUID": "9110acbc-d0bf-4ad1-885f-107b2b71e9e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "v2.0: The default limit of 25 should be reached for taxon data:",
              "fullTitle": "Get taxon data: v2.0: The default limit of 25 should be reached for taxon data:",
              "timedOut": false,
              "duration": 258,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/taxa/?taxonname=a*')\n    .set('Accept', 'application/json')\n    .end(function(err, res) {\n      assert.strictEqual(res.body.data.length, 25);\n      done();\n      if (err) {\n        console.log(err.message);\n      };\n    });",
              "err": {},
              "uuid": "045db8bb-e7db-4a5e-bdee-49dbca7a2498",
              "parentUUID": "9110acbc-d0bf-4ad1-885f-107b2b71e9e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "v2.0: Changing the limit should change the number of taxa retrieved:",
              "fullTitle": "Get taxon data: v2.0: Changing the limit should change the number of taxa retrieved:",
              "timedOut": false,
              "duration": 226,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/taxa/?taxonname=a*&limit=30')\n    .set('Accept', 'application/json')\n    .end(function(err, res) {\n      assert.strictEqual(res.body.data.length, 30);\n      done();\n      if (err) {\n        console.log(err.message);\n      };\n    });",
              "err": {},
              "uuid": "291052b1-4bdc-4b60-8755-a2bf0a90e654",
              "parentUUID": "9110acbc-d0bf-4ad1-885f-107b2b71e9e5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0cdf6e23-547f-42d0-8b3d-810af9b9147e",
            "68617693-2100-45e9-b134-bbbb5c7121a3",
            "38d8f46d-f560-4f2d-be19-04d2a54b9c00",
            "a3e9179a-3cfd-4ca2-9e69-b66ad41809f6",
            "b14bc7ce-221c-4097-99a2-eedae90f897c",
            "045db8bb-e7db-4a5e-bdee-49dbca7a2498",
            "291052b1-4bdc-4b60-8755-a2bf0a90e654"
          ],
          "failures": [
            "124d4041-9817-4842-9126-2cb8317aacba"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1539,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "494d4eb9-6631-4f29-8322-616c4c2a45c9",
          "title": "tests for /v2.0/data/datasets/{datasetid}/lithology",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-datasets-{datasetid}-lithology-test.js",
          "file": "/test/v2.0-data-datasets-{datasetid}-lithology-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "1329dd35-5d24-4db1-a361-e1b29694d241",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-datasets-{datasetid}-lithology-test.js",
              "file": "/test/v2.0-data-datasets-{datasetid}-lithology-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"Lithology\"",
                  "fullTitle": "tests for /v2.0/data/datasets/{datasetid}/lithology tests for get should respond 200 for \"Lithology\"",
                  "timedOut": false,
                  "duration": 163,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/datasets/500/lithology', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "25a0d609-3635-4cbc-a841-7614ef241ff7",
                  "parentUUID": "1329dd35-5d24-4db1-a361-e1b29694d241",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "25a0d609-3635-4cbc-a841-7614ef241ff7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 163,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "e8be5c59-99e1-4d81-9a39-1311cd67f672",
          "title": "tests for /v2.0/data/datasets/{datasetid}/contacts",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-datasets-{datasetid}-contacts-test.js",
          "file": "/test/v2.0-data-datasets-{datasetid}-contacts-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "d5d26921-46a3-4b62-9161-f3208b60ee51",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-datasets-{datasetid}-contacts-test.js",
              "file": "/test/v2.0-data-datasets-{datasetid}-contacts-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"contact\"",
                  "fullTitle": "tests for /v2.0/data/datasets/{datasetid}/contacts tests for get should respond 200 for \"contact\"",
                  "timedOut": false,
                  "duration": 162,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/datasets/500/contacts', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "cf45362f-93dd-47b5-b754-19242ecdacbd",
                  "parentUUID": "d5d26921-46a3-4b62-9161-f3208b60ee51",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cf45362f-93dd-47b5-b754-19242ecdacbd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 162,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "38426dbe-b5bb-48ca-a0ab-aef6bf950cf2",
          "title": "tests for /v2.0/data/sites/{siteid}/contacts",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-sites-{siteid}-contacts-test.js",
          "file": "/test/v2.0-data-sites-{siteid}-contacts-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0f0d3720-3d77-4bf1-835b-8b231d4836c7",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-sites-{siteid}-contacts-test.js",
              "file": "/test/v2.0-data-sites-{siteid}-contacts-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"contact\"",
                  "fullTitle": "tests for /v2.0/data/sites/{siteid}/contacts tests for get should respond 200 for \"contact\"",
                  "timedOut": false,
                  "duration": 158,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/sites/500/contacts', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "b6e15297-94aa-42b7-9931-19215fcc8f22",
                  "parentUUID": "0f0d3720-3d77-4bf1-835b-8b231d4836c7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b6e15297-94aa-42b7-9931-19215fcc8f22"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 158,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "6ff5792a-36b1-4b5a-8287-59f74bd8203d",
          "title": "tests for /v2.0/apps/collectiontypes",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-apps-collectiontypes-test.js",
          "file": "/test/v2.0-apps-collectiontypes-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "5862aada-c0e7-4726-ba5e-ac40a14e9f1e",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-apps-collectiontypes-test.js",
              "file": "/test/v2.0-apps-collectiontypes-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"A table of Neotoma collection types.\"",
                  "fullTitle": "tests for /v2.0/apps/collectiontypes tests for get should respond 200 for \"A table of Neotoma collection types.\"",
                  "timedOut": false,
                  "duration": 159,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/apps/collectiontypes', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "69e2ffe0-70fa-403d-9e1a-a7cb2ef7fd18",
                  "parentUUID": "5862aada-c0e7-4726-ba5e-ac40a14e9f1e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "69e2ffe0-70fa-403d-9e1a-a7cb2ef7fd18"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 159,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "f0a61708-7db2-4fff-b0ff-7a2dd59ab09e",
          "title": "tests for /v2.0/data/chronologies/{chronid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-chronologies-{chronid}-test.js",
          "file": "/test/v2.0-data-chronologies-{chronid}-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "25d54b75-1131-4dca-bc57-8be48f240573",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-chronologies-{chronid}-test.js",
              "file": "/test/v2.0-data-chronologies-{chronid}-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"A Neotoma chronology object.\"",
                  "fullTitle": "tests for /v2.0/data/chronologies/{chronid} tests for get should respond 200 for \"A Neotoma chronology object.\"",
                  "timedOut": false,
                  "duration": 170,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/chronologies/500', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "2349987d-7502-4a27-a792-75e60aca76c4",
                  "parentUUID": "25d54b75-1131-4dca-bc57-8be48f240573",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2349987d-7502-4a27-a792-75e60aca76c4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 170,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "caf43ef9-b249-4fc3-8f74-148f6959de57",
          "title": "Get datasets any number of ways:",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/datasets.js",
          "file": "/test/datasets.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Asking for the datasets associated with Lake Tulane work:",
              "fullTitle": "Get datasets any number of ways: Asking for the datasets associated with Lake Tulane work:",
              "timedOut": false,
              "duration": 871,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/sites/2570/datasets')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return Object.keys(res.body['data'][0]).includes('site');\n    })\n    .expect(function(res) {\n      return res.body['data'][0].site.siteid === 2570;\n    })\n    .expect(function(res) {\n      return Object.keys(res.body['data'][0]['site']['datasets'][0]).includes('datasetid');\n    })\n    .expect(200, done);",
              "err": {},
              "uuid": "8bb90e33-342a-4737-9f5b-a388d5dc55f6",
              "parentUUID": "caf43ef9-b249-4fc3-8f74-148f6959de57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get dataset by singular id & return same id:",
              "fullTitle": "Get datasets any number of ways: Get dataset by singular id & return same id:",
              "timedOut": false,
              "duration": 823,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/datasets/12')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return Object.keys(res.body['data'][0]).length > 0;\n    })\n    .expect(function(res) {\n      return res.body['data'][0]['siteid'] === 12;\n    })\n    .expect(200, done);",
              "err": {},
              "uuid": "a97d6105-5af3-4e2e-952e-e8894b082c0c",
              "parentUUID": "caf43ef9-b249-4fc3-8f74-148f6959de57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get dataset from siteid gives us siteids back and datasets:",
              "fullTitle": "Get datasets any number of ways: Get dataset from siteid gives us siteids back and datasets:",
              "timedOut": false,
              "duration": 815,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/sites/123/datasets')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return res.body['data'][0].site.siteid === 123;\n    })\n    .expect(function(res) {\n      return res.body['data'][0].site.datasets.length > 0;\n    })\n    .expect(200, done);",
              "err": {},
              "uuid": "16e7bed3-a9ad-4c77-83dc-42abc7768871",
              "parentUUID": "caf43ef9-b249-4fc3-8f74-148f6959de57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get dataset by comma separated ids & return same ids:",
              "fullTitle": "Get datasets any number of ways: Get dataset by comma separated ids & return same ids:",
              "timedOut": false,
              "duration": 1125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/datasets/?siteid=12,13,14')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return Object.keys(res.body['data']).length > 0;\n    })\n    .expect(200, done);",
              "err": {},
              "uuid": "17f901a9-cd37-42cf-a02e-3c81c4ed18d3",
              "parentUUID": "caf43ef9-b249-4fc3-8f74-148f6959de57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Returns all key elements of the object:",
              "fullTitle": "Get datasets any number of ways: Returns all key elements of the object:",
              "timedOut": false,
              "duration": 156,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/datasets/12')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return Object.keys(res.body['data']).includes('site', 'dataset');\n    })\n    .expect(200, done);",
              "err": {},
              "uuid": "3b92b954-57f8-496d-9474-dfd651290bc6",
              "parentUUID": "caf43ef9-b249-4fc3-8f74-148f6959de57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Limits work:",
              "fullTitle": "Get datasets any number of ways: Limits work:",
              "timedOut": false,
              "duration": 953,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/datasets/?altmax=3&limit=10')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return Object.keys(res.body['data']).length == 10;\n    })\n    .expect(200, done);",
              "err": {},
              "uuid": "831d07fb-602e-4fcc-a1f8-4f550ece7fa3",
              "parentUUID": "caf43ef9-b249-4fc3-8f74-148f6959de57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Works with age validation:",
              "fullTitle": "Get datasets any number of ways: Works with age validation:",
              "timedOut": false,
              "duration": 875,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/datasets/?ageyoung=1200&ageold=1500&altmax=3')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      let test = true;\n      for (let i = 0; i < res.body['data'].length; i++) {\n        test = test &\n        res.body['data'][i]['site']['datasets'][0]['agerange']['ageyoung'] < 1200 &\n        res.body['data'][i]['site']['datasets'][0]['agerange']['ageold'] > 1500;\n        if (test === false) {return test;}\n      }\n      return true;\n    })\n    .expect(200, done);",
              "err": {},
              "uuid": "4e24982d-1e78-4eff-8123-5972e71aa9b9",
              "parentUUID": "caf43ef9-b249-4fc3-8f74-148f6959de57",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8bb90e33-342a-4737-9f5b-a388d5dc55f6",
            "a97d6105-5af3-4e2e-952e-e8894b082c0c",
            "16e7bed3-a9ad-4c77-83dc-42abc7768871",
            "17f901a9-cd37-42cf-a02e-3c81c4ed18d3",
            "3b92b954-57f8-496d-9474-dfd651290bc6",
            "831d07fb-602e-4fcc-a1f8-4f550ece7fa3",
            "4e24982d-1e78-4eff-8123-5972e71aa9b9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5618,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "7b197980-e2fc-47aa-afa5-990c51f84717",
          "title": "tests for /v2.0/data/dbtables/{table}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-dbtables-{table}-test.js",
          "file": "/test/v2.0-data-dbtables-{table}-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "44856d5e-2178-462f-9bc4-ce7adf8ba7ed",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-dbtables-{table}-test.js",
              "file": "/test/v2.0-data-dbtables-{table}-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"Returned table.\"",
                  "fullTitle": "tests for /v2.0/data/dbtables/{table} tests for get should respond 200 for \"Returned table.\"",
                  "timedOut": false,
                  "duration": 158,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/dbtables/quisullamcomagnavelit', {\n  'qs': {'limit': 10, 'offset': 0},\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "db59754b-12f0-48db-9746-bc4c1865dcae",
                  "parentUUID": "44856d5e-2178-462f-9bc4-ce7adf8ba7ed",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "db59754b-12f0-48db-9746-bc4c1865dcae"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 158,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "9a83c6b4-6d64-4717-a414-2f062b6bf5d0",
          "title": "tests for /v2.0/data/dbtables",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-dbtables-test.js",
          "file": "/test/v2.0-data-dbtables-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "e0684fd3-cda5-4be3-be6d-a71c60bd742e",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-dbtables-test.js",
              "file": "/test/v2.0-data-dbtables-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"Returned table.\"",
                  "fullTitle": "tests for /v2.0/data/dbtables tests for get should respond 200 for \"Returned table.\"",
                  "timedOut": false,
                  "duration": 151,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/dbtables', {\n  'qs': {'table': 'aute laboris est do magna', 'limit': 10, 'offset': 0},\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "e70d1007-6125-4bcf-bbe3-33d7ce1b4e16",
                  "parentUUID": "e0684fd3-cda5-4be3-be6d-a71c60bd742e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e70d1007-6125-4bcf-bbe3-33d7ce1b4e16"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 151,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "8b2a30ef-42b2-4643-aa46-653923d23865",
          "title": "tests for /v2.0/apps/taxaindatasets",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-apps-taxaindatasets-test.js",
          "file": "/test/v2.0-apps-taxaindatasets-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "530385d1-cac1-4de6-b093-7dd4ae764c83",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-apps-taxaindatasets-test.js",
              "file": "/test/v2.0-apps-taxaindatasets-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"A list of all taxa in neotoma and the datasets in which they are found.\"",
                  "fullTitle": "tests for /v2.0/apps/taxaindatasets tests for get should respond 200 for \"A list of all taxa in neotoma and the datasets in which they are found.\"",
                  "timedOut": false,
                  "duration": 1466,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/apps/taxaindatasets', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "322365f2-6bdf-40e8-baf9-6f89c1458caa",
                  "parentUUID": "530385d1-cac1-4de6-b093-7dd4ae764c83",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "322365f2-6bdf-40e8-baf9-6f89c1458caa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1466,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "933e1971-6422-461b-afeb-e4a1201b03fc",
          "title": "tests for /v2.0/data/geopoliticalunits/{gpid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-geopoliticalunits-{gpid}-test.js",
          "file": "/test/v2.0-data-geopoliticalunits-{gpid}-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "30711e10-babe-45f6-b38b-37345dd80650",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-geopoliticalunits-{gpid}-test.js",
              "file": "/test/v2.0-data-geopoliticalunits-{gpid}-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"An array of geopolitical units.\"",
                  "fullTitle": "tests for /v2.0/data/geopoliticalunits/{gpid} tests for get should respond 200 for \"An array of geopolitical units.\"",
                  "timedOut": false,
                  "duration": 159,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/geopoliticalunits/9602', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "91c691a5-7245-4adc-8097-d817c9b53046",
                  "parentUUID": "30711e10-babe-45f6-b38b-37345dd80650",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "91c691a5-7245-4adc-8097-d817c9b53046"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 159,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "749673b2-5341-4a51-bf1f-4219ad7afb70",
          "title": "tests for /v2.0/data/taxa/{taxonid}/occurrences",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-taxa-{taxonid}-occurrences-test.js",
          "file": "/test/v2.0-data-taxa-{taxonid}-occurrences-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "fe6e74e7-e64a-4696-b9e8-057fee93d39d",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-taxa-{taxonid}-occurrences-test.js",
              "file": "/test/v2.0-data-taxa-{taxonid}-occurrences-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"occurrence\"",
                  "fullTitle": "tests for /v2.0/data/taxa/{taxonid}/occurrences tests for get should respond 200 for \"occurrence\"",
                  "timedOut": false,
                  "duration": 171,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/taxa/500/occurrences', {\n  'qs': {'limit': 10, 'offset': 0},\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "da83fd28-fd46-4262-b01c-e066705ff126",
                  "parentUUID": "fe6e74e7-e64a-4696-b9e8-057fee93d39d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "da83fd28-fd46-4262-b01c-e066705ff126"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 171,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "afe5173b-ba25-4d09-8590-c96b2c3a77e8",
          "title": "tests for /v2.0/data/summary/dstypemonth",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-summary-dstypemonth-test.js",
          "file": "/test/v2.0-data-summary-dstypemonth-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "2515a5a4-4db0-4672-a731-ca1403cf3948",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-summary-dstypemonth-test.js",
              "file": "/test/v2.0-data-summary-dstypemonth-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"A count of the datasets added by datasettype for the requested period.\"",
                  "fullTitle": "tests for /v2.0/data/summary/dstypemonth tests for get should respond 200 for \"A count of the datasets added by datasettype for the requested period.\"",
                  "timedOut": false,
                  "duration": 289,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/summary/dstypemonth', {\n  'qs': {'start': 1, 'end': 10},\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "cd068581-b8de-4c44-b68c-fe601f01bbb1",
                  "parentUUID": "2515a5a4-4db0-4672-a731-ca1403cf3948",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cd068581-b8de-4c44-b68c-fe601f01bbb1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 289,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "cdf72dce-4ccc-416d-bb93-a9012fbbbee5",
          "title": "tests for /v2.0/data/geopoliticalunits/{gpid}/datasets",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-geopoliticalunits-{gpid}-datasets-test.js",
          "file": "/test/v2.0-data-geopoliticalunits-{gpid}-datasets-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a039332d-4f5b-469c-878b-6d3b42711d4e",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-geopoliticalunits-{gpid}-datasets-test.js",
              "file": "/test/v2.0-data-geopoliticalunits-{gpid}-datasets-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"An array of datasets.\"",
                  "fullTitle": "tests for /v2.0/data/geopoliticalunits/{gpid}/datasets tests for get should respond 200 for \"An array of datasets.\"",
                  "timedOut": false,
                  "duration": 165,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/geopoliticalunits/6280/datasets', {\n  'qs': {'limit': 10, 'offset': 0},\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "93c7f0c4-19d2-45c0-b221-3d425654e948",
                  "parentUUID": "a039332d-4f5b-469c-878b-6d3b42711d4e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "93c7f0c4-19d2-45c0-b221-3d425654e948"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 165,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7f794636-8c5f-406c-b1e0-643da3fc1ce3",
          "title": "tests for /v2.0/data/sites/{siteid}/datasets",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-sites-{siteid}-datasets-test.js",
          "file": "/test/v2.0-data-sites-{siteid}-datasets-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "973402f7-8482-43c9-9134-4f8cd08bdeb4",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-sites-{siteid}-datasets-test.js",
              "file": "/test/v2.0-data-sites-{siteid}-datasets-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"An array of datasets.\"",
                  "fullTitle": "tests for /v2.0/data/sites/{siteid}/datasets tests for get should respond 200 for \"An array of datasets.\"",
                  "timedOut": false,
                  "duration": 833,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/sites/500/datasets', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "628da39f-dae8-4337-9592-00069cd0236b",
                  "parentUUID": "973402f7-8482-43c9-9134-4f8cd08bdeb4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "628da39f-dae8-4337-9592-00069cd0236b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 833,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "19e165a1-224d-4609-b3d7-785c83a337a3",
          "title": "tests for /v1.5/data/occurrence/{occurrenceid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v1.5-data-occurrence-{occurrenceid}-test.js",
          "file": "/test/v1.5-data-occurrence-{occurrenceid}-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "983fb325-b0d1-481d-a3f8-340a8847b24c",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v1.5-data-occurrence-{occurrenceid}-test.js",
              "file": "/test/v1.5-data-occurrence-{occurrenceid}-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"A single occurrence object.\"",
                  "fullTitle": "tests for /v1.5/data/occurrence/{occurrenceid} tests for get should respond 200 for \"A single occurrence object.\"",
                  "timedOut": false,
                  "duration": 154,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v1.5/data/occurrence/500', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "921bda6b-b0a4-40d8-9277-462140603039",
                  "parentUUID": "983fb325-b0d1-481d-a3f8-340a8847b24c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "921bda6b-b0a4-40d8-9277-462140603039"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 154,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "10699ac3-4d1f-4557-a935-637039154ac4",
          "title": "tests for /v1.5/data/downloads/{datasetid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v1.5-data-downloads-{datasetid}-test.js",
          "file": "/test/v1.5-data-downloads-{datasetid}-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4e66850f-08c4-4312-a1dc-2449d84ad36e",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v1.5-data-downloads-{datasetid}-test.js",
              "file": "/test/v1.5-data-downloads-{datasetid}-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"Returned download object.\"",
                  "fullTitle": "tests for /v1.5/data/downloads/{datasetid} tests for get should respond 200 for \"Returned download object.\"",
                  "timedOut": false,
                  "duration": 311,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v1.5/data/downloads/500', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "93ae7333-e7fb-4f4e-8f1b-c47bb60406f8",
                  "parentUUID": "4e66850f-08c4-4312-a1dc-2449d84ad36e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "93ae7333-e7fb-4f4e-8f1b-c47bb60406f8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 311,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "708afb71-4d63-47f6-b6a0-8606b9ffec52",
          "title": "tests for /v2.0/apps/depositionalenvironments/root",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-apps-depositionalenvironments-root-test.js",
          "file": "/test/v2.0-apps-depositionalenvironments-root-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "50c98857-4217-49d9-83f5-539e3bde2b05",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-apps-depositionalenvironments-root-test.js",
              "file": "/test/v2.0-apps-depositionalenvironments-root-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"A table of Neotoma collection types.\"",
                  "fullTitle": "tests for /v2.0/apps/depositionalenvironments/root tests for get should respond 200 for \"A table of Neotoma collection types.\"",
                  "timedOut": false,
                  "duration": 153,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/apps/depositionalenvironments/root', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "78ff4124-6930-4d30-8c8f-5bca0470c032",
                  "parentUUID": "50c98857-4217-49d9-83f5-539e3bde2b05",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "78ff4124-6930-4d30-8c8f-5bca0470c032"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 153,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "a2b72e80-448b-4d93-84bd-9781fbe19bd3",
          "title": "Get site data any number of ways:",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/sites.js",
          "file": "/test/sites.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get site by singular id & return same id:",
              "fullTitle": "Get site data any number of ways: Get site by singular id & return same id:",
              "timedOut": false,
              "duration": 157,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/sites/12')\n    .set('Accept', 'application/json')\n    .end((err, res) => {\n      if (err) return done(err);\n      expect(res.body['data'][0]['siteid'] === 12 & Object.keys(res.body['data'][0]).length > 0);\n      done();\n    });",
              "err": {},
              "uuid": "b1d2b8b0-178b-4a10-bfe8-b85988a156f9",
              "parentUUID": "a2b72e80-448b-4d93-84bd-9781fbe19bd3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get site by altitude:",
              "fullTitle": "Get site data any number of ways: Get site by altitude:",
              "timedOut": false,
              "duration": 165,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/sites/?altmax=5000&altmin=3000')\n    .set('Accept', 'application/json')\n    .end((err, res) => {\n      if (err) return done(err);\n      expect(Object.keys(res.body['data'][0]).length > 0);\n      done();\n    });",
              "err": {},
              "uuid": "ad0dad7a-1cc4-46a9-ae9d-d2ac73c98c5a",
              "parentUUID": "a2b72e80-448b-4d93-84bd-9781fbe19bd3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Break sites by flipping altitudes:",
              "fullTitle": "Get site data any number of ways: Break sites by flipping altitudes:",
              "timedOut": false,
              "duration": 167,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/sites/?altmax=3000&altmin=5000')\n    .set('Accept', 'application/json')\n    .end((err, res) => {\n      if (err) return done(err);\n      expect(res.body.status === 'failure');\n      done();\n    });",
              "err": {},
              "uuid": "f59c6b46-3247-4aa0-bb59-33918a7343c2",
              "parentUUID": "a2b72e80-448b-4d93-84bd-9781fbe19bd3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Break sites by passing invalid siteid:",
              "fullTitle": "Get site data any number of ways: Break sites by passing invalid siteid:",
              "timedOut": false,
              "duration": 154,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/sites/abcd')\n    .set('Accept', 'application/json')\n    .end((err, res) => {\n      if (err) return done(err);\n      expect(500, done);\n      done();\n    });",
              "err": {},
              "uuid": "cd072b81-46c7-427b-867d-3d3784f9e126",
              "parentUUID": "a2b72e80-448b-4d93-84bd-9781fbe19bd3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get site by contact information for multiple authors:",
              "fullTitle": "Get site data any number of ways: Get site by contact information for multiple authors:",
              "timedOut": false,
              "duration": 207,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/contacts/12,13/sites')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return Object.keys(res.body['data'][0]).length === 2;\n    })\n    .expect(200, done);",
              "err": {},
              "uuid": "ed730048-7e60-4137-95ea-f68dc852fb1c",
              "parentUUID": "a2b72e80-448b-4d93-84bd-9781fbe19bd3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b1d2b8b0-178b-4a10-bfe8-b85988a156f9",
            "ad0dad7a-1cc4-46a9-ae9d-d2ac73c98c5a",
            "f59c6b46-3247-4aa0-bb59-33918a7343c2",
            "cd072b81-46c7-427b-867d-3d3784f9e126",
            "ed730048-7e60-4137-95ea-f68dc852fb1c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 850,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "739da76e-b47d-4862-9067-dc33b89de916",
          "title": "tests for /v2.0/data/taxa/{taxonid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-taxa-{taxonid}-test.js",
          "file": "/test/v2.0-data-taxa-{taxonid}-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "345bd87d-2a62-4c06-ae81-4915454aa520",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-taxa-{taxonid}-test.js",
              "file": "/test/v2.0-data-taxa-{taxonid}-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"A taxon or array of taxa.\"",
                  "fullTitle": "tests for /v2.0/data/taxa/{taxonid} tests for get should respond 200 for \"A taxon or array of taxa.\"",
                  "timedOut": false,
                  "duration": 157,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/taxa/8899', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "3cd6dc60-295b-4652-a943-e789e400317e",
                  "parentUUID": "345bd87d-2a62-4c06-ae81-4915454aa520",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3cd6dc60-295b-4652-a943-e789e400317e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 157,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "fc3047f2-dcf5-44c1-97b0-5cbe750c2723",
          "title": "tests for /v2.0/data/publications",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-publications-test.js",
          "file": "/test/v2.0-data-publications-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f1721449-b415-4b56-a6b2-a8249da51d6a",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-publications-test.js",
              "file": "/test/v2.0-data-publications-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"A list of publications.\"",
                  "fullTitle": "tests for /v2.0/data/publications tests for get should respond 200 for \"A list of publications.\"",
                  "timedOut": false,
                  "duration": 163,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/publications', {\n  'qs': {'publicationid': 7931, 'datasetid': 18281561, 'siteid': 6252, 'familyname': 'dolor velit ad do ut', 'pubtype': 'Other Authored', 'year': 2053, 'search': 'proident non', 'limit': 10, 'offset': 0},\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "4491b84e-b8fc-49f0-959b-dada9294647f",
                  "parentUUID": "f1721449-b415-4b56-a6b2-a8249da51d6a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4491b84e-b8fc-49f0-959b-dada9294647f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 163,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "15389e3a-9592-4cb9-aa61-219725487d14",
          "title": "tests for /v2.0/data/contacts",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-contacts-test.js",
          "file": "/test/v2.0-data-contacts-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "85407e09-0d88-434b-bc7b-726659bc38c4",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-contacts-test.js",
              "file": "/test/v2.0-data-contacts-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"contact\"",
                  "fullTitle": "tests for /v2.0/data/contacts tests for get should respond 200 for \"contact\"",
                  "timedOut": false,
                  "duration": 162,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/contacts', {\n  'qs': {'contactid': 9910, 'familyname': 'dolore aliqua quis in ut', 'contactname': 'Excepteur eu dolore sed', 'contactstatus': 'inactive', 'limit': 10, 'offset': 0},\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "b348a8ce-b66f-4524-afdb-8da3effbfc17",
                  "parentUUID": "85407e09-0d88-434b-bc7b-726659bc38c4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b348a8ce-b66f-4524-afdb-8da3effbfc17"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 162,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "df5955e8-c927-4ab9-b68d-81156949dc84",
          "title": "tests for /v2.0/data/occurrences",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-occurrences-test.js",
          "file": "/test/v2.0-data-occurrences-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "1977c8f4-ce7d-42ec-9737-7070032a167d",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-occurrences-test.js",
              "file": "/test/v2.0-data-occurrences-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"occurrence\"",
                  "fullTitle": "tests for /v2.0/data/occurrences tests for get should respond 200 for \"occurrence\"",
                  "timedOut": false,
                  "duration": 177,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/occurrences', {\n  'qs': {'taxonname': 'nostrud aute voluptate deserunt sint', 'taxonid': 19968, 'siteid': 17693, 'sitename': 'sint nostrud ex', 'datasettype': 'physical sedimentology', 'altmin': 10, 'altmax': 100, 'loc': '{\"type\":\"Polygon\",\"coordinates\":[[[-104.053249,41.001406],[-104.675999,41.000957],[-104.855273,40.998048],[-105.277138,40.998173],[-105.730421,40.996886],[-106.217573,40.997734],[-106.453859,41.002057],[-106.857773,41.002663],[-107.625624,41.002124],[-108.250649,41.000114],[-108.884138,41.000094],[-109.050076,41.000659],[-109.048044,40.619231],[-109.050946,40.444368],[-109.050615,39.87497],[-109.051363,39.497674],[-109.051512,39.126095],[-109.054189,38.874984],[-109.059541,38.719888],[-109.060062,38.275489],[-109.041762,38.16469],[-109.041058,37.907236],[-109.041865,37.530726],[-109.04581,37.374993],[-109.045223,36.999084],[-108.620309,36.999287],[-108.249358,36.999015],[-108.000623,37.000001],[-107.420913,37.000005],[-106.877292,37.000139],[-106.869796,36.992426],[-106.201469,36.994122],[-105.62747,36.995679],[-105.1208,36.995428],[-105.000554,36.993264],[-104.338833,36.993535],[-103.733247,36.998016],[-103.002199,37.000104],[-102.814616,37.000783],[-102.698142,36.995149],[-102.04224,36.993083],[-102.041974,37.352613],[-102.041574,37.680436],[-102.044644,38.045532],[-102.045324,38.453647],[-102.045388,38.813392],[-102.048449,39.303138],[-102.050422,39.646048],[-102.051744,40.003078],[-102.051725,40.537839],[-102.051614,41.002377],[-102.556789,41.002219],[-102.865784,41.001988],[-103.497447,41.001635],[-104.053249,41.001406]]]}', 'ageof': 12218390, 'ageyoung': 1000, 'ageold': 10000, 'limit': 10, 'offset': 0},\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "84ba1917-04b6-4032-82da-d3c7ee619752",
                  "parentUUID": "1977c8f4-ce7d-42ec-9737-7070032a167d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "84ba1917-04b6-4032-82da-d3c7ee619752"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 177,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "121fcf86-1fc1-487c-b979-805bbd01c4d2",
          "title": "tests for /v2.0/data/sites",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-sites-test.js",
          "file": "/test/v2.0-data-sites-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "fe003efe-d379-4871-a588-777ab2d13a75",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-sites-test.js",
              "file": "/test/v2.0-data-sites-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"An array of sites.\"",
                  "fullTitle": "tests for /v2.0/data/sites tests for get should respond 200 for \"An array of sites.\"",
                  "timedOut": false,
                  "duration": 262,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/sites', {\n  'qs': {'sitename': 'culpa Ut', 'database': 'North American Non-Marine Ostracode Database Project (NANODe)', 'datasettype': 'pollen surface sample', 'altmin': 10, 'altmax': 100, 'loc': '{\"type\":\"Polygon\",\"coordinates\":[[[-104.053249,41.001406],[-104.675999,41.000957],[-104.855273,40.998048],[-105.277138,40.998173],[-105.730421,40.996886],[-106.217573,40.997734],[-106.453859,41.002057],[-106.857773,41.002663],[-107.625624,41.002124],[-108.250649,41.000114],[-108.884138,41.000094],[-109.050076,41.000659],[-109.048044,40.619231],[-109.050946,40.444368],[-109.050615,39.87497],[-109.051363,39.497674],[-109.051512,39.126095],[-109.054189,38.874984],[-109.059541,38.719888],[-109.060062,38.275489],[-109.041762,38.16469],[-109.041058,37.907236],[-109.041865,37.530726],[-109.04581,37.374993],[-109.045223,36.999084],[-108.620309,36.999287],[-108.249358,36.999015],[-108.000623,37.000001],[-107.420913,37.000005],[-106.877292,37.000139],[-106.869796,36.992426],[-106.201469,36.994122],[-105.62747,36.995679],[-105.1208,36.995428],[-105.000554,36.993264],[-104.338833,36.993535],[-103.733247,36.998016],[-103.002199,37.000104],[-102.814616,37.000783],[-102.698142,36.995149],[-102.04224,36.993083],[-102.041974,37.352613],[-102.041574,37.680436],[-102.044644,38.045532],[-102.045324,38.453647],[-102.045388,38.813392],[-102.048449,39.303138],[-102.050422,39.646048],[-102.051744,40.003078],[-102.051725,40.537839],[-102.051614,41.002377],[-102.556789,41.002219],[-102.865784,41.001988],[-103.497447,41.001635],[-104.053249,41.001406]]]}', 'siteid': 14374, 'datasetid': 88313769, 'doi': '10645444/E1ZB8N--', 'gpid': 756, 'keyword': 'interglacial', 'contactid': 4273, 'taxa': 'deserunt consectetur eu aute', 'ageyoung': 1000, 'ageold': 10000, 'ageof': 7150388, 'limit': 10, 'offset': 0},\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "cc50e28d-01f0-40e0-b338-7874d8aa61f1",
                  "parentUUID": "fe003efe-d379-4871-a588-777ab2d13a75",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cc50e28d-01f0-40e0-b338-7874d8aa61f1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 262,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "a4e2ccec-a933-47b1-b765-b965774eeaf2",
          "title": "tests for /v1.5/apps/collectionTypes",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v1.5-apps-collectionTypes-test.js",
          "file": "/test/v1.5-apps-collectionTypes-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "45b000c5-163d-4af0-bafa-cdcfd6b7cbd7",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v1.5-apps-collectionTypes-test.js",
              "file": "/test/v1.5-apps-collectionTypes-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"Returns the set of collectiontypes recorded in Neotoma.\"",
                  "fullTitle": "tests for /v1.5/apps/collectionTypes tests for get should respond 200 for \"Returns the set of collectiontypes recorded in Neotoma.\"",
                  "timedOut": false,
                  "duration": 158,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v1.5/apps/collectionTypes', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "6cfe8e68-52c0-4318-9f8f-6d7033d2a040",
                  "parentUUID": "45b000c5-163d-4af0-bafa-cdcfd6b7cbd7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6cfe8e68-52c0-4318-9f8f-6d7033d2a040"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 158,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "f7591fd5-c2e6-47b8-9ce5-e30d3bb914cf",
          "title": "Get Neotoma data with geoJSON extents:",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/spatial.js",
          "file": "/test/spatial.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get occurrence data using a simple geoJSON:",
              "fullTitle": "Get Neotoma data with geoJSON extents: Get occurrence data using a simple geoJSON:",
              "timedOut": false,
              "duration": 325,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/occurrences?loc={\"type\":\"Polygon\",\"coordinates\":[[[-104.053249,41.001406],[-103.497447,41.001635],[-102.865784,41.001988],[-102.556789,41.002219],[-102.051614,41.002377],[-102.051725,40.537839],[-102.051744,40.003078],[-102.050422,39.646048],[-102.048449,39.303138],[-102.045388,38.813392],[-102.045324,38.453647],[-102.044644,38.045532],[-102.041574,37.680436],[-102.041974,37.352613],[-102.04224,36.993083],[-102.698142,36.995149],[-102.814616,37.000783],[-103.002199,37.000104],[-103.733247,36.998016],[-104.338833,36.993535],[-105.000554,36.993264],[-105.1208,36.995428],[-105.62747,36.995679],[-106.201469,36.994122],[-106.869796,36.992426],[-106.877292,37.000139],[-107.420913,37.000005],[-108.000623,37.000001],[-108.249358,36.999015],[-108.620309,36.999287],[-109.045223,36.999084],[-109.04581,37.374993],[-109.041865,37.530726],[-109.041058,37.907236],[-109.041762,38.16469],[-109.060062,38.275489],[-109.059541,38.719888],[-109.054189,38.874984],[-109.051512,39.126095],[-109.051363,39.497674],[-109.050615,39.87497],[-109.050946,40.444368],[-109.048044,40.619231],[-109.050076,41.000659],[-108.884138,41.000094],[-108.250649,41.000114],[-107.625624,41.002124],[-106.857773,41.002663],[-106.453859,41.002057],[-106.217573,40.997734],[-105.730421,40.996886],[-105.277138,40.998173],[-104.855273,40.998048],[-104.675999,41.000957],[-104.053249,41.001406]]]}')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return Object.keys(res.body['data'][0]).length > 0;\n    })\n    .expect(function(res) {\n      return res.body['data'][0]['occurrence'] === 12;\n    })\n    .expect(200, done);",
              "err": {},
              "uuid": "df94ec30-1409-4766-99ef-c84a3d513e5f",
              "parentUUID": "f7591fd5-c2e6-47b8-9ce5-e30d3bb914cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get site data using a simple geoJSON:",
              "fullTitle": "Get Neotoma data with geoJSON extents: Get site data using a simple geoJSON:",
              "timedOut": false,
              "duration": 186,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/sites?loc={\"type\":\"Polygon\",\"coordinates\":[[[-104.053249,41.001406],[-103.497447,41.001635],[-102.865784,41.001988],[-102.556789,41.002219],[-102.051614,41.002377],[-102.051725,40.537839],[-102.051744,40.003078],[-102.050422,39.646048],[-102.048449,39.303138],[-102.045388,38.813392],[-102.045324,38.453647],[-102.044644,38.045532],[-102.041574,37.680436],[-102.041974,37.352613],[-102.04224,36.993083],[-102.698142,36.995149],[-102.814616,37.000783],[-103.002199,37.000104],[-103.733247,36.998016],[-104.338833,36.993535],[-105.000554,36.993264],[-105.1208,36.995428],[-105.62747,36.995679],[-106.201469,36.994122],[-106.869796,36.992426],[-106.877292,37.000139],[-107.420913,37.000005],[-108.000623,37.000001],[-108.249358,36.999015],[-108.620309,36.999287],[-109.045223,36.999084],[-109.04581,37.374993],[-109.041865,37.530726],[-109.041058,37.907236],[-109.041762,38.16469],[-109.060062,38.275489],[-109.059541,38.719888],[-109.054189,38.874984],[-109.051512,39.126095],[-109.051363,39.497674],[-109.050615,39.87497],[-109.050946,40.444368],[-109.048044,40.619231],[-109.050076,41.000659],[-108.884138,41.000094],[-108.250649,41.000114],[-107.625624,41.002124],[-106.857773,41.002663],[-106.453859,41.002057],[-106.217573,40.997734],[-105.730421,40.996886],[-105.277138,40.998173],[-104.855273,40.998048],[-104.675999,41.000957],[-104.053249,41.001406]]]}')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return Object.keys(res.body['data'][0]).length > 0;\n    })\n    .expect(function(res) {\n      return res.body['data'][0]['occurrence'] === 12;\n    })\n    .expect(200, done);",
              "err": {},
              "uuid": "b59145d9-744a-44b3-a3ae-547238de37cf",
              "parentUUID": "f7591fd5-c2e6-47b8-9ce5-e30d3bb914cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get dataset data using a simple geoJSON:",
              "fullTitle": "Get Neotoma data with geoJSON extents: Get dataset data using a simple geoJSON:",
              "timedOut": false,
              "duration": 1146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/datasets?loc={\"type\":\"Polygon\",\"coordinates\":[[[-104.053249,41.001406],[-103.497447,41.001635],[-102.865784,41.001988],[-102.556789,41.002219],[-102.051614,41.002377],[-102.051725,40.537839],[-102.051744,40.003078],[-102.050422,39.646048],[-102.048449,39.303138],[-102.045388,38.813392],[-102.045324,38.453647],[-102.044644,38.045532],[-102.041574,37.680436],[-102.041974,37.352613],[-102.04224,36.993083],[-102.698142,36.995149],[-102.814616,37.000783],[-103.002199,37.000104],[-103.733247,36.998016],[-104.338833,36.993535],[-105.000554,36.993264],[-105.1208,36.995428],[-105.62747,36.995679],[-106.201469,36.994122],[-106.869796,36.992426],[-106.877292,37.000139],[-107.420913,37.000005],[-108.000623,37.000001],[-108.249358,36.999015],[-108.620309,36.999287],[-109.045223,36.999084],[-109.04581,37.374993],[-109.041865,37.530726],[-109.041058,37.907236],[-109.041762,38.16469],[-109.060062,38.275489],[-109.059541,38.719888],[-109.054189,38.874984],[-109.051512,39.126095],[-109.051363,39.497674],[-109.050615,39.87497],[-109.050946,40.444368],[-109.048044,40.619231],[-109.050076,41.000659],[-108.884138,41.000094],[-108.250649,41.000114],[-107.625624,41.002124],[-106.857773,41.002663],[-106.453859,41.002057],[-106.217573,40.997734],[-105.730421,40.996886],[-105.277138,40.998173],[-104.855273,40.998048],[-104.675999,41.000957],[-104.053249,41.001406]]]}')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return Object.keys(res.body['data'][0]).length > 0;\n    })\n    .expect(function(res) {\n      return res.body['data'][0]['occurrence'] === 12;\n    })\n    .expect(200, done);",
              "err": {},
              "uuid": "27002673-65ac-4f40-9e6f-35a10ba84f3c",
              "parentUUID": "f7591fd5-c2e6-47b8-9ce5-e30d3bb914cf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "df94ec30-1409-4766-99ef-c84a3d513e5f",
            "b59145d9-744a-44b3-a3ae-547238de37cf",
            "27002673-65ac-4f40-9e6f-35a10ba84f3c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1657,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        },
        {
          "uuid": "8966debf-e857-4cab-a282-88cd2051e68c",
          "title": "Get Neotoma data with WKT extents:",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/spatial.js",
          "file": "/test/spatial.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get occurrence data using a simple WKT:",
              "fullTitle": "Get Neotoma data with WKT extents: Get occurrence data using a simple WKT:",
              "timedOut": false,
              "duration": 261,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/occurrences?loc=POLYGON((-104.053249 41.001406,-103.497447 41.001635,-102.865784 41.001988,-102.556789 41.002219,-102.051614 41.002377,-102.051725 40.537839,-102.051744 40.003078,-102.050422 39.646048,-102.048449 39.303138,-102.045388 38.813392,-102.045324 38.453647,-102.044644 38.045532,-102.041574 37.680436,-102.041974 37.352613,-102.04224 36.993083,-102.698142 36.995149,-102.814616 37.000783,-103.002199 37.000104,-103.733247 36.998016,-104.338833 36.993535,-105.000554 36.993264,-105.1208 36.995428,-105.62747 36.995679,-106.201469 36.994122,-106.869796 36.992426,-106.877292 37.000139,-107.420913 37.000005,-108.000623 37.000001,-108.249358 36.999015,-108.620309 36.999287,-109.045223 36.999084,-109.04581 37.374993,-109.041865 37.530726,-109.041058 37.907236,-109.041762 38.16469,-109.060062 38.275489,-109.059541 38.719888,-109.054189 38.874984,-109.051512 39.126095,-109.051363 39.497674,-109.050615 39.87497,-109.050946 40.444368,-109.048044 40.619231,-109.050076 41.000659,-108.884138 41.000094,-108.250649 41.000114,-107.625624 41.002124,-106.857773 41.002663,-106.453859 41.002057,-106.217573 40.997734,-105.730421 40.996886,-105.277138 40.998173,-104.855273 40.998048,-104.675999 41.000957,-104.053249 41.001406))')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return Object.keys(res.body['data'][0]).length > 0;\n    })\n    .expect(function(res) {\n      return res.body['data'][0]['occurrence'] === 12;\n    })\n    .expect(200, done);",
              "err": {},
              "uuid": "9171730b-3a24-4331-aca3-d433d207c6f2",
              "parentUUID": "8966debf-e857-4cab-a282-88cd2051e68c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get site data using a simple WKT:",
              "fullTitle": "Get Neotoma data with WKT extents: Get site data using a simple WKT:",
              "timedOut": false,
              "duration": 187,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/sites?loc=POLYGON((-104.053249 41.001406,-103.497447 41.001635,-102.865784 41.001988,-102.556789 41.002219,-102.051614 41.002377,-102.051725 40.537839,-102.051744 40.003078,-102.050422 39.646048,-102.048449 39.303138,-102.045388 38.813392,-102.045324 38.453647,-102.044644 38.045532,-102.041574 37.680436,-102.041974 37.352613,-102.04224 36.993083,-102.698142 36.995149,-102.814616 37.000783,-103.002199 37.000104,-103.733247 36.998016,-104.338833 36.993535,-105.000554 36.993264,-105.1208 36.995428,-105.62747 36.995679,-106.201469 36.994122,-106.869796 36.992426,-106.877292 37.000139,-107.420913 37.000005,-108.000623 37.000001,-108.249358 36.999015,-108.620309 36.999287,-109.045223 36.999084,-109.04581 37.374993,-109.041865 37.530726,-109.041058 37.907236,-109.041762 38.16469,-109.060062 38.275489,-109.059541 38.719888,-109.054189 38.874984,-109.051512 39.126095,-109.051363 39.497674,-109.050615 39.87497,-109.050946 40.444368,-109.048044 40.619231,-109.050076 41.000659,-108.884138 41.000094,-108.250649 41.000114,-107.625624 41.002124,-106.857773 41.002663,-106.453859 41.002057,-106.217573 40.997734,-105.730421 40.996886,-105.277138 40.998173,-104.855273 40.998048,-104.675999 41.000957,-104.053249 41.001406))')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return Object.keys(res.body['data'][0]).length > 0;\n    })\n    .expect(function(res) {\n      return res.body['data'][0]['occurrence'] === 12;\n    })\n    .expect(200, done);",
              "err": {},
              "uuid": "98279083-aa16-415f-af22-8c500757779c",
              "parentUUID": "8966debf-e857-4cab-a282-88cd2051e68c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get dataset data using a simple WKT:",
              "fullTitle": "Get Neotoma data with WKT extents: Get dataset data using a simple WKT:",
              "timedOut": false,
              "duration": 1064,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/datasets?loc=POLYGON((-104.053249 41.001406,-103.497447 41.001635,-102.865784 41.001988,-102.556789 41.002219,-102.051614 41.002377,-102.051725 40.537839,-102.051744 40.003078,-102.050422 39.646048,-102.048449 39.303138,-102.045388 38.813392,-102.045324 38.453647,-102.044644 38.045532,-102.041574 37.680436,-102.041974 37.352613,-102.04224 36.993083,-102.698142 36.995149,-102.814616 37.000783,-103.002199 37.000104,-103.733247 36.998016,-104.338833 36.993535,-105.000554 36.993264,-105.1208 36.995428,-105.62747 36.995679,-106.201469 36.994122,-106.869796 36.992426,-106.877292 37.000139,-107.420913 37.000005,-108.000623 37.000001,-108.249358 36.999015,-108.620309 36.999287,-109.045223 36.999084,-109.04581 37.374993,-109.041865 37.530726,-109.041058 37.907236,-109.041762 38.16469,-109.060062 38.275489,-109.059541 38.719888,-109.054189 38.874984,-109.051512 39.126095,-109.051363 39.497674,-109.050615 39.87497,-109.050946 40.444368,-109.048044 40.619231,-109.050076 41.000659,-108.884138 41.000094,-108.250649 41.000114,-107.625624 41.002124,-106.857773 41.002663,-106.453859 41.002057,-106.217573 40.997734,-105.730421 40.996886,-105.277138 40.998173,-104.855273 40.998048,-104.675999 41.000957,-104.053249 41.001406))')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return Object.keys(res.body['data'][0]).length > 0;\n    })\n    .expect(function(res) {\n      return res.body['data'][0]['occurrence'] === 12;\n    })\n    .expect(200, done);",
              "err": {},
              "uuid": "482b6aa4-8c29-4a6a-a190-cd88b5b7bee3",
              "parentUUID": "8966debf-e857-4cab-a282-88cd2051e68c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get dataset data using a simple WKT:",
              "fullTitle": "Get Neotoma data with WKT extents: Get dataset data using a simple WKT:",
              "timedOut": false,
              "duration": 1047,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/datasets?loc=POLYGON((139.8%20-33.7,%20150.1%20-33.7,%20150.1%20-39.1,%20139.8%20-39.1,%20139.8%20-33.7))')\n    .set('Accept', 'application/json')\n    .expect(function(res) {\n      return Object.keys(res.body['data'][0]).length > 0;\n    })\n    .expect(function(res) {\n      return res.body['data'][0]['occurrence'] === 12;\n    })\n    .expect(200, done);",
              "err": {},
              "uuid": "76ac7288-37af-444a-92f3-c763b41d6729",
              "parentUUID": "8966debf-e857-4cab-a282-88cd2051e68c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9171730b-3a24-4331-aca3-d433d207c6f2",
            "98279083-aa16-415f-af22-8c500757779c",
            "482b6aa4-8c29-4a6a-a190-cd88b5b7bee3",
            "76ac7288-37af-444a-92f3-c763b41d6729"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2559,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        },
        {
          "uuid": "e80e128f-8cd8-4f87-b5c2-bedf15446a43",
          "title": "Get contact data:",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/contacts.js",
          "file": "/test/contacts.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "The default limit of 25 should be reached for contact data:",
              "fullTitle": "Get contact data: The default limit of 25 should be reached for contact data:",
              "timedOut": false,
              "duration": 161,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/contacts/?contactstatus=retired')\n    .set('Accept', 'application/json')\n    .end(function(err, res) {\n      if (err) return done(err);\n      assert.strictEqual(res.body.data.length, 25);\n      done();\n    });",
              "err": {},
              "uuid": "72973aa0-7a2a-4488-a485-ef13f1680ee0",
              "parentUUID": "e80e128f-8cd8-4f87-b5c2-bedf15446a43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The example in the swagger should return an object:",
              "fullTitle": "Get contact data: The example in the swagger should return an object:",
              "timedOut": false,
              "duration": 183,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/contacts?familyname=Grimm&contactstatus=active&limit=25')\n    .set('Accept', 'application/json')\n    .end(function(err, res) {\n      if (err) return done(err);\n      assert.strictEqual(res.body.data[0]['familyname'], 'Grimm');\n      done();\n    });",
              "err": {},
              "uuid": "d71bc5fe-f6cf-4cf9-998a-fc579f00bcf4",
              "parentUUID": "e80e128f-8cd8-4f87-b5c2-bedf15446a43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Contact queries should be case insensitive:",
              "fullTitle": "Get contact data: Contact queries should be case insensitive:",
              "timedOut": false,
              "duration": 159,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/contacts/?contactstatus=Retired')\n    .set('Accept', 'application/json')\n    .end(function(err, res) {\n      if (err) return done(err);\n      assert.strictEqual(res.body.data.length, 25);\n      done();\n    });",
              "err": {},
              "uuid": "4bd48a22-d045-485a-b8f9-14e8633ee5ac",
              "parentUUID": "e80e128f-8cd8-4f87-b5c2-bedf15446a43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Changing the limit should change the number of contacts retrieved:",
              "fullTitle": "Get contact data: Changing the limit should change the number of contacts retrieved:",
              "timedOut": false,
              "duration": 161,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/contacts/?status=retired&limit=30')\n    .set('Accept', 'application/json')\n    .end(function(err, res) {\n      if (err) return done(err);\n      assert.strictEqual(res.body.data.length, 30);\n      done();\n    });",
              "err": {},
              "uuid": "eed22fa4-03e5-4367-841d-2218b139d97a",
              "parentUUID": "e80e128f-8cd8-4f87-b5c2-bedf15446a43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "A single contact (12) should be returned.",
              "fullTitle": "Get contact data: A single contact (12) should be returned.",
              "timedOut": false,
              "duration": 150,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/contacts/12')\n    .set('Accept', 'application/json')\n    .end(function(err, res) {\n      if (err) return done(err);\n      assert.strictEqual(res.body.data[0]['contactid'], 12);\n      done();\n    });",
              "err": {},
              "uuid": "08102b98-bc82-4385-9395-092e3b47c068",
              "parentUUID": "e80e128f-8cd8-4f87-b5c2-bedf15446a43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "All contacts from datasets should be returned.",
              "fullTitle": "Get contact data: All contacts from datasets should be returned.",
              "timedOut": false,
              "duration": 154,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/datasets/12,13/contacts')\n    .set('Accept', 'application/json')\n    .end(function(err, res) {\n      if (err) return done(err);\n      assert.strictEqual(res.body.data.length, 2);\n      done();\n    });",
              "err": {},
              "uuid": "bbb79cb9-ca18-4ae9-8aa8-3c24d7490221",
              "parentUUID": "e80e128f-8cd8-4f87-b5c2-bedf15446a43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The length of returned contacts should be equivalent to the number of datasets.",
              "fullTitle": "Get contact data: The length of returned contacts should be equivalent to the number of datasets.",
              "timedOut": false,
              "duration": 154,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/datasets/12,13/contacts')\n    .set('Accept', 'application/json')\n    .end(function(err, res) {\n      if (err) return done(err);\n      const test = [];\n      assert.strictEqual(test.length, 0);\n      done();\n    });",
              "err": {},
              "uuid": "cbbd22d3-9f12-4692-b316-a6edb4cb7183",
              "parentUUID": "e80e128f-8cd8-4f87-b5c2-bedf15446a43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The length of returned contacts should be equivalent to the number of sites.",
              "fullTitle": "Get contact data: The length of returned contacts should be equivalent to the number of sites.",
              "timedOut": false,
              "duration": 147,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/datasets/102,1435,1,27/contacts')\n    .set('Accept', 'application/json')\n    .end(function(err, res) {\n      if (err) return done(err);\n      assert.strictEqual(Object.keys(res.body.data).length, 4);\n      done();\n    });",
              "err": {},
              "uuid": "b8b6e6b0-6e26-4df3-8e9b-d64c75ccfef2",
              "parentUUID": "e80e128f-8cd8-4f87-b5c2-bedf15446a43",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "72973aa0-7a2a-4488-a485-ef13f1680ee0",
            "d71bc5fe-f6cf-4cf9-998a-fc579f00bcf4",
            "4bd48a22-d045-485a-b8f9-14e8633ee5ac",
            "eed22fa4-03e5-4367-841d-2218b139d97a",
            "08102b98-bc82-4385-9395-092e3b47c068",
            "bbb79cb9-ca18-4ae9-8aa8-3c24d7490221",
            "cbbd22d3-9f12-4692-b316-a6edb4cb7183",
            "b8b6e6b0-6e26-4df3-8e9b-d64c75ccfef2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1269,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "ee6a02f7-f8f1-4e97-98d1-c4618eea56bc",
          "title": "tests for /v2.0/data/publications/{publicationid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-publications-{publicationid}-test.js",
          "file": "/test/v2.0-data-publications-{publicationid}-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "d964d21c-48f5-4376-9088-6707019bf1fc",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-publications-{publicationid}-test.js",
              "file": "/test/v2.0-data-publications-{publicationid}-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"A list of publications.\"",
                  "fullTitle": "tests for /v2.0/data/publications/{publicationid} tests for get should respond 200 for \"A list of publications.\"",
                  "timedOut": false,
                  "duration": 159,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/publications/500', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "1cc0a556-40d5-4076-ba30-3ccd91675625",
                  "parentUUID": "d964d21c-48f5-4376-9088-6707019bf1fc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1cc0a556-40d5-4076-ba30-3ccd91675625"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 159,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "741bead4-b4bb-4945-8e71-fc361c17de14",
          "title": "tests for /v2.0/data/sites/{siteid}/datasets_elc",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-sites-{siteid}-datasets_elc-test.js",
          "file": "/test/v2.0-data-sites-{siteid}-datasets_elc-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "da2ad751-527e-478c-80d3-04c09501af75",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-sites-{siteid}-datasets_elc-test.js",
              "file": "/test/v2.0-data-sites-{siteid}-datasets_elc-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"An array of datasets.\"",
                  "fullTitle": "tests for /v2.0/data/sites/{siteid}/datasets_elc tests for get should respond 200 for \"An array of datasets.\"",
                  "timedOut": false,
                  "duration": 910,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/sites/500/datasets_elc', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "690dcc05-a9af-4e65-9708-e305cd4b7282",
                  "parentUUID": "da2ad751-527e-478c-80d3-04c09501af75",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "690dcc05-a9af-4e65-9708-e305cd4b7282"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 910,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7c018576-c906-43e8-8f99-e4e50d8ed6a8",
          "title": "tests for /v2.0/data/summary/rawbymonth",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-summary-rawbymonth-test.js",
          "file": "/test/v2.0-data-summary-rawbymonth-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "10fe8eee-3a44-4860-9894-24bfd4b78144",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-summary-rawbymonth-test.js",
              "file": "/test/v2.0-data-summary-rawbymonth-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"A count of the data objects added to Neotoma.\"",
                  "fullTitle": "tests for /v2.0/data/summary/rawbymonth tests for get should respond 200 for \"A count of the data objects added to Neotoma.\"",
                  "timedOut": false,
                  "duration": 4414,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/summary/rawbymonth', {\n  'qs': {'start': 1, 'end': 10},\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "b0dc7993-4879-482d-b211-adfd15f9bd72",
                  "parentUUID": "10fe8eee-3a44-4860-9894-24bfd4b78144",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b0dc7993-4879-482d-b211-adfd15f9bd72"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4414,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "8db84df0-92ff-40d2-955f-28029859db04",
          "title": "tests for /v1.5/data/datasets/{datasetid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v1.5-data-datasets-{datasetid}-test.js",
          "file": "/test/v1.5-data-datasets-{datasetid}-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3022ba50-f407-4846-850f-bcd182f5212a",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v1.5-data-datasets-{datasetid}-test.js",
              "file": "/test/v1.5-data-datasets-{datasetid}-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"An array of datasets.\"",
                  "fullTitle": "tests for /v1.5/data/datasets/{datasetid} tests for get should respond 200 for \"An array of datasets.\"",
                  "timedOut": false,
                  "duration": 705,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v1.5/data/datasets/1501', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "d1758caa-2e93-499c-a7a4-77ee784803c9",
                  "parentUUID": "3022ba50-f407-4846-850f-bcd182f5212a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d1758caa-2e93-499c-a7a4-77ee784803c9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 705,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "4ecad593-7f40-4137-a8fd-ba355cbe2990",
          "title": "GET /v1.5/apps/DatasetTypes",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v1.5/apps/DatasetTypes should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 2,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "7916ed22-eda7-466f-859e-b5cb0657da67",
              "parentUUID": "4ecad593-7f40-4137-a8fd-ba355cbe2990",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7916ed22-eda7-466f-859e-b5cb0657da67"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "52fd5672-e9cc-4ff6-a397-7a755153f5c4",
          "title": "GET /v1.5/apps/TaxaInDatasets",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v1.5/apps/TaxaInDatasets should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 2,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "c73689b5-2554-4d53-a46b-f40be4c6e186",
              "parentUUID": "52fd5672-e9cc-4ff6-a397-7a755153f5c4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c73689b5-2554-4d53-a46b-f40be4c6e186"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b01970e9-fff6-4a0b-827a-16c8b00a438e",
          "title": "GET /v1.5/apps/collectionTypes",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v1.5/apps/collectionTypes should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 2,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "12f18bc8-564f-45da-b920-c2baf705bf49",
              "parentUUID": "b01970e9-fff6-4a0b-827a-16c8b00a438e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "12f18bc8-564f-45da-b920-c2baf705bf49"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "5001e573-9119-4eaf-a882-bf3717ea0ea8",
          "title": "GET /v1.5/data/contacts/{contactid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v1.5/data/contacts/{contactid} should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 2,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "cc1089a3-2ed4-4e9a-b31d-a72d9899a262",
              "parentUUID": "5001e573-9119-4eaf-a882-bf3717ea0ea8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "cc1089a3-2ed4-4e9a-b31d-a72d9899a262"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "52ccf903-3bb2-4d12-a587-201643caad20",
          "title": "GET /v1.5/data/datasets/{datasetid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v1.5/data/datasets/{datasetid} should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 2,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "e1273cd1-795e-4f75-86c9-06893280b433",
              "parentUUID": "52ccf903-3bb2-4d12-a587-201643caad20",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e1273cd1-795e-4f75-86c9-06893280b433"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "ce976dc8-9c4b-49cf-8fca-32c88f91b3e7",
          "title": "GET /v1.5/data/downloads/{datasetid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v1.5/data/downloads/{datasetid} should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "8dbcdb3a-a901-4d04-8cf9-6cfacd78c9bb",
              "parentUUID": "ce976dc8-9c4b-49cf-8fca-32c88f91b3e7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8dbcdb3a-a901-4d04-8cf9-6cfacd78c9bb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "5711db1d-568f-4907-b959-1eac5784acef",
          "title": "GET /v1.5/data/geopoliticalunits",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v1.5/data/geopoliticalunits should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 2,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "905a1ffa-8d11-4488-9d9a-b9726a67d2d1",
              "parentUUID": "5711db1d-568f-4907-b959-1eac5784acef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "905a1ffa-8d11-4488-9d9a-b9726a67d2d1"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "a95aebfe-6cd8-41d6-8f41-3edd9842d5d6",
          "title": "GET /v1.5/data/geopoliticalunits/{gpid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v1.5/data/geopoliticalunits/{gpid} should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "bccbd905-cc2c-4ae6-8673-e81b1466ce43",
              "parentUUID": "a95aebfe-6cd8-41d6-8f41-3edd9842d5d6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "bccbd905-cc2c-4ae6-8673-e81b1466ce43"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7a67520a-be89-475f-ba59-1d417a56e8c8",
          "title": "GET /v1.5/data/occurrence/{occurrenceid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v1.5/data/occurrence/{occurrenceid} should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 2,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "1ffae3e8-5779-4a7f-9f9d-2cd82e9affdd",
              "parentUUID": "7a67520a-be89-475f-ba59-1d417a56e8c8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "1ffae3e8-5779-4a7f-9f9d-2cd82e9affdd"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b01731f7-9f01-451f-a8b3-f5abeed62d10",
          "title": "GET /v1.5/data/sites/{siteid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v1.5/data/sites/{siteid} should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "2c342941-fcba-4279-be7e-9055b2e5e43d",
              "parentUUID": "b01731f7-9f01-451f-a8b3-f5abeed62d10",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "2c342941-fcba-4279-be7e-9055b2e5e43d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "edd5b855-e4fc-489c-b506-5d9c522a90d8",
          "title": "GET /v1.5/dbtables/{table}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v1.5/dbtables/{table} should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 2,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "c02777aa-72dc-42ba-875f-a2858b3adf11",
              "parentUUID": "edd5b855-e4fc-489c-b506-5d9c522a90d8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c02777aa-72dc-42ba-875f-a2858b3adf11"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "628588ea-149e-479f-99d3-0a1616f36bde",
          "title": "GET /v2.0/apps/authorpis",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/apps/authorpis should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "2248407a-3d7b-43ab-b143-61f4c360e307",
              "parentUUID": "628588ea-149e-479f-99d3-0a1616f36bde",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "2248407a-3d7b-43ab-b143-61f4c360e307"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7bb3a436-c37a-43c9-a0c3-267a4ad0fa3d",
          "title": "GET /v2.0/apps/collectiontypes",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/apps/collectiontypes should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "0e539bd4-7a05-4875-91d0-ca6036492d38",
              "parentUUID": "7bb3a436-c37a-43c9-a0c3-267a4ad0fa3d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0e539bd4-7a05-4875-91d0-ca6036492d38"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "829691f4-4b55-4188-b265-fe2e9cb412f9",
          "title": "GET /v2.0/apps/datasettypes",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/apps/datasettypes should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 2,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "d8537219-0d0a-4d61-99b3-91c3020dc0bf",
              "parentUUID": "829691f4-4b55-4188-b265-fe2e9cb412f9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d8537219-0d0a-4d61-99b3-91c3020dc0bf"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "8970b61c-b649-4826-90bf-9b84d48703ff",
          "title": "GET /v2.0/apps/depositionalenvironments/root",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/apps/depositionalenvironments/root should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "d48761fd-f336-48a4-8238-d227397cfe9f",
              "parentUUID": "8970b61c-b649-4826-90bf-9b84d48703ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d48761fd-f336-48a4-8238-d227397cfe9f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "24e70ce4-1960-4c9f-b9f2-5bf752e11def",
          "title": "GET /v2.0/apps/keywords",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/apps/keywords should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "d44720aa-281f-49d8-8837-6df9441ed290",
              "parentUUID": "24e70ce4-1960-4c9f-b9f2-5bf752e11def",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d44720aa-281f-49d8-8837-6df9441ed290"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7b68679e-d446-45fe-b36f-2d03549a94d2",
          "title": "GET /v2.0/apps/taphonomysystems",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/apps/taphonomysystems should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "c9965406-fe13-426b-afe5-1f4c12c26212",
              "parentUUID": "7b68679e-d446-45fe-b36f-2d03549a94d2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c9965406-fe13-426b-afe5-1f4c12c26212"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "ebe22465-d4c1-4443-9ee6-d7ba03354b15",
          "title": "GET /v2.0/apps/taxagrouptypes",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/apps/taxagrouptypes should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "f3113f4b-45c1-43a8-9263-9b3e04f9290e",
              "parentUUID": "ebe22465-d4c1-4443-9ee6-d7ba03354b15",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f3113f4b-45c1-43a8-9263-9b3e04f9290e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "2c7f01da-ae3d-410d-b430-a1fd21e7d0a1",
          "title": "GET /v2.0/apps/taxaindatasets",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/apps/taxaindatasets should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "36504346-17d3-4151-a427-de2eb3309672",
              "parentUUID": "2c7f01da-ae3d-410d-b430-a1fd21e7d0a1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "36504346-17d3-4151-a427-de2eb3309672"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "3ee4d182-158e-4f53-9c48-461f79b24ac7",
          "title": "GET /v2.0/data/chronologies/{chronid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/chronologies/{chronid} should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "6efdd254-de7f-497c-b774-68173cb12e01",
              "parentUUID": "3ee4d182-158e-4f53-9c48-461f79b24ac7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "6efdd254-de7f-497c-b774-68173cb12e01"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "3e7bfbf2-ea77-412d-b580-8837ab705149",
          "title": "GET /v2.0/data/contacts",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/contacts should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "87b0f4ae-2572-4b42-a2a4-f9aa82eeeafa",
              "parentUUID": "3e7bfbf2-ea77-412d-b580-8837ab705149",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "87b0f4ae-2572-4b42-a2a4-f9aa82eeeafa"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "4842111b-a3b7-4d80-ad60-303ee799d54f",
          "title": "GET /v2.0/data/contacts/{contactid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/contacts/{contactid} should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "b7b37b94-fa80-4733-8e44-e1286b8876a2",
              "parentUUID": "4842111b-a3b7-4d80-ad60-303ee799d54f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b7b37b94-fa80-4733-8e44-e1286b8876a2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "15c8b779-7a81-43c1-af26-16e5af7a6912",
          "title": "GET /v2.0/data/contacts/{contactid}/sites",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/contacts/{contactid}/sites should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "3e5ca98e-396d-4461-ac22-5bfbcf1c4034",
              "parentUUID": "15c8b779-7a81-43c1-af26-16e5af7a6912",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "3e5ca98e-396d-4461-ac22-5bfbcf1c4034"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "5f4115d3-e456-4fe9-95f4-51d435efbea9",
          "title": "GET /v2.0/data/datasets",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/datasets should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "f8886a2b-4e50-4e41-b947-cadf69367119",
              "parentUUID": "5f4115d3-e456-4fe9-95f4-51d435efbea9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f8886a2b-4e50-4e41-b947-cadf69367119"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "9dc0d24d-d47b-4eab-8410-a65b01ea259a",
          "title": "GET /v2.0/data/datasets/db",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/datasets/db should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 2,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "6e579a00-a919-42a8-aed0-5f0c9ec072ba",
              "parentUUID": "9dc0d24d-d47b-4eab-8410-a65b01ea259a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "6e579a00-a919-42a8-aed0-5f0c9ec072ba"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "a68f0aa5-e1ac-4275-aa17-cb3b77c4fa07",
          "title": "GET /v2.0/data/datasets/{datasetid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/datasets/{datasetid} should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "7aebb9d6-bb85-45e0-b1b4-794bcf0e5c46",
              "parentUUID": "a68f0aa5-e1ac-4275-aa17-cb3b77c4fa07",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7aebb9d6-bb85-45e0-b1b4-794bcf0e5c46"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "4c1e4105-b647-4afe-af84-3d917d8c4b33",
          "title": "GET /v2.0/data/datasets/{datasetid}/chronologies",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/datasets/{datasetid}/chronologies should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 2,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "d9b089e3-24f4-4d07-991b-a35ebf7ab223",
              "parentUUID": "4c1e4105-b647-4afe-af84-3d917d8c4b33",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d9b089e3-24f4-4d07-991b-a35ebf7ab223"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "23007b48-257e-4c2f-bfda-e4bd234197b7",
          "title": "GET /v2.0/data/datasets/{datasetid}/contacts",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/datasets/{datasetid}/contacts should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "5c2f71c9-c482-4fbb-9cdf-7a67a8bffb8c",
              "parentUUID": "23007b48-257e-4c2f-bfda-e4bd234197b7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5c2f71c9-c482-4fbb-9cdf-7a67a8bffb8c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b353ac91-b16e-411a-ada2-7a3502cc766e",
          "title": "GET /v2.0/data/datasets/{datasetid}/doi",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/datasets/{datasetid}/doi should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "35bd909a-a199-47d9-b808-6c8abc04a8ab",
              "parentUUID": "b353ac91-b16e-411a-ada2-7a3502cc766e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "35bd909a-a199-47d9-b808-6c8abc04a8ab"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "5fd725d4-037c-4973-9ded-73d259b8a7b6",
          "title": "GET /v2.0/data/datasets/{datasetid}/lithology",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/datasets/{datasetid}/lithology should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "95e6c55c-a4b9-487c-8f30-7d1b7ad41eff",
              "parentUUID": "5fd725d4-037c-4973-9ded-73d259b8a7b6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "95e6c55c-a4b9-487c-8f30-7d1b7ad41eff"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "5cf153c4-1bb9-4442-a867-15a31ef7d759",
          "title": "GET /v2.0/data/datasets/{datasetid}/publications",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/datasets/{datasetid}/publications should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 2,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "0c71d004-3c93-401c-8c3d-b3d607cceef5",
              "parentUUID": "5cf153c4-1bb9-4442-a867-15a31ef7d759",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0c71d004-3c93-401c-8c3d-b3d607cceef5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "2076d2e5-02b0-4c64-90f5-b3ea98d9e44f",
          "title": "GET /v2.0/data/datasets/{datasetid}/sites",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/datasets/{datasetid}/sites should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 2,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "b1bf2508-87fd-4f66-b652-aaf16786936d",
              "parentUUID": "2076d2e5-02b0-4c64-90f5-b3ea98d9e44f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b1bf2508-87fd-4f66-b652-aaf16786936d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "cb8aa901-6b4c-4fee-a266-03a5fd2f6771",
          "title": "GET /v2.0/data/datasets/{datasetid}/taxa",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/datasets/{datasetid}/taxa should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "3c031cf1-2cb7-48a2-99ea-2807a9a4f385",
              "parentUUID": "cb8aa901-6b4c-4fee-a266-03a5fd2f6771",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "3c031cf1-2cb7-48a2-99ea-2807a9a4f385"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "f8b88649-6580-4277-a262-2a0f611ed57a",
          "title": "GET /v2.0/data/datasets_elc",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/datasets_elc should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "512ed0d1-e7bb-4ccb-814a-007ebf003a84",
              "parentUUID": "f8b88649-6580-4277-a262-2a0f611ed57a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "512ed0d1-e7bb-4ccb-814a-007ebf003a84"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "689f80d2-86f6-4021-be7b-efce37e29e3b",
          "title": "GET /v2.0/data/datasets_elc/{datasetid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/datasets_elc/{datasetid} should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "f5ca2ddb-f242-4493-b6f1-44b7416da762",
              "parentUUID": "689f80d2-86f6-4021-be7b-efce37e29e3b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f5ca2ddb-f242-4493-b6f1-44b7416da762"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "e67d0cd9-d01a-452c-8f3a-dcce8b8ecc21",
          "title": "GET /v2.0/data/dbtables",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/dbtables should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "4b6ab56f-94d0-4974-aafc-7fca92b9c9c4",
              "parentUUID": "e67d0cd9-d01a-452c-8f3a-dcce8b8ecc21",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "4b6ab56f-94d0-4974-aafc-7fca92b9c9c4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c3a0c734-a1b2-46c2-8c8d-d562660c9f39",
          "title": "GET /v2.0/data/dbtables/{table}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/dbtables/{table} should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "08a2df98-1da2-4159-84ff-8fb8fb6746a4",
              "parentUUID": "c3a0c734-a1b2-46c2-8c8d-d562660c9f39",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "08a2df98-1da2-4159-84ff-8fb8fb6746a4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "4e0d43db-80cb-4769-9a2a-953e6252a4ff",
          "title": "GET /v2.0/data/downloads/{datasetid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/downloads/{datasetid} should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "8347910c-8ce4-41c7-96a6-ad0539e5557a",
              "parentUUID": "4e0d43db-80cb-4769-9a2a-953e6252a4ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8347910c-8ce4-41c7-96a6-ad0539e5557a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "3937037e-3412-4fe4-b963-342e5d51dafb",
          "title": "GET /v2.0/data/frozen/{datasetid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/frozen/{datasetid} should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "cf6b2fb1-d2ad-4b00-a3a5-3186154908eb",
              "parentUUID": "3937037e-3412-4fe4-b963-342e5d51dafb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "cf6b2fb1-d2ad-4b00-a3a5-3186154908eb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "d9a6e909-9644-4834-a528-04b403f69ed6",
          "title": "GET /v2.0/data/geopoliticalunits",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/geopoliticalunits should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "5f517f60-666b-4602-a4f4-e5f0e99a8e79",
              "parentUUID": "d9a6e909-9644-4834-a528-04b403f69ed6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5f517f60-666b-4602-a4f4-e5f0e99a8e79"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "57830ebb-27f9-4875-b807-81721304e499",
          "title": "GET /v2.0/data/geopoliticalunits/{gpid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/geopoliticalunits/{gpid} should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "a9f89b3a-0dc8-43bd-a82a-9bd4d047a605",
              "parentUUID": "57830ebb-27f9-4875-b807-81721304e499",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a9f89b3a-0dc8-43bd-a82a-9bd4d047a605"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "ee5895d5-1bb8-409f-86db-6ba63bb10888",
          "title": "GET /v2.0/data/geopoliticalunits/{gpid}/datasets",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/geopoliticalunits/{gpid}/datasets should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "8141e926-4c32-4bc7-bc9d-a64fab595dc6",
              "parentUUID": "ee5895d5-1bb8-409f-86db-6ba63bb10888",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8141e926-4c32-4bc7-bc9d-a64fab595dc6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "3060bef3-1d3c-44f7-801e-ece4ba825959",
          "title": "GET /v2.0/data/geopoliticalunits/{gpid}/sites",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/geopoliticalunits/{gpid}/sites should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "421fbb62-58cf-4295-9f8d-34336b275aa6",
              "parentUUID": "3060bef3-1d3c-44f7-801e-ece4ba825959",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "421fbb62-58cf-4295-9f8d-34336b275aa6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "2afff00c-83bb-439e-9e74-c6e2bb5fafcf",
          "title": "GET /v2.0/data/occurrences",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/occurrences should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "ac3cea8e-2fcc-4bdf-9099-b87b4d2ff25e",
              "parentUUID": "2afff00c-83bb-439e-9e74-c6e2bb5fafcf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ac3cea8e-2fcc-4bdf-9099-b87b4d2ff25e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "ce3be811-d359-4b43-9e4a-31b0f9519fac",
          "title": "GET /v2.0/data/occurrences/{occurrenceid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/occurrences/{occurrenceid} should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "0636431d-c5b8-46f2-b48c-364422f43210",
              "parentUUID": "ce3be811-d359-4b43-9e4a-31b0f9519fac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0636431d-c5b8-46f2-b48c-364422f43210"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "003ee82d-d7b4-4626-b0cd-68595721b331",
          "title": "GET /v2.0/data/pollen",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/pollen should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 2,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "96ef71a6-5b6c-454c-8acf-3b27f8a79fdb",
              "parentUUID": "003ee82d-d7b4-4626-b0cd-68595721b331",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "96ef71a6-5b6c-454c-8acf-3b27f8a79fdb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "66fe615a-a8b1-4439-bf76-5e058153bd12",
          "title": "GET /v2.0/data/pollen/{id}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/pollen/{id} should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 2,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "98dc72b8-6353-4655-a919-f19048545f05",
              "parentUUID": "66fe615a-a8b1-4439-bf76-5e058153bd12",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "98dc72b8-6353-4655-a919-f19048545f05"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "64d461bc-c7ce-4273-aedb-e92acbc0ee5a",
          "title": "GET /v2.0/data/publications",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/publications should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "60ef3470-9cd4-4991-9a9a-3c3fc4f86632",
              "parentUUID": "64d461bc-c7ce-4273-aedb-e92acbc0ee5a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "60ef3470-9cd4-4991-9a9a-3c3fc4f86632"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "5996fe44-fa41-47a6-97ab-d44874d037e4",
          "title": "GET /v2.0/data/publications/{publicationid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/publications/{publicationid} should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "8a7d8b3a-71eb-4cc8-b70f-2ebd811790fd",
              "parentUUID": "5996fe44-fa41-47a6-97ab-d44874d037e4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8a7d8b3a-71eb-4cc8-b70f-2ebd811790fd"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "482fee94-9f1e-4b92-bb6a-d78f2730bf6d",
          "title": "GET /v2.0/data/sites",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/sites should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "9cc48083-69ca-4ffe-a894-ae044253956d",
              "parentUUID": "482fee94-9f1e-4b92-bb6a-d78f2730bf6d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9cc48083-69ca-4ffe-a894-ae044253956d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "0c1d9cfb-363c-44e5-9c67-290b3f8a40a2",
          "title": "GET /v2.0/data/sites/{siteid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/sites/{siteid} should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "bd603b06-c209-4b75-be56-03992d995cef",
              "parentUUID": "0c1d9cfb-363c-44e5-9c67-290b3f8a40a2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "bd603b06-c209-4b75-be56-03992d995cef"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "88c7e4da-21fd-4813-b6a3-9507525be524",
          "title": "GET /v2.0/data/sites/{siteid}/chronologies",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/sites/{siteid}/chronologies should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 2,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "485a8478-deda-42c5-9fbb-baead3a44f4e",
              "parentUUID": "88c7e4da-21fd-4813-b6a3-9507525be524",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "485a8478-deda-42c5-9fbb-baead3a44f4e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "53e7984f-4efd-4812-a815-92af9f3fb676",
          "title": "GET /v2.0/data/sites/{siteid}/contacts",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/sites/{siteid}/contacts should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "65b3e309-061b-4fc9-b18e-46fcb5f86faa",
              "parentUUID": "53e7984f-4efd-4812-a815-92af9f3fb676",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "65b3e309-061b-4fc9-b18e-46fcb5f86faa"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "60dadfc6-cbb9-478b-9bc0-121053c246e9",
          "title": "GET /v2.0/data/sites/{siteid}/datasets",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/sites/{siteid}/datasets should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "b0e0edda-dad3-44b6-b401-75e82ad5fd09",
              "parentUUID": "60dadfc6-cbb9-478b-9bc0-121053c246e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b0e0edda-dad3-44b6-b401-75e82ad5fd09"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "103c0205-9e35-45f3-a520-86eee2299f7f",
          "title": "GET /v2.0/data/sites/{siteid}/datasets_elc",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/sites/{siteid}/datasets_elc should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "9d8cd730-91c7-47b6-82c6-07d823e7e3fb",
              "parentUUID": "103c0205-9e35-45f3-a520-86eee2299f7f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9d8cd730-91c7-47b6-82c6-07d823e7e3fb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "aea2a029-c449-4b8f-a827-094510222b80",
          "title": "GET /v2.0/data/sites/{siteid}/geopoliticalunits",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/sites/{siteid}/geopoliticalunits should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 2,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "477033c0-35b3-4631-9e4e-5ca274302735",
              "parentUUID": "aea2a029-c449-4b8f-a827-094510222b80",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "477033c0-35b3-4631-9e4e-5ca274302735"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "276896a3-c6c4-4c72-9404-b60e563f2bd3",
          "title": "GET /v2.0/data/summary/dsdbmonth",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/summary/dsdbmonth should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 2,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "d8984143-7680-48d9-b50e-8a460d586766",
              "parentUUID": "276896a3-c6c4-4c72-9404-b60e563f2bd3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d8984143-7680-48d9-b50e-8a460d586766"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "03ea5653-7b33-41bc-b114-ba66b15e608d",
          "title": "GET /v2.0/data/summary/dstypemonth",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/summary/dstypemonth should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "804c8b09-b500-4f53-9b8f-af169c8a83ac",
              "parentUUID": "03ea5653-7b33-41bc-b114-ba66b15e608d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "804c8b09-b500-4f53-9b8f-af169c8a83ac"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b4775c5c-8d9d-4704-94d3-c802db7c7043",
          "title": "GET /v2.0/data/summary/rawbymonth",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/summary/rawbymonth should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "810e8503-149e-46c8-baef-b86997b103e5",
              "parentUUID": "b4775c5c-8d9d-4704-94d3-c802db7c7043",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "810e8503-149e-46c8-baef-b86997b103e5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "ac511c9a-8b20-484b-b75d-340c5e9eada7",
          "title": "GET /v2.0/data/taxa",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/taxa should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "4cf50434-d7dc-4035-a083-299a092f8bb0",
              "parentUUID": "ac511c9a-8b20-484b-b75d-340c5e9eada7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "4cf50434-d7dc-4035-a083-299a092f8bb0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "a8972fc5-0e9e-484f-8e0e-61548f0acc30",
          "title": "GET /v2.0/data/taxa/{taxonid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/taxa/{taxonid} should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "3674fece-90a3-4ff4-b4ce-63c27c7c2e95",
              "parentUUID": "a8972fc5-0e9e-484f-8e0e-61548f0acc30",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "3674fece-90a3-4ff4-b4ce-63c27c7c2e95"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "61d9336a-63ca-456e-a939-17b90fd1f9a0",
          "title": "GET /v2.0/data/taxa/{taxonid}/occurrences",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/responsevalidate.js",
          "file": "/test/responsevalidate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy OpenAPI spec",
              "fullTitle": "GET /v2.0/data/taxa/{taxonid}/occurrences should satisfy OpenAPI spec",
              "timedOut": false,
              "duration": 2,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Get an HTTP response from your server (e.g. using axios)\nconst res = await axios.get('http://localhost:3005' + apipath)\nexpect(res.status).to.equal(200);\nexpect(res).to.satisfyApiSpec;",
              "err": {
                "message": "Error: connect ECONNREFUSED 127.0.0.1:3005",
                "estack": "Error: connect ECONNREFUSED 127.0.0.1:3005\n    at AxiosError.from (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:837:14)\n    at RedirectableRequest.handleRequestError (/home/simon/Documents/Neotoma/api_nodetest/node_modules/axios/dist/node/axios.cjs:3083:25)\n    at RedirectableRequest.emit (node:events:514:28)\n    at eventHandlers.<computed> (/home/simon/Documents/Neotoma/api_nodetest/node_modules/follow-redirects/index.js:14:24)\n    at ClientRequest.emit (node:events:514:28)\n    at Socket.socketErrorListener (node:_http_client:501:9)\n    at Socket.emit (node:events:514:28)\n    at emitErrorNT (node:internal/streams/destroy:151:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "f7d4229f-7d02-41d1-8be8-b91aa8b42d87",
              "parentUUID": "61d9336a-63ca-456e-a939-17b90fd1f9a0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f7d4229f-7d02-41d1-8be8-b91aa8b42d87"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "e4be35f8-8c69-45b9-b7e0-e7a0d02e56b6",
          "title": "tests for /v2.0/data/geopoliticalunits/{gpid}/sites",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-geopoliticalunits-{gpid}-sites-test.js",
          "file": "/test/v2.0-data-geopoliticalunits-{gpid}-sites-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0380aa69-de49-4cc5-8cf8-721243099d67",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-geopoliticalunits-{gpid}-sites-test.js",
              "file": "/test/v2.0-data-geopoliticalunits-{gpid}-sites-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"An array of sites.\"",
                  "fullTitle": "tests for /v2.0/data/geopoliticalunits/{gpid}/sites tests for get should respond 200 for \"An array of sites.\"",
                  "timedOut": false,
                  "duration": 158,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/geopoliticalunits/4453/sites', {\n  'qs': {'limit': 10, 'offset': 0},\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "345310fc-445a-47d2-87e8-b531ba4f3c88",
                  "parentUUID": "0380aa69-de49-4cc5-8cf8-721243099d67",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "345310fc-445a-47d2-87e8-b531ba4f3c88"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 158,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c202a8f4-72a9-47ff-8c8d-3bdf8ca05a44",
          "title": "tests for /v2.0/apps/authorpis",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-apps-authorpis-test.js",
          "file": "/test/v2.0-apps-authorpis-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "d411fd24-54a5-4044-9e7b-c2af8fcb6f8a",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-apps-authorpis-test.js",
              "file": "/test/v2.0-apps-authorpis-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"A table of Neotoma collection types.\"",
                  "fullTitle": "tests for /v2.0/apps/authorpis tests for get should respond 200 for \"A table of Neotoma collection types.\"",
                  "timedOut": false,
                  "duration": 626,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/apps/authorpis', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "95726a8f-e0c5-4048-92ee-4e15354988b5",
                  "parentUUID": "d411fd24-54a5-4044-9e7b-c2af8fcb6f8a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "95726a8f-e0c5-4048-92ee-4e15354988b5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 626,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "5174b30f-3967-41b8-90ee-918ab54c84df",
          "title": "tests for /v2.0/data/geopoliticalunits",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-geopoliticalunits-test.js",
          "file": "/test/v2.0-data-geopoliticalunits-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "fd13bce9-9353-4cc5-8225-1ea08d4e139c",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-geopoliticalunits-test.js",
              "file": "/test/v2.0-data-geopoliticalunits-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"An array of geopolitical units.\"",
                  "fullTitle": "tests for /v2.0/data/geopoliticalunits tests for get should respond 200 for \"An array of geopolitical units.\"",
                  "timedOut": false,
                  "duration": 157,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/geopoliticalunits', {\n  'qs': {'gpid': 756, 'gpname': 'Canada', 'rank': 4, 'lower': true},\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "0d1cfbea-1a62-4123-8cf8-d97cf6a6d0de",
                  "parentUUID": "fd13bce9-9353-4cc5-8225-1ea08d4e139c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0d1cfbea-1a62-4123-8cf8-d97cf6a6d0de"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 157,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "328f6719-129a-4dad-819b-8968530c5503",
          "title": "tests for /v2.0/data/contacts/{contactid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-contacts-{contactid}-test.js",
          "file": "/test/v2.0-data-contacts-{contactid}-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "104527a6-7da6-4a1e-a6cc-3011e978bdea",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-contacts-{contactid}-test.js",
              "file": "/test/v2.0-data-contacts-{contactid}-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"A Neotoma contacts object.\"",
                  "fullTitle": "tests for /v2.0/data/contacts/{contactid} tests for get should respond 200 for \"A Neotoma contacts object.\"",
                  "timedOut": false,
                  "duration": 153,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/contacts/630', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "363afc88-3965-4858-b289-b03ff7b482c9",
                  "parentUUID": "104527a6-7da6-4a1e-a6cc-3011e978bdea",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "363afc88-3965-4858-b289-b03ff7b482c9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 153,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "ee3fc7d1-41a3-4336-b3f6-8f792c4fbb25",
          "title": "Tests for Explorer App Services",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/explorerCalls.js",
          "file": "/test/explorerCalls.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "6f5da7e7-78df-4bb4-a190-24953e2bf290",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/explorerCalls.js",
              "file": "/test/explorerCalls.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for TaxaGroupTypes",
                  "fullTitle": "Tests for Explorer App Services tests for get should respond 200 for TaxaGroupTypes",
                  "timedOut": false,
                  "duration": 210,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', appServicesLocation + '/TaxaGroupTypes', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "9f96d570-a92e-47d0-a339-6df1f6c39173",
                  "parentUUID": "6f5da7e7-78df-4bb4-a190-24953e2bf290",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond 200 for TaphonomyTypes",
                  "fullTitle": "Tests for Explorer App Services tests for get should respond 200 for TaphonomyTypes",
                  "timedOut": false,
                  "duration": 464,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', appServicesLocation + '/TaphonomyTypes', {\n  'qs': {\n    taphonomicSystemId: 1,\n  },\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "f96b30b8-812f-480e-96fb-cbd48c9d53d4",
                  "parentUUID": "6f5da7e7-78df-4bb4-a190-24953e2bf290",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond 200 for TaphonomySystems",
                  "fullTitle": "Tests for Explorer App Services tests for get should respond 200 for TaphonomySystems",
                  "timedOut": false,
                  "duration": 154,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', appServicesLocation + '/TaphonomySystems', {\n  'qs': {\n    datasetTypeId: 1,\n  },\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "00e02f34-a176-4a64-aeda-87833c4f6a45",
                  "parentUUID": "6f5da7e7-78df-4bb4-a190-24953e2bf290",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond 200 for ElementTypes",
                  "fullTitle": "Tests for Explorer App Services tests for get should respond 200 for ElementTypes",
                  "timedOut": false,
                  "duration": 150,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', appServicesLocation + '/ElementTypes', {\n  'qs': {\n    taxagroupid: 1,\n  },\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "8a5bbda5-fc7c-4f0c-b36f-11a7c8ba4f51",
                  "parentUUID": "6f5da7e7-78df-4bb4-a190-24953e2bf290",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond 200 for TaxaInDatasets (a slow service)",
                  "fullTitle": "Tests for Explorer App Services tests for get should respond 200 for TaxaInDatasets (a slow service)",
                  "timedOut": false,
                  "duration": 1341,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', appServicesLocation + '/TaxaInDatasets', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "38aef756-814f-45b5-806f-0863fc91bd93",
                  "parentUUID": "6f5da7e7-78df-4bb4-a190-24953e2bf290",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond 200 for collectionTypes",
                  "fullTitle": "Tests for Explorer App Services tests for get should respond 200 for collectionTypes",
                  "timedOut": false,
                  "duration": 154,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', appServicesLocation + '/collectionTypes', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "d742f501-a2a0-49e2-bb75-8b7d296fcf13",
                  "parentUUID": "6f5da7e7-78df-4bb4-a190-24953e2bf290",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond 200 for keywords",
                  "fullTitle": "Tests for Explorer App Services tests for get should respond 200 for keywords",
                  "timedOut": false,
                  "duration": 156,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', appServicesLocation + '/keywords', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "289c1af8-4982-42fe-923a-6015eab1cf07",
                  "parentUUID": "6f5da7e7-78df-4bb4-a190-24953e2bf290",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond 200 for authorpis",
                  "fullTitle": "Tests for Explorer App Services tests for get should respond 200 for authorpis",
                  "timedOut": false,
                  "duration": 628,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', appServicesLocation + '/authorpis', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "4ddf6c3e-4cac-4699-a904-4fa625479beb",
                  "parentUUID": "6f5da7e7-78df-4bb4-a190-24953e2bf290",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond 200 for DepositionalEnvironments",
                  "fullTitle": "Tests for Explorer App Services tests for get should respond 200 for DepositionalEnvironments",
                  "timedOut": false,
                  "duration": 461,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', appServicesLocation + '/DepositionalEnvironments', {\n  'qs': {idProperty: 1},\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "79cf72bf-00b8-4f7c-9fcc-1b7c1eb4aa0f",
                  "parentUUID": "6f5da7e7-78df-4bb4-a190-24953e2bf290",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond 200 for Search",
                  "fullTitle": "Tests for Explorer App Services tests for get should respond 200 for Search",
                  "timedOut": false,
                  "duration": 298,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('post', appServicesLocation + '/Search', {\n  'qs': {'search': '{\"datasetTypeId\":21}',\n    'time': true},\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "f7770968-ea11-475a-b0d2-12e0071fe07b",
                  "parentUUID": "6f5da7e7-78df-4bb4-a190-24953e2bf290",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond 200 for DatasetTypes",
                  "fullTitle": "Tests for Explorer App Services tests for get should respond 200 for DatasetTypes",
                  "timedOut": false,
                  "duration": 177,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', appServicesLocation + '/DatasetTypes', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "4496595c-5569-43c0-b97b-4d1b49bf2939",
                  "parentUUID": "6f5da7e7-78df-4bb4-a190-24953e2bf290",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond 200 for RelativeAges",
                  "fullTitle": "Tests for Explorer App Services tests for get should respond 200 for RelativeAges",
                  "timedOut": false,
                  "duration": 363,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', appServicesLocation + '/RelativeAges', {\n  'qs': {agescaleid: 1},\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "da6d67cc-d31c-4a2b-81cd-022c4d171341",
                  "parentUUID": "6f5da7e7-78df-4bb4-a190-24953e2bf290",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond 200 for Geochronologies",
                  "fullTitle": "Tests for Explorer App Services tests for get should respond 200 for Geochronologies",
                  "timedOut": false,
                  "duration": 160,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', appServicesLocation + '/Geochronologies', {\n  'qs': {datasetId: 1001},\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "bfe154dd-55be-4762-b168-25fedfd885b4",
                  "parentUUID": "6f5da7e7-78df-4bb4-a190-24953e2bf290",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9f96d570-a92e-47d0-a339-6df1f6c39173",
                "f96b30b8-812f-480e-96fb-cbd48c9d53d4",
                "00e02f34-a176-4a64-aeda-87833c4f6a45",
                "8a5bbda5-fc7c-4f0c-b36f-11a7c8ba4f51",
                "38aef756-814f-45b5-806f-0863fc91bd93",
                "d742f501-a2a0-49e2-bb75-8b7d296fcf13",
                "289c1af8-4982-42fe-923a-6015eab1cf07",
                "4ddf6c3e-4cac-4699-a904-4fa625479beb",
                "79cf72bf-00b8-4f7c-9fcc-1b7c1eb4aa0f",
                "f7770968-ea11-475a-b0d2-12e0071fe07b",
                "4496595c-5569-43c0-b97b-4d1b49bf2939",
                "da6d67cc-d31c-4a2b-81cd-022c4d171341",
                "bfe154dd-55be-4762-b168-25fedfd885b4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4716,
              "root": false,
              "rootEmpty": false,
              "_timeout": 12000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 12000
        },
        {
          "uuid": "6c0da21f-14f5-427c-9eff-dabe9de6c239",
          "title": "Get geopolitical data:",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/geopolitical.js",
          "file": "/test/geopolitical.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "An empty query returns a valid response.",
              "fullTitle": "Get geopolitical data: An empty query returns a valid response.",
              "timedOut": false,
              "duration": 162,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/geopoliticalunits/')\n    .set('Accept', 'application/json')\n    .expect(200, done);",
              "err": {},
              "uuid": "e4fe82b7-cb31-4a75-8310-f030d633196f",
              "parentUUID": "6c0da21f-14f5-427c-9eff-dabe9de6c239",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The default limit of 25 should be reached for country level data:",
              "fullTitle": "Get geopolitical data: The default limit of 25 should be reached for country level data:",
              "timedOut": false,
              "duration": 155,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/geopoliticalunits/?rank=1')\n    .set('Accept', 'application/json')\n    .end(function(err, res) {\n      assert.equal(res.body.data.length, 25);\n      done();\n    });",
              "err": {},
              "uuid": "ee84726a-06c8-4325-a3b4-0047ffd57863",
              "parentUUID": "6c0da21f-14f5-427c-9eff-dabe9de6c239",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Changing the limit should change the number of countries retrieved:",
              "fullTitle": "Get geopolitical data: Changing the limit should change the number of countries retrieved:",
              "timedOut": false,
              "duration": 163,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/geopoliticalunits/?rank=1&limit=30')\n    .set('Accept', 'application/json')\n    .end(function(err, res) {\n      assert.equal(res.body.data.length, 30);\n      done();\n    });",
              "err": {},
              "uuid": "706ab253-85c4-47b5-b7e4-15025dcaa8d3",
              "parentUUID": "6c0da21f-14f5-427c-9eff-dabe9de6c239",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "A single geopolitical unit (12) should be returned.",
              "fullTitle": "Get geopolitical data: A single geopolitical unit (12) should be returned.",
              "timedOut": false,
              "duration": 153,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2.0/data/geopoliticalunits/12')\n    .set('Accept', 'application/json')\n    .end(function(err, res) {\n      assert.equal(res.body.data[0]['geopoliticalid'], 12);\n      done();\n    });",
              "err": {},
              "uuid": "4a78f78c-7538-48a2-8b1e-02c55e05c179",
              "parentUUID": "6c0da21f-14f5-427c-9eff-dabe9de6c239",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e4fe82b7-cb31-4a75-8310-f030d633196f",
            "ee84726a-06c8-4325-a3b4-0047ffd57863",
            "706ab253-85c4-47b5-b7e4-15025dcaa8d3",
            "4a78f78c-7538-48a2-8b1e-02c55e05c179"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 633,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "709d09e3-e701-4f9c-8043-c84b73dc5477",
          "title": "tests for /v2.0/data/datasets_elc/{datasetid}",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-datasets_elc-{datasetid}-test.js",
          "file": "/test/v2.0-data-datasets_elc-{datasetid}-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ac9cb119-3b8d-4e70-9efe-c30b3a74dcb9",
              "title": "tests for get",
              "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/v2.0-data-datasets_elc-{datasetid}-test.js",
              "file": "/test/v2.0-data-datasets_elc-{datasetid}-test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond 200 for \"A Neotoma datasets object suitable for the EarthLife Consortium API.\"",
                  "fullTitle": "tests for /v2.0/data/datasets_elc/{datasetid} tests for get should respond 200 for \"A Neotoma datasets object suitable for the EarthLife Consortium API.\"",
                  "timedOut": false,
                  "duration": 890,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = request('get', 'http://neotomaapi-env.eba-wd29jtvf.us-east-2.elasticbeanstalk.com/v2.0/data/datasets_elc/500', {\n  'time': true,\n});\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
                  "err": {},
                  "uuid": "28ca1ec0-98f0-4edc-887a-91578d9dec46",
                  "parentUUID": "ac9cb119-3b8d-4e70-9efe-c30b3a74dcb9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "28ca1ec0-98f0-4edc-887a-91578d9dec46"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 890,
              "root": false,
              "rootEmpty": false,
              "_timeout": 300000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "389f21c3-6048-40ea-acf7-63bdf14d9694",
          "title": "Any path goes to the api documentation:",
          "fullFile": "/home/simon/Documents/Neotoma/api_nodetest/test/neotoma_test.js",
          "file": "/test/neotoma_test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "`api-docs` redirects to the api documentation.",
              "fullTitle": "Any path goes to the api documentation: `api-docs` redirects to the api documentation.",
              "timedOut": false,
              "duration": 147,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.get('v2')\n    .set('Accept', 'application/json')\n    .expect(302, done);",
              "err": {},
              "uuid": "db3edace-59af-49c6-b2d7-6de0bf494ca6",
              "parentUUID": "389f21c3-6048-40ea-acf7-63bdf14d9694",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db3edace-59af-49c6-b2d7-6de0bf494ca6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 147,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 300000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.0.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "tests",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "reportDir": "public",
        "reportFilename": "tests"
      },
      "version": "5.2.0"
    }
  }
}